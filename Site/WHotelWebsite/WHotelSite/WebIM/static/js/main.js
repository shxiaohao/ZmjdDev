function MagiCallClientHeart() { easemobim.emajax({ type: "GET", url: "/api/MagiCallAPI/MagiCallClientHeart", data: { userid: userID }, success: function (e) { }, error: function (e, t) { }, cache: !1 }) } function MagiCallClientMessage(e, t) { easemobim.emajax({ type: "POST", url: "/api/MagiCallAPI/MagiCallClientMessage", data: { UserID: userID, messageType: e, msg: t }, success: function (e) { }, error: function (e, t) { }, cache: !1 }) } function startWith(e, t) { return 0 == e.indexOf(t) } function dealWHAPPMsg(e, t, n) { var s = 0; return startWith(e.value, "WHAPP:") && (n.sendTextMsg(e.value), s = 1), s } function sentWelcomeMsg(e) { } function afterUserSendMsg(e, t) { 0 == isTodayFirstMessage && sentWaitingMsg(e) } function sentWaitingMsg(e) { isTodayFirstMessage = 1 } function ShowWHAppMsg(e, t) { return ["<div id='" + e + "' class='easemobWidget-left'>", "<div class='WebimKeFuHeadPhoto'><img src='" + kefuHeadPhoto + "' alt='KeFuHeadPhoto' /></div>", "<div class='easemobWidget-msg-wrapper'>", "<i class='easemobWidget-corner'></i>", "<div class='easemobWidget-msg-container'>", ParseWHAppMsg(t), "</div>", "</div>", "</div>"].join("") } function ParseWHAppMsg(e) { if (e = strToHTML(e), e.length > 6) { if ("WHAPP:" == e.substring(0, 6)) { var t = e.substring(6); if ("{" != t.substring(0, 1)) return ParseWHAppMsgPlat(e); var n = JSON.parse(t); switch (n.feedbackType) { case 3: return GenChoiceHtml(n, messageType_UserAction_ClickChoice); case 10: return GenRequireHotelPriceHtml(n); case 11: return GenChoiceHtml(n, messageType_UserAction_RequirePrice_ClickChoice) } } } } function GenRequireHotelPriceHtml(e) { var t = ""; t += "<div class='require-hotel-price' >", e.title && (t = t + "<div  class='title'>" + e.title + "</div>"); var n = e.packageInfo; return t += '<div class="row"   >', t += '   <div class="left">', t += '       <div class="pn">' + n.hotelName + "</div>", t += '       <div class="pn">' + n.PCode + "</div>", t += '       <div class="pn">' + FormatDate(n.checkIn) + "入住 &nbsp;" + FormatDate(n.checkOut) + "离店</div>", t += "   </div>", t += "</div>", t += "</div>" } function FormatDate(e) { return new Date(Date.parse(e)).format("MM-dd") } function GenChoiceHtml(e, t) { var n = ""; n += "<div class='choice-list' >", e.title && (n = n + "<div  class='title'>" + e.title + "</div>"); for (var s in e.items) { var i = e.items[s]; n += '<div class="row"  onclick=\'UserClickChoice(' + i.idx + "," + t + ")'>", n += '   <div class="left">', n += '       <div class="pn">' + i.content + "</div>", n += "   </div>", n += '   <div class="right r-c1" ></div> ', n += "</div>" } return n += "</div>" } function UserClickChoice(e, t) { var n = '{"ActionType":' + t + ',"ID":' + e + "}"; n = n.replace(/\"/g, '\\"'), MagiCallClientMessage(messageType_UserAction, n) } function ParseWHAppMsgPlat(t) { var n = "", s = t.substring(6), i = s.split(","); switch (i[0]) { case "hotel": var o = i[1], a = i[2]; n = n + '<a href="' + (isAPP ? "whotelapp" : "http") + "://www.zmjiudian.com/hotel/" + o + '" > ' + a + "</a>"; break; case "pichotel": var r = i[1], l = i[2]; b = i[3], d = i[4], e = i[5], f = i[6], g = i[7], h = i[8], n = n + "<p>" + hotletoTable(r, l, b, d, e, f, g, h) + "</p>"; break; case "html": n = n + "<p>" + strToHTML(i[1]) + "</p>"; break; default: n += n + "<p>" + i.join(",") + "</p>" } return n } function strToHTML(e) { return e.replace(/\&gt;/g, ">").replace(/\&lt;/g, "<").replace(/\&quot;/g, '"') } function hotletoTable(e, t, n, s, i, o, a, r) { var d = isAPP ? "whotelapp" : "http", l = "<table>"; return l += "<tr><td width='30%' valign='top'><a class='a1' href='" + d + "://www.zmjiudian.com/hotel/" + e + "'><img style='display:inline-block' src='" + n + "' width='60px'  height='60px'/></a></td>", l += "<td width='70%' style='font-weight:500'><a class='a1' href='" + d + "://www.zmjiudian.com/hotel/" + e + "'><p>" + t + "</p><p class='linefont'><span class='s1'>" + o + i + "</span> 起  <span>" + s + "/5分</span></p></a></td></tr>", "" == a && "" == r || (a = a.length > 17 ? a.substring(0, 17) + "..." : a, r = r.length > 17 ? r.substring(0, 17) + "..." : r, l += "<tr><td colspan='2'><hr class='hr1'></td></tr>", "" != a && (l += "<tr><td colspan='2'><span class='zmjd-iconfont'>&#xe631;</span>:" + a + "</td></tr>"), "" != r && (l += "<tr><td colspan='2'><span class='zmjd-iconfont'>&#xe632;</span>:" + r + "</td></tr>")), l } function strTansNewLine(e) { return e.replace("<br/>", "\r\n") } !function (e) {
    if (function (e, t) { e.Base64 = t() }(this, function () { var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; return { encode: function (t) { var n, s, i, o, a, r, d, l = "", c = 0; do { n = t.charCodeAt(c++), s = t.charCodeAt(c++), i = t.charCodeAt(c++), o = n >> 2, a = (3 & n) << 4 | s >> 4, r = (15 & s) << 2 | i >> 6, d = 63 & i, isNaN(s) ? (a = (3 & n) << 4, r = d = 64) : isNaN(i) && (d = 64), l = l + e.charAt(o) + e.charAt(a) + e.charAt(r) + e.charAt(d) } while (c < t.length); return l }, decode: function (t) { var n, s, i, o, a, r, d, l = "", c = 0; t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); do { o = e.indexOf(t.charAt(c++)), a = e.indexOf(t.charAt(c++)), r = e.indexOf(t.charAt(c++)), d = e.indexOf(t.charAt(c++)), n = o << 2 | a >> 4, s = (15 & a) << 4 | r >> 2, i = (3 & r) << 6 | d, l += String.fromCharCode(n), 64 != r && (l += String.fromCharCode(s)), 64 != d && (l += String.fromCharCode(i)) } while (c < t.length); return l } } }), function (e, t) { e.SHA1 = t() }(this, function () { function e(e, s) { e[s >> 5] |= 128 << 24 - s % 32, e[15 + (s + 64 >> 9 << 4)] = s; var a, r, d, l, c, m, u, h, p = new Array(80), g = 1732584193, f = -271733879, b = -1732584194, _ = 271733878, v = -1009589776; for (a = 0; a < e.length; a += 16) { for (l = g, c = f, m = b, u = _, h = v, r = 0; r < 80; r++) p[r] = r < 16 ? e[a + r] : o(p[r - 3] ^ p[r - 8] ^ p[r - 14] ^ p[r - 16], 1), d = i(i(o(g, 5), t(r, f, b, _)), i(i(v, p[r]), n(r))), v = _, _ = b, b = o(f, 30), f = g, g = d; g = i(g, l), f = i(f, c), b = i(b, m), _ = i(_, u), v = i(v, h) } return [g, f, b, _, v] } function t(e, t, n, s) { return e < 20 ? t & n | ~t & s : e < 40 ? t ^ n ^ s : e < 60 ? t & n | t & s | n & s : t ^ n ^ s } function n(e) { return e < 20 ? 1518500249 : e < 40 ? 1859775393 : e < 60 ? -1894007588 : -899497514 } function s(t, n) { var s = a(t); s.length > 16 && (s = e(s, 8 * t.length)); for (var i = new Array(16), o = new Array(16), r = 0; r < 16; r++) i[r] = 909522486 ^ s[r], o[r] = 1549556828 ^ s[r]; var d = e(i.concat(a(n)), 512 + 8 * n.length); return e(o.concat(d), 672) } function i(e, t) { var n = (65535 & e) + (65535 & t); return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n } function o(e, t) { return e << t | e >>> 32 - t } function a(e) { for (var t = [], n = 0; n < 8 * e.length; n += 8) t[n >> 5] |= (255 & e.charCodeAt(n / 8)) << 24 - n % 32; return t } function r(e) { for (var t = "", n = 0; n < 32 * e.length; n += 8) t += String.fromCharCode(e[n >> 5] >>> 24 - n % 32 & 255); return t } function d(e) { for (var t, n, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = "", o = 0; o < 4 * e.length; o += 3) for (t = (e[o >> 2] >> 8 * (3 - o % 4) & 255) << 16 | (e[o + 1 >> 2] >> 8 * (3 - (o + 1) % 4) & 255) << 8 | e[o + 2 >> 2] >> 8 * (3 - (o + 2) % 4) & 255, n = 0; n < 4; n++) i += 8 * o + 6 * n > 32 * e.length ? "=" : s.charAt(t >> 6 * (3 - n) & 63); return i } return { b64_hmac_sha1: function (e, t) { return d(s(e, t)) }, b64_sha1: function (t) { return d(e(a(t), 8 * t.length)) }, binb2str: r, core_hmac_sha1: s, str_hmac_sha1: function (e, t) { return r(s(e, t)) }, str_sha1: function (t) { return r(e(a(t), 8 * t.length)) } } }), function (e, t) { e.MD5 = t() }(this, function (e) { var t = function (e, t) { var n = (65535 & e) + (65535 & t); return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n }, n = function (e, t) { return e << t | e >>> 32 - t }, s = function (e) { for (var t = [], n = 0; n < 8 * e.length; n += 8) t[n >> 5] |= (255 & e.charCodeAt(n / 8)) << n % 32; return t }, i = function (e) { for (var t = "", n = 0; n < 32 * e.length; n += 8) t += String.fromCharCode(e[n >> 5] >>> n % 32 & 255); return t }, o = function (e) { for (var t = "0123456789abcdef", n = "", s = 0; s < 4 * e.length; s++) n += t.charAt(e[s >> 2] >> s % 4 * 8 + 4 & 15) + t.charAt(e[s >> 2] >> s % 4 * 8 & 15); return n }, a = function (e, s, i, o, a, r) { return t(n(t(t(s, e), t(o, r)), a), i) }, r = function (e, t, n, s, i, o, r) { return a(t & n | ~t & s, e, t, i, o, r) }, d = function (e, t, n, s, i, o, r) { return a(t & s | n & ~s, e, t, i, o, r) }, l = function (e, t, n, s, i, o, r) { return a(t ^ n ^ s, e, t, i, o, r) }, c = function (e, t, n, s, i, o, r) { return a(n ^ (t | ~s), e, t, i, o, r) }, m = function (e, n) { e[n >> 5] |= 128 << n % 32, e[14 + (n + 64 >>> 9 << 4)] = n; for (var s, i, o, a, m = 1732584193, u = -271733879, h = -1732584194, p = 271733878, g = 0; g < e.length; g += 16) s = m, i = u, o = h, a = p, m = r(m, u, h, p, e[g + 0], 7, -680876936), p = r(p, m, u, h, e[g + 1], 12, -389564586), h = r(h, p, m, u, e[g + 2], 17, 606105819), u = r(u, h, p, m, e[g + 3], 22, -1044525330), m = r(m, u, h, p, e[g + 4], 7, -176418897), p = r(p, m, u, h, e[g + 5], 12, 1200080426), h = r(h, p, m, u, e[g + 6], 17, -1473231341), u = r(u, h, p, m, e[g + 7], 22, -45705983), m = r(m, u, h, p, e[g + 8], 7, 1770035416), p = r(p, m, u, h, e[g + 9], 12, -1958414417), h = r(h, p, m, u, e[g + 10], 17, -42063), u = r(u, h, p, m, e[g + 11], 22, -1990404162), m = r(m, u, h, p, e[g + 12], 7, 1804603682), p = r(p, m, u, h, e[g + 13], 12, -40341101), h = r(h, p, m, u, e[g + 14], 17, -1502002290), u = r(u, h, p, m, e[g + 15], 22, 1236535329), m = d(m, u, h, p, e[g + 1], 5, -165796510), p = d(p, m, u, h, e[g + 6], 9, -1069501632), h = d(h, p, m, u, e[g + 11], 14, 643717713), u = d(u, h, p, m, e[g + 0], 20, -373897302), m = d(m, u, h, p, e[g + 5], 5, -701558691), p = d(p, m, u, h, e[g + 10], 9, 38016083), h = d(h, p, m, u, e[g + 15], 14, -660478335), u = d(u, h, p, m, e[g + 4], 20, -405537848), m = d(m, u, h, p, e[g + 9], 5, 568446438), p = d(p, m, u, h, e[g + 14], 9, -1019803690), h = d(h, p, m, u, e[g + 3], 14, -187363961), u = d(u, h, p, m, e[g + 8], 20, 1163531501), m = d(m, u, h, p, e[g + 13], 5, -1444681467), p = d(p, m, u, h, e[g + 2], 9, -51403784), h = d(h, p, m, u, e[g + 7], 14, 1735328473), u = d(u, h, p, m, e[g + 12], 20, -1926607734), m = l(m, u, h, p, e[g + 5], 4, -378558), p = l(p, m, u, h, e[g + 8], 11, -2022574463), h = l(h, p, m, u, e[g + 11], 16, 1839030562), u = l(u, h, p, m, e[g + 14], 23, -35309556), m = l(m, u, h, p, e[g + 1], 4, -1530992060), p = l(p, m, u, h, e[g + 4], 11, 1272893353), h = l(h, p, m, u, e[g + 7], 16, -155497632), u = l(u, h, p, m, e[g + 10], 23, -1094730640), m = l(m, u, h, p, e[g + 13], 4, 681279174), p = l(p, m, u, h, e[g + 0], 11, -358537222), h = l(h, p, m, u, e[g + 3], 16, -722521979), u = l(u, h, p, m, e[g + 6], 23, 76029189), m = l(m, u, h, p, e[g + 9], 4, -640364487), p = l(p, m, u, h, e[g + 12], 11, -421815835), h = l(h, p, m, u, e[g + 15], 16, 530742520), u = l(u, h, p, m, e[g + 2], 23, -995338651), m = c(m, u, h, p, e[g + 0], 6, -198630844), p = c(p, m, u, h, e[g + 7], 10, 1126891415), h = c(h, p, m, u, e[g + 14], 15, -1416354905), u = c(u, h, p, m, e[g + 5], 21, -57434055), m = c(m, u, h, p, e[g + 12], 6, 1700485571), p = c(p, m, u, h, e[g + 3], 10, -1894986606), h = c(h, p, m, u, e[g + 10], 15, -1051523), u = c(u, h, p, m, e[g + 1], 21, -2054922799), m = c(m, u, h, p, e[g + 8], 6, 1873313359), p = c(p, m, u, h, e[g + 15], 10, -30611744), h = c(h, p, m, u, e[g + 6], 15, -1560198380), u = c(u, h, p, m, e[g + 13], 21, 1309151649), m = c(m, u, h, p, e[g + 4], 6, -145523070), p = c(p, m, u, h, e[g + 11], 10, -1120210379), h = c(h, p, m, u, e[g + 2], 15, 718787259), u = c(u, h, p, m, e[g + 9], 21, -343485551), m = t(m, s), u = t(u, i), h = t(h, o), p = t(p, a); return [m, u, h, p] }; return { hexdigest: function (e) { return o(m(s(e), 8 * e.length)) }, hash: function (e) { return i(m(s(e), 8 * e.length)) } } }), Function.prototype.stropheBind || (Function.prototype.stropheBind = function (e) { var t = this, n = Array.prototype.slice, s = Array.prototype.concat, i = n.call(arguments, 1); return function () { return t.apply(e ? e : this, s.call(i, n.call(arguments, 0))) } }), Array.isArray || (Array.isArray = function (e) { return "[object Array]" === Object.prototype.toString.call(e) }), Array.prototype.indexOf || (Array.prototype.indexOf = function (e) { var t = this.length, n = Number(arguments[1]) || 0; for (n = n < 0 ? Math.ceil(n) : Math.floor(n), n < 0 && (n += t) ; n < t; n++) if (n in this && this[n] === e) return n; return -1 }), function (e, t) { var n = t(e.SHA1, e.Base64, e.MD5); window.Strophe = n.Strophe, window.$build = n.$build, window.$iq = n.$iq, window.$msg = n.$msg, window.$pres = n.$pres, window.SHA1 = n.SHA1, window.Base64 = n.Base64, window.MD5 = n.MD5, window.b64_hmac_sha1 = n.SHA1.b64_hmac_sha1, window.b64_sha1 = n.SHA1.b64_sha1, window.str_hmac_sha1 = n.SHA1.str_hmac_sha1, window.str_sha1 = n.SHA1.str_sha1 }(this, function (e, t, n) {
    function s(e, t) { return new r.Builder(e, t) } function i(e) { return new r.Builder("message", e) } function o(e) { return new r.Builder("iq", e) } function a(e) { return new r.Builder("presence", e) } var r; return r = { VERSION: "1.2.2", NS: { HTTPBIND: "http://jabber.org/protocol/httpbind", BOSH: "urn:xmpp:xbosh", CLIENT: "jabber:client", AUTH: "jabber:iq:auth", ROSTER: "jabber:iq:roster", PROFILE: "jabber:iq:profile", DISCO_INFO: "http://jabber.org/protocol/disco#info", DISCO_ITEMS: "http://jabber.org/protocol/disco#items", MUC: "http://jabber.org/protocol/muc", SASL: "urn:ietf:params:xml:ns:xmpp-sasl", STREAM: "http://etherx.jabber.org/streams", FRAMING: "urn:ietf:params:xml:ns:xmpp-framing", BIND: "urn:ietf:params:xml:ns:xmpp-bind", SESSION: "urn:ietf:params:xml:ns:xmpp-session", VERSION: "jabber:iq:version", STANZAS: "urn:ietf:params:xml:ns:xmpp-stanzas", XHTML_IM: "http://jabber.org/protocol/xhtml-im", XHTML: "http://www.w3.org/1999/xhtml" }, XHTML: { tags: ["a", "blockquote", "br", "cite", "em", "img", "li", "ol", "p", "span", "strong", "ul", "body"], attributes: { a: ["href"], blockquote: ["style"], br: [], cite: ["style"], em: [], img: ["src", "alt", "style", "height", "width"], li: ["style"], ol: ["style"], p: ["style"], span: ["style"], strong: [], ul: ["style"], body: [] }, css: ["background-color", "color", "font-family", "font-size", "font-style", "font-weight", "margin-left", "margin-right", "text-align", "text-decoration"], validTag: function (e) { for (var t = 0; t < r.XHTML.tags.length; t++) if (e == r.XHTML.tags[t]) return !0; return !1 }, validAttribute: function (e, t) { if (void 0 !== r.XHTML.attributes[e] && r.XHTML.attributes[e].length > 0) for (var n = 0; n < r.XHTML.attributes[e].length; n++) if (t == r.XHTML.attributes[e][n]) return !0; return !1 }, validCSS: function (e) { for (var t = 0; t < r.XHTML.css.length; t++) if (e == r.XHTML.css[t]) return !0; return !1 } }, Status: { ERROR: 0, CONNECTING: 1, CONNFAIL: 2, AUTHENTICATING: 3, AUTHFAIL: 4, CONNECTED: 5, DISCONNECTED: 6, DISCONNECTING: 7, ATTACHED: 8, REDIRECT: 9 }, LogLevel: { DEBUG: 0, INFO: 1, WARN: 2, ERROR: 3, FATAL: 4 }, ElementType: { NORMAL: 1, TEXT: 3, CDATA: 4, FRAGMENT: 11 }, TIMEOUT: 1.1, SECONDARY_TIMEOUT: .1, addNamespace: function (e, t) { r.NS[e] = t }, forEachChild: function (e, t, n) { var s, i; for (s = 0; s < e.childNodes.length; s++) i = e.childNodes[s], i.nodeType != r.ElementType.NORMAL || t && !this.isTagEqual(i, t) || n(i) }, isTagEqual: function (e, t) { return e.tagName == t }, _xmlGenerator: null, _makeGenerator: function () { var e; return void 0 === document.implementation.createDocument || document.implementation.createDocument && document.documentMode && document.documentMode < 10 ? (e = this._getIEXmlDom(), e.appendChild(e.createElement("strophe"))) : e = document.implementation.createDocument("jabber:client", "strophe", null), e }, xmlGenerator: function () { return r._xmlGenerator || (r._xmlGenerator = r._makeGenerator()), r._xmlGenerator }, _getIEXmlDom: function () { for (var e = null, t = ["Msxml2.DOMDocument.6.0", "Msxml2.DOMDocument.5.0", "Msxml2.DOMDocument.4.0", "MSXML2.DOMDocument.3.0", "MSXML2.DOMDocument", "MSXML.DOMDocument", "Microsoft.XMLDOM"], n = 0; n < t.length && null === e; n++) try { e = new ActiveXObject(t[n]) } catch (t) { e = null } return e }, xmlElement: function (e) { if (!e) return null; var t, n, s, i = r.xmlGenerator().createElement(e); for (t = 1; t < arguments.length; t++) { var o = arguments[t]; if (o) if ("string" == typeof o || "number" == typeof o) i.appendChild(r.xmlTextNode(o)); else if ("object" == typeof o && "function" == typeof o.sort) for (n = 0; n < o.length; n++) { var a = o[n]; "object" == typeof a && "function" == typeof a.sort && void 0 !== a[1] && i.setAttribute(a[0], a[1]) } else if ("object" == typeof o) for (s in o) o.hasOwnProperty(s) && void 0 !== o[s] && i.setAttribute(s, o[s]) } return i }, xmlescape: function (e) { return e = e.replace(/\&/g, "&amp;"), e = e.replace(/</g, "&lt;"), e = e.replace(/>/g, "&gt;"), e = e.replace(/'/g, "&apos;"), e = e.replace(/"/g, "&quot;") }, xmlunescape: function (e) { return e = e.replace(/\&amp;/g, "&"), e = e.replace(/&lt;/g, "<"), e = e.replace(/&gt;/g, ">"), e = e.replace(/&apos;/g, "'"), e = e.replace(/&quot;/g, '"') }, xmlTextNode: function (e) { return r.xmlGenerator().createTextNode(e) }, xmlHtmlNode: function (e) { var t; if (window.DOMParser) { t = (new DOMParser).parseFromString(e, "text/xml") } else t = new ActiveXObject("Microsoft.XMLDOM"), t.async = "false", t.loadXML(e); return t }, getText: function (e) { if (!e) return null; var t = ""; 0 === e.childNodes.length && e.nodeType == r.ElementType.TEXT && (t += e.nodeValue); for (var n = 0; n < e.childNodes.length; n++) e.childNodes[n].nodeType == r.ElementType.TEXT && (t += e.childNodes[n].nodeValue); return r.xmlescape(t) }, copyElement: function (e) { var t, n; if (e.nodeType == r.ElementType.NORMAL) { for (n = r.xmlElement(e.tagName), t = 0; t < e.attributes.length; t++) n.setAttribute(e.attributes[t].nodeName, e.attributes[t].value); for (t = 0; t < e.childNodes.length; t++) n.appendChild(r.copyElement(e.childNodes[t])) } else e.nodeType == r.ElementType.TEXT && (n = r.xmlGenerator().createTextNode(e.nodeValue)); return n }, createHtml: function (e) { var t, n, s, i, o, a, d, l, c, m, u; if (e.nodeType == r.ElementType.NORMAL) if (i = e.nodeName.toLowerCase(), r.XHTML.validTag(i)) try { for (n = r.xmlElement(i), t = 0; t < r.XHTML.attributes[i].length; t++) if (o = r.XHTML.attributes[i][t], void 0 !== (a = e.getAttribute(o)) && null !== a && "" !== a && a !== !1 && 0 !== a) if ("style" == o && "object" == typeof a && void 0 !== a.cssText && (a = a.cssText), "style" == o) { for (d = [], l = a.split(";"), s = 0; s < l.length; s++) c = l[s].split(":"), m = c[0].replace(/^\s*/, "").replace(/\s*$/, "").toLowerCase(), r.XHTML.validCSS(m) && (u = c[1].replace(/^\s*/, "").replace(/\s*$/, ""), d.push(m + ": " + u)); d.length > 0 && (a = d.join("; "), n.setAttribute(o, a)) } else n.setAttribute(o, a); for (t = 0; t < e.childNodes.length; t++) n.appendChild(r.createHtml(e.childNodes[t])) } catch (e) { n = r.xmlTextNode("") } else for (n = r.xmlGenerator().createDocumentFragment(), t = 0; t < e.childNodes.length; t++) n.appendChild(r.createHtml(e.childNodes[t])); else if (e.nodeType == r.ElementType.FRAGMENT) for (n = r.xmlGenerator().createDocumentFragment(), t = 0; t < e.childNodes.length; t++) n.appendChild(r.createHtml(e.childNodes[t])); else e.nodeType == r.ElementType.TEXT && (n = r.xmlTextNode(e.nodeValue)); return n }, escapeNode: function (e) { return "string" != typeof e ? e : e.replace(/^\s+|\s+$/g, "").replace(/\\/g, "\\5c").replace(/ /g, "\\20").replace(/\"/g, "\\22").replace(/\&/g, "\\26").replace(/\'/g, "\\27").replace(/\//g, "\\2f").replace(/:/g, "\\3a").replace(/</g, "\\3c").replace(/>/g, "\\3e").replace(/@/g, "\\40") }, unescapeNode: function (e) { return "string" != typeof e ? e : e.replace(/\\20/g, " ").replace(/\\22/g, '"').replace(/\\26/g, "&").replace(/\\27/g, "'").replace(/\\2f/g, "/").replace(/\\3a/g, ":").replace(/\\3c/g, "<").replace(/\\3e/g, ">").replace(/\\40/g, "@").replace(/\\5c/g, "\\") }, getNodeFromJid: function (e) { return e.indexOf("@") < 0 ? null : e.split("@")[0] }, getDomainFromJid: function (e) { var t = r.getBareJidFromJid(e); if (t.indexOf("@") < 0) return t; var n = t.split("@"); return n.splice(0, 1), n.join("@") }, getResourceFromJid: function (e) { var t = e.split("/"); return t.length < 2 ? null : (t.splice(0, 1), t.join("/")) }, getBareJidFromJid: function (e) { return e ? e.split("/")[0] : null }, log: function (e, t) { }, debug: function (e) { this.log(this.LogLevel.DEBUG, e) }, info: function (e) { this.log(this.LogLevel.INFO, e) }, warn: function (e) { this.log(this.LogLevel.WARN, e) }, error: function (e) { this.log(this.LogLevel.ERROR, e) }, fatal: function (e) { this.log(this.LogLevel.FATAL, e) }, serialize: function (e) { var t; if (!e) return null; "function" == typeof e.tree && (e = e.tree()); var n, s, i = e.nodeName; for (e.getAttribute("_realname") && (i = e.getAttribute("_realname")), t = "<" + i, n = 0; n < e.attributes.length; n++) "_realname" != e.attributes[n].nodeName && (t += " " + e.attributes[n].nodeName + "='" + e.attributes[n].value.replace(/&/g, "&amp;").replace(/\'/g, "&apos;").replace(/>/g, "&gt;").replace(/</g, "&lt;") + "'"); if (e.childNodes.length > 0) { for (t += ">", n = 0; n < e.childNodes.length; n++) switch (s = e.childNodes[n], s.nodeType) { case r.ElementType.NORMAL: t += r.serialize(s); break; case r.ElementType.TEXT: t += r.xmlescape(s.nodeValue); break; case r.ElementType.CDATA: t += "<![CDATA[" + s.nodeValue + "]]>" } t += "</" + i + ">" } else t += "/>"; return t }, _requestId: 0, _connectionPlugins: {}, addConnectionPlugin: function (e, t) { r._connectionPlugins[e] = t } }, r.Builder = function (e, t) { "presence" != e && "message" != e && "iq" != e || (t && !t.xmlns ? t.xmlns = r.NS.CLIENT : t || (t = { xmlns: r.NS.CLIENT })), this.nodeTree = r.xmlElement(e, t), this.node = this.nodeTree }, r.Builder.prototype = { tree: function () { return this.nodeTree }, toString: function () { return r.serialize(this.nodeTree) }, up: function () { return this.node = this.node.parentNode, this }, attrs: function (e) { for (var t in e) e.hasOwnProperty(t) && (void 0 === e[t] ? this.node.removeAttribute(t) : this.node.setAttribute(t, e[t])); return this }, c: function (e, t, n) { var s = r.xmlElement(e, t, n); return this.node.appendChild(s), "string" != typeof n && (this.node = s), this }, cnode: function (e) { var t, n = r.xmlGenerator(); try { t = void 0 !== n.importNode } catch (e) { t = !1 } var s = t ? n.importNode(e, !0) : r.copyElement(e); return this.node.appendChild(s), this.node = s, this }, t: function (e) { var t = r.xmlTextNode(e); return this.node.appendChild(t), this }, h: function (e) { var t = document.createElement("body"); t.innerHTML = e; for (var n = r.createHtml(t) ; n.childNodes.length > 0;) this.node.appendChild(n.childNodes[0]); return this } }, r.Handler = function (e, t, n, s, i, o, a) { this.handler = e, this.ns = t, this.name = n, this.type = s, this.id = i, this.options = a || { matchBare: !1 }, this.options.matchBare || (this.options.matchBare = !1), this.options.matchBare ? this.from = o ? r.getBareJidFromJid(o) : null : this.from = o, this.user = !0 }, r.Handler.prototype = { isMatch: function (e) { var t, n = null; if (n = this.options.matchBare ? r.getBareJidFromJid(e.getAttribute("from")) : e.getAttribute("from"), t = !1, this.ns) { var s = this; r.forEachChild(e, null, function (e) { e.getAttribute("xmlns") == s.ns && (t = !0) }), t = t || e.getAttribute("xmlns") == this.ns } else t = !0; var i = e.getAttribute("type"); return !(!t || this.name && !r.isTagEqual(e, this.name) || this.type && (Array.isArray(this.type) ? this.type.indexOf(i) == -1 : i != this.type) || this.id && e.getAttribute("id") != this.id || this.from && n != this.from) }, run: function (e) { var t = null; try { t = this.handler(e) } catch (e) { throw e.sourceURL ? r.fatal("error: " + this.handler + " " + e.sourceURL + ":" + e.line + " - " + e.name + ": " + e.message) : e.fileName ? ("undefined" != typeof console && (console.trace(), console.error(this.handler, " - error - ", e, e.message)), r.fatal("error: " + this.handler + " " + e.fileName + ":" + e.lineNumber + " - " + e.name + ": " + e.message)) : r.fatal("error: " + e.message + "\n" + e.stack), e } return t }, toString: function () { return "{Handler: " + this.handler + "(" + this.name + "," + this.id + "," + this.ns + ")}" } }, r.TimedHandler = function (e, t) { this.period = e, this.handler = t, this.lastCalled = (new Date).getTime(), this.user = !0 }, r.TimedHandler.prototype = { run: function () { return this.lastCalled = (new Date).getTime(), this.handler() }, reset: function () { this.lastCalled = (new Date).getTime() }, toString: function () { return "{TimedHandler: " + this.handler + "(" + this.period + ")}" } }, r.Connection = function (e, t) { this.service = e, this.options = t || {}; var n = this.options.protocol || ""; 0 === e.indexOf("ws:") || 0 === e.indexOf("wss:") || 0 === n.indexOf("ws") ? this._proto = new r.Websocket(this) : this._proto = new r.Bosh(this), this.jid = "", this.domain = null, this.features = null, this._sasl_data = {}, this.do_session = !1, this.do_bind = !1, this.timedHandlers = [], this.handlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this._authentication = {}, this._idleTimeout = null, this._disconnectTimeout = null, this.authenticated = !1, this.connected = !1, this.disconnecting = !1, this.do_authentication = !0, this.paused = !1, this.restored = !1, this._data = [], this._uniqueId = 0, this._sasl_success_handler = null, this._sasl_failure_handler = null, this._sasl_challenge_handler = null, this.maxRetries = 5, this._idleTimeout = setTimeout(this._onIdle.stropheBind(this), 100); for (var s in r._connectionPlugins) if (r._connectionPlugins.hasOwnProperty(s)) { var i = r._connectionPlugins[s], o = function () { }; o.prototype = i, this[s] = new o, this[s].init(this) } }, r.Connection.prototype = {
        reset: function () { this._proto._reset(), this.do_session = !1, this.do_bind = !1, this.timedHandlers = [], this.handlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this._authentication = {}, this.authenticated = !1, this.connected = !1, this.disconnecting = !1, this.restored = !1, this._data = [], this._requests = [], this._uniqueId = 0 }, pause: function () { this.paused = !0 }, resume: function () { this.paused = !1 }, getUniqueId: function (e) { return "string" == typeof e || "number" == typeof e ? ++this._uniqueId + ":" + e : ++this._uniqueId + "" }, connect: function (e, t, n, s, i, o, a) { this.jid = e, this.authzid = r.getBareJidFromJid(this.jid), this.authcid = a || r.getNodeFromJid(this.jid), this.pass = t, this.servtype = "xmpp", this.connect_callback = n, this.disconnecting = !1, this.connected = !1, this.authenticated = !1, this.restored = !1, this.domain = r.getDomainFromJid(this.jid), this._changeConnectStatus(r.Status.CONNECTING, null), this._proto._connect(s, i, o) }, attach: function (e, t, n, s, i, o, a) { if (!(this._proto instanceof r.Bosh)) throw { name: "StropheSessionError", message: 'The "attach" method can only be used with a BOSH connection.' }; this._proto._attach(e, t, n, s, i, o, a) }, restore: function (e, t, n, s, i) { if (!this._sessionCachingSupported()) throw { name: "StropheSessionError", message: 'The "restore" method can only be used with a BOSH connection.' }; this._proto._restore(e, t, n, s, i) }, _sessionCachingSupported: function () { if (this._proto instanceof r.Bosh) { if (!JSON) return !1; try { window.sessionStorage.setItem("_strophe_", "_strophe_"), window.sessionStorage.removeItem("_strophe_") } catch (e) { return !1 } return !0 } return !1 }, xmlInput: function (e) { }, xmlOutput: function (e) { }, rawInput: function (e) { }, rawOutput: function (e) { }, send: function (e) { if (null !== e) { if ("function" == typeof e.sort) for (var t = 0; t < e.length; t++) this._queueData(e[t]); else "function" == typeof e.tree ? this._queueData(e.tree()) : this._queueData(e); this._proto._send() } }, flush: function () { clearTimeout(this._idleTimeout), this._onIdle() }, sendIQ: function (e, t, n, s) { var i = null, o = this; "function" == typeof e.tree && (e = e.tree()); var a = e.getAttribute("id"); a || (a = this.getUniqueId("sendIQ"), e.setAttribute("id", a)); var d = e.getAttribute("to"), l = this.jid, c = this.addHandler(function (e) { i && o.deleteTimedHandler(i); var s = !1, a = e.getAttribute("from"); if (a !== d && (null !== d || a !== r.getBareJidFromJid(l) && a !== r.getDomainFromJid(l) && a !== l) || (s = !0), !s) throw { name: "StropheError", message: "Got answer to IQ from wrong jid:" + a + "\nExpected jid: " + d }; var c = e.getAttribute("type"); if ("result" == c) t && t(e); else { if ("error" != c) throw { name: "StropheError", message: "Got bad IQ type of " + c }; n && n(e) } }, null, "iq", ["error", "result"], a); return s && (i = this.addTimedHandler(s, function () { return o.deleteHandler(c), n && n(null), !1 })), this.send(e), a }, _queueData: function (e) { if (null === e || !e.tagName || !e.childNodes) throw { name: "StropheError", message: "Cannot queue non-DOMElement." }; this._data.push(e) }, _sendRestart: function () { this._data.push("restart"), this._proto._sendRestart(), this._idleTimeout = setTimeout(this._onIdle.stropheBind(this), 100) }, addTimedHandler: function (e, t) { var n = new r.TimedHandler(e, t); return this.addTimeds.push(n), n }, deleteTimedHandler: function (e) { this.removeTimeds.push(e) }, addHandler: function (e, t, n, s, i, o, a) { var d = new r.Handler(e, t, n, s, i, o, a); return this.addHandlers.push(d), d }, deleteHandler: function (e) { this.removeHandlers.push(e); var t = this.addHandlers.indexOf(e); t >= 0 && this.addHandlers.splice(t, 1) }, disconnect: function (e) { if (this._changeConnectStatus(r.Status.DISCONNECTING, e), r.info("Disconnect was called because: " + e), this.connected) { var t = !1; this.disconnecting = !0, this.authenticated && (t = a({ xmlns: r.NS.CLIENT, type: "unavailable" })), this._disconnectTimeout = this._addSysTimedHandler(3e3, this._onDisconnectTimeout.stropheBind(this)), this._proto._disconnect(t) } else r.info("Disconnect was called before Strophe connected to the server"), this._proto._abortAllRequests() }, _changeConnectStatus: function (e, t) { for (var n in r._connectionPlugins) if (r._connectionPlugins.hasOwnProperty(n)) { var s = this[n]; if (s.statusChanged) try { s.statusChanged(e, t) } catch (e) { r.error(n + " plugin caused an exception changing status: " + e) } } if (this.connect_callback) try { this.connect_callback(e, t) } catch (e) { r.error("User connection callback caused an exception: " + e) } }, _doDisconnect: function (e) { "number" == typeof this._idleTimeout && clearTimeout(this._idleTimeout), null !== this._disconnectTimeout && (this.deleteTimedHandler(this._disconnectTimeout), this._disconnectTimeout = null), r.info("_doDisconnect was called"), this._proto._doDisconnect(), this.authenticated = !1, this.disconnecting = !1, this.restored = !1, this.handlers = [], this.timedHandlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this._changeConnectStatus(r.Status.DISCONNECTED, e), this.connected = !1 }, _dataRecv: function (e, t) { r.info("_dataRecv called"); var n = this._proto._reqToData(e); if (null !== n) { this.xmlInput !== r.Connection.prototype.xmlInput && (n.nodeName === this._proto.strip && n.childNodes.length ? this.xmlInput(n.childNodes[0]) : this.xmlInput(n)), this.rawInput !== r.Connection.prototype.rawInput && (t ? this.rawInput(t) : this.rawInput(r.serialize(n))); for (var s, i; this.removeHandlers.length > 0;) i = this.removeHandlers.pop(), (s = this.handlers.indexOf(i)) >= 0 && this.handlers.splice(s, 1); for (; this.addHandlers.length > 0;) this.handlers.push(this.addHandlers.pop()); if (this.disconnecting && this._proto._emptyQueue()) return void this._doDisconnect(); var o, a, d = n.getAttribute("type"); if (null !== d && "terminate" == d) { if (this.disconnecting) return; return o = n.getAttribute("condition"), a = n.getElementsByTagName("conflict"), null !== o ? ("remote-stream-error" == o && a.length > 0 && (o = "conflict"), this._changeConnectStatus(r.Status.CONNFAIL, o)) : this._changeConnectStatus(r.Status.CONNFAIL, "unknown"), void this._doDisconnect(o) } var l = this; r.forEachChild(n, null, function (e) { var t, n; for (n = l.handlers, l.handlers = [], t = 0; t < n.length; t++) { var s = n[t]; try { !s.isMatch(e) || !l.authenticated && s.user ? l.handlers.push(s) : s.run(e) && l.handlers.push(s) } catch (e) { r.warn("Removing Strophe handlers due to uncaught exception: " + e.message) } } }) } }, mechanisms: {}, _connect_cb: function (e, t, n) { r.info("_connect_cb was called"), this.connected = !0; var s = this._proto._reqToData(e); if (s) { this.xmlInput !== r.Connection.prototype.xmlInput && (s.nodeName === this._proto.strip && s.childNodes.length ? this.xmlInput(s.childNodes[0]) : this.xmlInput(s)), this.rawInput !== r.Connection.prototype.rawInput && (n ? this.rawInput(n) : this.rawInput(r.serialize(s))); if (this._proto._connect_cb(s) !== r.Status.CONNFAIL) { this._authentication.sasl_scram_sha1 = !1, this._authentication.sasl_plain = !1, this._authentication.sasl_digest_md5 = !1, this._authentication.sasl_anonymous = !1, this._authentication.legacy_auth = !1; var i; i = s.getElementsByTagNameNS ? s.getElementsByTagNameNS(r.NS.STREAM, "features").length > 0 : s.getElementsByTagName("stream:features").length > 0 || s.getElementsByTagName("features").length > 0; var o, a, d = s.getElementsByTagName("mechanism"), l = []; if (!i) return void this._proto._no_auth_received(t); if (d.length > 0) for (o = 0; o < d.length; o++) a = r.getText(d[o]), this.mechanisms[a] && l.push(this.mechanisms[a]); if (this._authentication.legacy_auth = s.getElementsByTagName("auth").length > 0, !(this._authentication.legacy_auth || l.length > 0)) return void this._proto._no_auth_received(t); this.do_authentication !== !1 && this.authenticate(l) } } }, authenticate: function (e) { var n; for (n = 0; n < e.length - 1; ++n) { for (var i = n, a = n + 1; a < e.length; ++a) e[a].prototype.priority > e[i].prototype.priority && (i = a); if (i != n) { var d = e[n]; e[n] = e[i], e[i] = d } } var l = !1; for (n = 0; n < e.length; ++n) if (e[n].test(this)) { this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.stropheBind(this), null, "success", null, null), this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.stropheBind(this), null, "failure", null, null), this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.stropheBind(this), null, "challenge", null, null), this._sasl_mechanism = new e[n], this._sasl_mechanism.onStart(this); var c = s("auth", { xmlns: r.NS.SASL, mechanism: this._sasl_mechanism.name }); if (this._sasl_mechanism.isClientFirst) { var m = this._sasl_mechanism.onChallenge(this, null); c.t(t.encode(m)) } this.send(c.tree()), l = !0; break } l || (null === r.getNodeFromJid(this.jid) ? (this._changeConnectStatus(r.Status.CONNFAIL, "x-strophe-bad-non-anon-jid"), this.disconnect("x-strophe-bad-non-anon-jid")) : (this._changeConnectStatus(r.Status.AUTHENTICATING, null), this._addSysHandler(this._auth1_cb.stropheBind(this), null, null, null, "_auth_1"), this.send(o({ type: "get", to: this.domain, id: "_auth_1" }).c("query", { xmlns: r.NS.AUTH }).c("username", {}).t(r.getNodeFromJid(this.jid)).tree()))) }, _sasl_challenge_cb: function (e) { var n = t.decode(r.getText(e)), i = this._sasl_mechanism.onChallenge(this, n), o = s("response", { xmlns: r.NS.SASL }); return "" !== i && o.t(t.encode(i)), this.send(o.tree()), !0 }, _auth1_cb: function (e) { var t = o({ type: "set", id: "_auth_2" }).c("query", { xmlns: r.NS.AUTH }).c("username", {}).t(r.getNodeFromJid(this.jid)).up().c("password").t(this.pass); return r.getResourceFromJid(this.jid) || (this.jid = r.getBareJidFromJid(this.jid) + "/strophe"), t.up().c("resource", {}).t(r.getResourceFromJid(this.jid)), this._addSysHandler(this._auth2_cb.stropheBind(this), null, null, null, "_auth_2"), this.send(t.tree()), !1 }, _sasl_success_cb: function (e) {
    if (this._sasl_data["server-signature"]) { var n, s = t.decode(r.getText(e)), i = s.match(/([a-z]+)=([^,]+)(,|$)/); if ("v" == i[1] && (n = i[2]), n != this._sasl_data["server-signature"]) return this.deleteHandler(this._sasl_failure_handler), this._sasl_failure_handler = null, this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null), this._sasl_data = {}, this._sasl_failure_cb(null) } r.info("SASL authentication succeeded."), this._sasl_mechanism && this._sasl_mechanism.onSuccess(), this.deleteHandler(this._sasl_failure_handler), this._sasl_failure_handler = null, this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null)
        ; var o = [], a = function (e, t) { for (; e.length;) this.deleteHandler(e.pop()); return this._sasl_auth1_cb.stropheBind(this)(t), !1 }; return o.push(this._addSysHandler(function (e) { a.stropheBind(this)(o, e) }.stropheBind(this), null, "stream:features", null, null)), o.push(this._addSysHandler(function (e) { a.stropheBind(this)(o, e) }.stropheBind(this), r.NS.STREAM, "features", null, null)), this._sendRestart(), !1
    }, _sasl_auth1_cb: function (e) { this.features = e; var t, n; for (t = 0; t < e.childNodes.length; t++) n = e.childNodes[t], "bind" == n.nodeName && (this.do_bind = !0), "session" == n.nodeName && (this.do_session = !0); if (!this.do_bind) return this._changeConnectStatus(r.Status.AUTHFAIL, null), !1; this._addSysHandler(this._sasl_bind_cb.stropheBind(this), null, null, null, "_bind_auth_2"); var s = r.getResourceFromJid(this.jid); return s ? this.send(o({ type: "set", id: "_bind_auth_2" }).c("bind", { xmlns: r.NS.BIND }).c("resource", {}).t(s).tree()) : this.send(o({ type: "set", id: "_bind_auth_2" }).c("bind", { xmlns: r.NS.BIND }).tree()), !1 }, _sasl_bind_cb: function (e) { if ("error" == e.getAttribute("type")) { r.info("SASL binding failed."); var t, n = e.getElementsByTagName("conflict"); return n.length > 0 && (t = "conflict"), this._changeConnectStatus(r.Status.AUTHFAIL, t), !1 } var s, i = e.getElementsByTagName("bind"); if (!(i.length > 0)) return r.info("SASL binding failed."), this._changeConnectStatus(r.Status.AUTHFAIL, null), !1; s = i[0].getElementsByTagName("jid"), s.length > 0 && (this.jid = r.getText(s[0]), this.do_session ? (this._addSysHandler(this._sasl_session_cb.stropheBind(this), null, null, null, "_session_auth_2"), this.send(o({ type: "set", id: "_session_auth_2" }).c("session", { xmlns: r.NS.SESSION }).tree())) : (this.authenticated = !0, this._changeConnectStatus(r.Status.CONNECTED, null))) }, _sasl_session_cb: function (e) { if ("result" == e.getAttribute("type")) this.authenticated = !0, this._changeConnectStatus(r.Status.CONNECTED, null); else if ("error" == e.getAttribute("type")) return r.info("Session creation failed."), this._changeConnectStatus(r.Status.AUTHFAIL, null), !1; return !1 }, _sasl_failure_cb: function (e) { return this._sasl_success_handler && (this.deleteHandler(this._sasl_success_handler), this._sasl_success_handler = null), this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null), this._sasl_mechanism && this._sasl_mechanism.onFailure(), this._changeConnectStatus(r.Status.AUTHFAIL, null), !1 }, _auth2_cb: function (e) { return "result" == e.getAttribute("type") ? (this.authenticated = !0, this._changeConnectStatus(r.Status.CONNECTED, null)) : "error" == e.getAttribute("type") && (this._changeConnectStatus(r.Status.AUTHFAIL, null), this.disconnect("authentication failed")), !1 }, _addSysTimedHandler: function (e, t) { var n = new r.TimedHandler(e, t); return n.user = !1, this.addTimeds.push(n), n }, _addSysHandler: function (e, t, n, s, i) { var o = new r.Handler(e, t, n, s, i); return o.user = !1, this.addHandlers.push(o), o }, _onDisconnectTimeout: function () { return r.info("_onDisconnectTimeout was called"), this._proto._onDisconnectTimeout(), this._doDisconnect(), !1 }, _onIdle: function () { for (var e, t, n, s; this.addTimeds.length > 0;) this.timedHandlers.push(this.addTimeds.pop()); for (; this.removeTimeds.length > 0;) t = this.removeTimeds.pop(), (e = this.timedHandlers.indexOf(t)) >= 0 && this.timedHandlers.splice(e, 1); var i = (new Date).getTime(); for (s = [], e = 0; e < this.timedHandlers.length; e++) t = this.timedHandlers[e], !this.authenticated && t.user || (n = t.lastCalled + t.period, n - i <= 0 ? t.run() && s.push(t) : s.push(t)); this.timedHandlers = s, clearTimeout(this._idleTimeout), this._proto._onIdle(), this.connected && (this._idleTimeout = setTimeout(this._onIdle.stropheBind(this), 100)) }
    }, r.SASLMechanism = function (e, t, n) { this.name = e, this.isClientFirst = t, this.priority = n }, r.SASLMechanism.prototype = { test: function (e) { return !0 }, onStart: function (e) { this._connection = e }, onChallenge: function (e, t) { throw new Error("You should implement challenge handling!") }, onFailure: function () { this._connection = null }, onSuccess: function () { this._connection = null } }, r.SASLAnonymous = function () { }, r.SASLAnonymous.prototype = new r.SASLMechanism("ANONYMOUS", !1, 10), r.SASLAnonymous.test = function (e) { return null === e.authcid }, r.Connection.prototype.mechanisms[r.SASLAnonymous.prototype.name] = r.SASLAnonymous, r.SASLPlain = function () { }, r.SASLPlain.prototype = new r.SASLMechanism("PLAIN", !0, 20), r.SASLPlain.test = function (e) { return null !== e.authcid }, r.SASLPlain.prototype.onChallenge = function (e) { var t = e.authzid; return t += "\0", t += e.authcid, t += "\0", t += e.pass }, r.Connection.prototype.mechanisms[r.SASLPlain.prototype.name] = r.SASLPlain, r.SASLSHA1 = function () { }, r.SASLSHA1.prototype = new r.SASLMechanism("SCRAM-SHA-1", !0, 40), r.SASLSHA1.test = function (e) { return null !== e.authcid }, r.SASLSHA1.prototype.onChallenge = function (s, i, o) { var a = o || n.hexdigest(1234567890 * Math.random()), r = "n=" + s.authcid; return r += ",r=", r += a, s._sasl_data.cnonce = a, s._sasl_data["client-first-message-bare"] = r, r = "n,," + r, this.onChallenge = function (n, s) { for (var i, o, a, r, d, l, c, m, u, h, p, g = "c=biws,", f = n._sasl_data["client-first-message-bare"] + "," + s + ",", b = n._sasl_data.cnonce; s.match(/([a-z]+)=([^,]+)(,|$)/) ;) { var _ = s.match(/([a-z]+)=([^,]+)(,|$)/); switch (s = s.replace(_[0], ""), _[1]) { case "r": i = _[2]; break; case "s": o = _[2]; break; case "i": a = _[2] } } if (i.substr(0, b.length) !== b) return n._sasl_data = {}, n._sasl_failure_cb(); for (g += "r=" + i, f += g, o = t.decode(o), o += "\0\0\0", r = l = e.core_hmac_sha1(n.pass, o), c = 1; c < a; c++) { for (d = e.core_hmac_sha1(n.pass, e.binb2str(l)), m = 0; m < 5; m++) r[m] ^= d[m]; l = d } for (r = e.binb2str(r), u = e.core_hmac_sha1(r, "Client Key"), h = e.str_hmac_sha1(r, "Server Key"), p = e.core_hmac_sha1(e.str_sha1(e.binb2str(u)), f), n._sasl_data["server-signature"] = e.b64_hmac_sha1(h, f), m = 0; m < 5; m++) u[m] ^= p[m]; return g += ",p=" + t.encode(e.binb2str(u)) }.stropheBind(this), r }, r.Connection.prototype.mechanisms[r.SASLSHA1.prototype.name] = r.SASLSHA1, r.SASLMD5 = function () { }, r.SASLMD5.prototype = new r.SASLMechanism("DIGEST-MD5", !1, 30), r.SASLMD5.test = function (e) { return null !== e.authcid }, r.SASLMD5.prototype._quote = function (e) { return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"' }, r.SASLMD5.prototype.onChallenge = function (e, t, s) { for (var i, o = s || n.hexdigest("" + 1234567890 * Math.random()), a = "", r = null, d = ""; t.match(/([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/) ;) switch (i = t.match(/([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/), t = t.replace(i[0], ""), i[2] = i[2].replace(/^"(.+)"$/, "$1"), i[1]) { case "realm": a = i[2]; break; case "nonce": d = i[2]; break; case "qop": i[2]; break; case "host": r = i[2] } var l = e.servtype + "/" + e.domain; null !== r && (l = l + "/" + r); var c = n.hash(e.authcid + ":" + a + ":" + this._connection.pass) + ":" + d + ":" + o, m = "AUTHENTICATE:" + l, u = ""; return u += "charset=utf-8,", u += "username=" + this._quote(e.authcid) + ",", u += "realm=" + this._quote(a) + ",", u += "nonce=" + this._quote(d) + ",", u += "nc=00000001,", u += "cnonce=" + this._quote(o) + ",", u += "digest-uri=" + this._quote(l) + ",", u += "response=" + n.hexdigest(n.hexdigest(c) + ":" + d + ":00000001:" + o + ":auth:" + n.hexdigest(m)) + ",", u += "qop=auth", this.onChallenge = function () { return "" }.stropheBind(this), u }, r.Connection.prototype.mechanisms[r.SASLMD5.prototype.name] = r.SASLMD5, { Strophe: r, $build: s, $msg: i, $iq: o, $pres: a, SHA1: e, Base64: t, MD5: n }
    }), function (e, t) { t(Strophe, $build) }(0, function (e, t) { return e.Request = function (t, n, s, i) { this.id = ++e._requestId, this.xmlData = t, this.data = e.serialize(t), this.origFunc = n, this.func = n, this.rid = s, this.date = NaN, this.sends = i || 0, this.abort = !1, this.dead = null, this.age = function () { return this.date ? (new Date - this.date) / 1e3 : 0 }, this.timeDead = function () { return this.dead ? (new Date - this.dead) / 1e3 : 0 }, this.xhr = this._newXHR() }, e.Request.prototype = { getResponse: function () { var t = null; if (this.xhr.responseXML && this.xhr.responseXML.documentElement) { if (t = this.xhr.responseXML.documentElement, "parsererror" == t.tagName) throw e.error("invalid response received"), e.error("responseText: " + this.xhr.responseText), e.error("responseXML: " + e.serialize(this.xhr.responseXML)), "parsererror" } else this.xhr.responseText && (e.error("invalid response received"), e.error("responseText: " + this.xhr.responseText), e.error("responseXML: " + e.serialize(this.xhr.responseXML))); return t }, _newXHR: function () { var e = null; return window.XMLHttpRequest ? (e = new XMLHttpRequest, e.overrideMimeType && e.overrideMimeType("text/xml; charset=utf-8")) : window.ActiveXObject && (e = new ActiveXObject("Microsoft.XMLHTTP")), e.onreadystatechange = this.func.stropheBind(null, this), e } }, e.Bosh = function (e) { this._conn = e, this.rid = Math.floor(4294967295 * Math.random()), this.sid = null, this.hold = 1, this.wait = 60, this.window = 5, this.errors = 0, this._requests = [] }, e.Bosh.prototype = { strip: null, _buildBody: function () { var n = t("body", { rid: this.rid++, xmlns: e.NS.HTTPBIND }); return null !== this.sid && n.attrs({ sid: this.sid }), this._conn.options.keepalive && this._cacheSession(), n }, _reset: function () { this.rid = Math.floor(4294967295 * Math.random()), this.sid = null, this.errors = 0, window.sessionStorage.removeItem("strophe-bosh-session") }, _connect: function (t, n, s) { this.wait = t || this.wait, this.hold = n || this.hold, this.errors = 0; var i = this._buildBody().attrs({ to: this._conn.domain, "xml:lang": "en", wait: this.wait, hold: this.hold, content: "text/xml; charset=utf-8", ver: "1.6", "xmpp:version": "1.0", "xmlns:xmpp": e.NS.BOSH }); s && i.attrs({ route: s }); var o = this._conn._connect_cb; this._requests.push(new e.Request(i.tree(), this._onRequestStateChange.stropheBind(this, o.stropheBind(this._conn)), i.tree().getAttribute("rid"))), this._throttledRequestHandler() }, _attach: function (t, n, s, i, o, a, r) { this._conn.jid = t, this.sid = n, this.rid = s, this._conn.connect_callback = i, this._conn.domain = e.getDomainFromJid(this._conn.jid), this._conn.authenticated = !0, this._conn.connected = !0, this.wait = o || this.wait, this.hold = a || this.hold, this.window = r || this.window, this._conn._changeConnectStatus(e.Status.ATTACHED, null) }, _restore: function (t, n, s, i, o) { var a = JSON.parse(window.sessionStorage.getItem("strophe-bosh-session")); if (!(void 0 !== a && null !== a && a.rid && a.sid && a.jid) || void 0 !== t && e.getBareJidFromJid(a.jid) != e.getBareJidFromJid(t)) throw { name: "StropheSessionError", message: "_restore: no restoreable session." }; this._conn.restored = !0, this._attach(a.jid, a.sid, a.rid, n, s, i, o) }, _cacheSession: function () { this._conn.authenticated ? this._conn.jid && this.rid && this.sid && window.sessionStorage.setItem("strophe-bosh-session", JSON.stringify({ jid: this._conn.jid, rid: this.rid, sid: this.sid })) : window.sessionStorage.removeItem("strophe-bosh-session") }, _connect_cb: function (t) { var n, s, i = t.getAttribute("type"); if (null !== i && "terminate" == i) return n = t.getAttribute("condition"), e.error("BOSH-Connection failed: " + n), s = t.getElementsByTagName("conflict"), null !== n ? ("remote-stream-error" == n && s.length > 0 && (n = "conflict"), this._conn._changeConnectStatus(e.Status.CONNFAIL, n)) : this._conn._changeConnectStatus(e.Status.CONNFAIL, "unknown"), this._conn._doDisconnect(n), e.Status.CONNFAIL; this.sid || (this.sid = t.getAttribute("sid")); var o = t.getAttribute("requests"); o && (this.window = parseInt(o, 10)); var a = t.getAttribute("hold"); a && (this.hold = parseInt(a, 10)); var r = t.getAttribute("wait"); r && (this.wait = parseInt(r, 10)) }, _disconnect: function (e) { this._sendTerminate(e) }, _doDisconnect: function () { this.sid = null, this.rid = Math.floor(4294967295 * Math.random()), window.sessionStorage.removeItem("strophe-bosh-session") }, _emptyQueue: function () { return 0 === this._requests.length }, _hitError: function (t) { this.errors++, e.warn("request errored, status: " + t + ", number of errors: " + this.errors), this.errors > 4 && this._conn._onDisconnectTimeout() }, _no_auth_received: function (t) { t = t ? t.stropheBind(this._conn) : this._conn._connect_cb.stropheBind(this._conn); var n = this._buildBody(); this._requests.push(new e.Request(n.tree(), this._onRequestStateChange.stropheBind(this, t.stropheBind(this._conn)), n.tree().getAttribute("rid"))), this._throttledRequestHandler() }, _onDisconnectTimeout: function () { this._abortAllRequests() }, _abortAllRequests: function () { for (var e; this._requests.length > 0;) e = this._requests.pop(), e.abort = !0, e.xhr.abort(), e.xhr.onreadystatechange = function () { } }, _onIdle: function () { var t = this._conn._data; if (this._conn.authenticated && 0 === this._requests.length && 0 === t.length && !this._conn.disconnecting && (e.info("no requests during idle cycle, sending blank request"), t.push(null)), !this._conn.paused) { if (this._requests.length < 2 && t.length > 0) { for (var n = this._buildBody(), s = 0; s < t.length; s++) null !== t[s] && ("restart" === t[s] ? n.attrs({ to: this._conn.domain, "xml:lang": "en", "xmpp:restart": "true", "xmlns:xmpp": e.NS.BOSH }) : n.cnode(t[s]).up()); delete this._conn._data, this._conn._data = [], this._requests.push(new e.Request(n.tree(), this._onRequestStateChange.stropheBind(this, this._conn._dataRecv.stropheBind(this._conn)), n.tree().getAttribute("rid"))), this._throttledRequestHandler() } if (this._requests.length > 0) { var i = this._requests[0].age(); null !== this._requests[0].dead && this._requests[0].timeDead() > Math.floor(e.SECONDARY_TIMEOUT * this.wait) && this._throttledRequestHandler(), i > Math.floor(e.TIMEOUT * this.wait) && (e.warn("Request " + this._requests[0].id + " timed out, over " + Math.floor(e.TIMEOUT * this.wait) + " seconds since last activity"), this._throttledRequestHandler()) } } }, _onRequestStateChange: function (t, n) { if (e.debug("request id " + n.id + "." + n.sends + " state changed to " + n.xhr.readyState), n.abort) return void (n.abort = !1); var s; if (4 == n.xhr.readyState) { s = 0; try { s = n.xhr.status } catch (e) { } if (void 0 === s && (s = 0), this.disconnecting && s >= 400) return void this._hitError(s); var i = this._requests[0] == n, o = this._requests[1] == n; (s > 0 && s < 500 || n.sends > 5) && (this._removeRequest(n), e.debug("request id " + n.id + " should now be removed")), 200 == s ? ((o || i && this._requests.length > 0 && this._requests[0].age() > Math.floor(e.SECONDARY_TIMEOUT * this.wait)) && this._restartRequest(0), e.debug("request id " + n.id + "." + n.sends + " got 200"), t(n), this.errors = 0) : (e.error("request id " + n.id + "." + n.sends + " error " + s + " happened"), (0 === s || s >= 400 && s < 600 || s >= 12e3) && (this._hitError(s), s >= 400 && s < 500 && (this._conn._changeConnectStatus(e.Status.DISCONNECTING, null), this._conn._doDisconnect()))), s > 0 && s < 500 || n.sends > 5 || this._throttledRequestHandler() } }, _processRequest: function (t) { var n = this, s = this._requests[t], i = -1; try { 4 == s.xhr.readyState && (i = s.xhr.status) } catch (n) { e.error("caught an error in _requests[" + t + "], reqStatus: " + i) } if (void 0 === i && (i = -1), s.sends > this._conn.maxRetries) return void this._conn._onDisconnectTimeout(); var o = s.age(), a = !isNaN(o) && o > Math.floor(e.TIMEOUT * this.wait), r = null !== s.dead && s.timeDead() > Math.floor(e.SECONDARY_TIMEOUT * this.wait), d = 4 == s.xhr.readyState && (i < 1 || i >= 500); if ((a || r || d) && (r && e.error("Request " + this._requests[t].id + " timed out (secondary), restarting"), s.abort = !0, s.xhr.abort(), s.xhr.onreadystatechange = function () { }, this._requests[t] = new e.Request(s.xmlData, s.origFunc, s.rid, s.sends), s = this._requests[t]), 0 === s.xhr.readyState) { e.debug("request id " + s.id + "." + s.sends + " posting"); try { s.xhr.open("POST", this._conn.service, !this._conn.options.sync), s.xhr.setRequestHeader && s.xhr.setRequestHeader("Content-Type", "text/xml; charset=utf-8") } catch (t) { return e.error("XHR open failed."), this._conn.connected || this._conn._changeConnectStatus(e.Status.CONNFAIL, "bad-service"), void this._conn.disconnect() } var l = function () { if (s.date = new Date, n._conn.options.customHeaders) { var e = n._conn.options.customHeaders; for (var t in e) e.hasOwnProperty(t) && s.xhr.setRequestHeader(t, e[t]) } s.xhr.send(s.data) }; if (s.sends > 1) { var c = 1e3 * Math.min(Math.floor(e.TIMEOUT * this.wait), Math.pow(s.sends, 3)); setTimeout(l, c) } else l(); s.sends++, this._conn.xmlOutput !== e.Connection.prototype.xmlOutput && (s.xmlData.nodeName === this.strip && s.xmlData.childNodes.length ? this._conn.xmlOutput(s.xmlData.childNodes[0]) : this._conn.xmlOutput(s.xmlData)), this._conn.rawOutput !== e.Connection.prototype.rawOutput && this._conn.rawOutput(s.data) } else e.debug("_processRequest: " + (0 === t ? "first" : "second") + " request has readyState of " + s.xhr.readyState) }, _removeRequest: function (t) { e.debug("removing request"); var n; for (n = this._requests.length - 1; n >= 0; n--) t == this._requests[n] && this._requests.splice(n, 1); t.xhr.onreadystatechange = function () { }, this._throttledRequestHandler() }, _restartRequest: function (e) { var t = this._requests[e]; null === t.dead && (t.dead = new Date), this._processRequest(e) }, _reqToData: function (e) { try { return e.getResponse() } catch (e) { if ("parsererror" != e) throw e; this._conn.disconnect("strophe-parsererror") } }, _sendTerminate: function (t) { e.info("_sendTerminate was called"); var n = this._buildBody().attrs({ type: "terminate" }); t && n.cnode(t.tree()); var s = new e.Request(n.tree(), this._onRequestStateChange.stropheBind(this, this._conn._dataRecv.stropheBind(this._conn)), n.tree().getAttribute("rid")); this._requests.push(s), this._throttledRequestHandler() }, _send: function () { clearTimeout(this._conn._idleTimeout), this._throttledRequestHandler(), this._conn._idleTimeout = setTimeout(this._conn._onIdle.stropheBind(this._conn), 100) }, _sendRestart: function () { this._throttledRequestHandler(), clearTimeout(this._conn._idleTimeout) }, _throttledRequestHandler: function () { this._requests ? e.debug("_throttledRequestHandler called with " + this._requests.length + " requests") : e.debug("_throttledRequestHandler called with undefined requests"), this._requests && 0 !== this._requests.length && (this._requests.length > 0 && this._processRequest(0), this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window && this._processRequest(1)) } }, e }), function (e, t) { t(Strophe, $build) }(0, function (e, t) { return e.Websocket = function (e) { this._conn = e, this.strip = "wrapper"; var t = e.service; if (0 !== t.indexOf("ws:") && 0 !== t.indexOf("wss:")) { var n = ""; n += "ws" === e.options.protocol && "https:" !== window.location.protocol ? "ws" : "wss", n += "://" + window.location.host, n += 0 !== t.indexOf("/") ? window.location.pathname + t : t, e.service = n } }, e.Websocket.prototype = { _buildStream: function () { return t("open", { xmlns: e.NS.FRAMING, to: this._conn.domain, version: "1.0" }) }, _check_streamerror: function (t, n) { var s; if (s = t.getElementsByTagNameNS ? t.getElementsByTagNameNS(e.NS.STREAM, "error") : t.getElementsByTagName("stream:error"), 0 === s.length) return !1; for (var i = s[0], o = "", a = "", r = 0; r < i.childNodes.length; r++) { var d = i.childNodes[r]; if ("urn:ietf:params:xml:ns:xmpp-streams" !== d.getAttribute("xmlns")) break; "text" === d.nodeName ? a = d.textContent : o = d.nodeName } var l = "WebSocket stream error: "; return l += o ? o : "unknown", a && (l += " - " + o), e.error(l), this._conn._changeConnectStatus(n, o), this._conn._doDisconnect(), !0 }, _reset: function () { }, _connect: function () { this._closeSocket(), this.socket = new WebSocket(this._conn.service, "xmpp"), this.socket.onopen = this._onOpen.stropheBind(this), this.socket.onerror = this._onError.stropheBind(this), this.socket.onclose = this._onClose.stropheBind(this), this.socket.onmessage = this._connect_cb_wrapper.stropheBind(this) }, _connect_cb: function (t) { if (this._check_streamerror(t, e.Status.CONNFAIL)) return e.Status.CONNFAIL }, _handleStreamStart: function (t) { var n = !1, s = t.getAttribute("xmlns"); "string" != typeof s ? n = "Missing xmlns in <open />" : s !== e.NS.FRAMING && (n = "Wrong xmlns in <open />: " + s); var i = t.getAttribute("version"); return "string" != typeof i ? n = "Missing version in <open />" : "1.0" !== i && (n = "Wrong version in <open />: " + i), !n || (this._conn._changeConnectStatus(e.Status.CONNFAIL, n), this._conn._doDisconnect(), !1) }, _connect_cb_wrapper: function (t) { if (0 === t.data.indexOf("<open ") || 0 === t.data.indexOf("<?xml")) { var n = t.data.replace(/^(<\?.*?\?>\s*)*/, ""); if ("" === n) return; var s = (new DOMParser).parseFromString(n, "text/xml").documentElement; this._conn.xmlInput(s), this._conn.rawInput(t.data), this._handleStreamStart(s) && this._connect_cb(s) } else if (0 === t.data.indexOf("<close ")) { this._conn.rawInput(t.data), this._conn.xmlInput(t); var i = t.getAttribute("see-other-uri"); i ? (this._conn._changeConnectStatus(e.Status.REDIRECT, "Received see-other-uri, resetting connection"), this._conn.reset(), this._conn.service = i, this._connect()) : (this._conn._changeConnectStatus(e.Status.CONNFAIL, "Received closing stream"), this._conn._doDisconnect()) } else { var o = this._streamWrap(t.data), a = (new DOMParser).parseFromString(o, "text/xml").documentElement; this.socket.onmessage = this._onMessage.stropheBind(this), this._conn._connect_cb(a, null, t.data) } }, _disconnect: function (n) { if (this.socket && this.socket.readyState !== WebSocket.CLOSED) { n && this._conn.send(n); var s = t("close", { xmlns: e.NS.FRAMING }); this._conn.xmlOutput(s); var i = e.serialize(s); this._conn.rawOutput(i); try { this.socket.send(i) } catch (t) { e.info("Couldn't send <close /> tag.") } } this._conn._doDisconnect() }, _doDisconnect: function () { e.info("WebSockets _doDisconnect was called"), this._closeSocket() }, _streamWrap: function (e) { return "<wrapper>" + e + "</wrapper>" }, _closeSocket: function () { if (this.socket) try { this.socket.close() } catch (e) { } this.socket = null }, _emptyQueue: function () { return !0 }, _onClose: function () { this._conn.connected && !this._conn.disconnecting ? (e.error("Websocket closed unexcectedly"), this._conn._doDisconnect()) : e.info("Websocket closed") }, _no_auth_received: function (t) { e.error("Server did not send any auth methods"), this._conn._changeConnectStatus(e.Status.CONNFAIL, "Server did not send any auth methods"), t && (t = t.stropheBind(this._conn))(), this._conn._doDisconnect() }, _onDisconnectTimeout: function () { }, _abortAllRequests: function () { }, _onError: function (t) { e.error("Websocket error " + t), this._conn._changeConnectStatus(e.Status.CONNFAIL, "The WebSocket connection could not be established was disconnected."), this._disconnect() }, _onIdle: function () { var t = this._conn._data; if (t.length > 0 && !this._conn.paused) { for (var n = 0; n < t.length; n++) if (null !== t[n]) { var s, i; s = "restart" === t[n] ? this._buildStream().tree() : t[n], i = e.serialize(s), this._conn.xmlOutput(s), this._conn.rawOutput(i), this.socket.send(i) } this._conn._data = [] } }, _onMessage: function (t) { var n, s, i = '<close xmlns="urn:ietf:params:xml:ns:xmpp-framing" />'; if (t.data === i) return this._conn.rawInput(i), this._conn.xmlInput(t), void (this._conn.disconnecting || this._conn._doDisconnect()); if (0 === t.data.search("<open ")) { if (n = (new DOMParser).parseFromString(t.data, "text/xml").documentElement, !this._handleStreamStart(n)) return } else s = this._streamWrap(t.data), n = (new DOMParser).parseFromString(s, "text/xml").documentElement; return this._check_streamerror(n, e.Status.ERROR) ? void 0 : this._conn.disconnecting && "presence" === n.firstChild.nodeName && "unavailable" === n.firstChild.getAttribute("type") ? (this._conn.xmlInput(n), void this._conn.rawInput(e.serialize(n))) : void this._conn._dataRecv(n, t.data) }, _onOpen: function () { e.info("Websocket open"); var t = this._buildStream(); this._conn.xmlOutput(t.tree()); var n = e.serialize(t); this._conn.rawOutput(n), this.socket.send(n) }, _reqToData: function (e) { return e }, _send: function () { this._conn.flush() }, _sendRestart: function () { clearTimeout(this._conn._idleTimeout), this._conn._onIdle.stropheBind(this._conn)() } }, e }), e) e(Strophe, $build, $msg, $iq, $pres)
}(function (e, t, n, s, i) { window.Strophe = e, window.$build = t, window.$msg = n, window.$iq = s, window.$pres = i }), function (window, undefined) {
    if ("undefined" == typeof Strophe) throw "need Strophe"; var Easemob = Easemob || {}; Easemob.im = Easemob.im || {}, Easemob.im.version = "1.1.1"; var https = "https:" === location.protocol; window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL, Strophe.Websocket.prototype._closeSocket = function () { var e = this; e.socket ? setTimeout(function () { try { e.socket.close() } catch (e) { } }, 0) : e.socket = null }; var Utils = function () {
        var e = function () { try { return new window.XMLHttpRequest } catch (e) { return !1 } }, t = function () { try { return new window.ActiveXObject("Microsoft.XMLHTTP") } catch (e) { return !1 } }; window.XDomainRequest && (XDomainRequest.prototype.oldsend = XDomainRequest.prototype.send, XDomainRequest.prototype.send = function () { XDomainRequest.prototype.oldsend.apply(this, arguments), this.readyState = 2 }), Strophe.Request.prototype._newXHR = function () { var e = Utils.xmlrequest(!0); return e.overrideMimeType && e.overrideMimeType("text/xml"), e.onreadystatechange = this.func.stropheBind(null, this), e }; var n = function (n) { n = n || !0; var s = e() || t(); if ("withCredentials" in s) return s; if (!n) return s; if (void 0 === window.XDomainRequest) return s; var i = new XDomainRequest; return i.readyState = 0, i.status = 100, i.onreadystatechange = EMPTYFN, i.onload = function () { i.readyState = 4, i.status = 200; var e = new ActiveXObject("Microsoft.XMLDOM"); e.async = "false", e.loadXML(i.responseText), i.responseXML = e, i.response = i.responseText, i.onreadystatechange() }, i.ontimeout = i.onerror = function () { i.readyState = 4, i.status = 500, i.onreadystatechange() }, i }, s = function () { if ("ActiveXObject" in window) try { return new ActiveXObject("ShockwaveFlash.ShockwaveFlash") } catch (e) { return 0 } else if (navigator.plugins && navigator.plugins.length > 0) return navigator.plugins["Shockwave Flash"]; return 0 }(), i = n(), o = "undefined" != typeof FormData, a = "undefined" != typeof Blob, r = i.setRequestHeader || !1, d = i.overrideMimeType || !1, l = r && o; return {
            hasFormData: o, hasBlob: a, isCanSetRequestHeader: r, hasOverrideMimeType: d, isCanUploadFileAsync: l, isCanUploadFile: l || s, isCanDownLoadFile: r && (a || d), isSupportWss: function () { var e = [/MQQBrowser[\/]5([.]\d+)?\sTBS/]; if (!window.WebSocket) return !1; for (var t = window.navigator.userAgent, n = 0, s = e.length; n < s; n++) if (e[n].test(t)) return !1; return !0 }(), stringify: function (e) { if ("undefined" != typeof JSON && JSON.stringify) return JSON.stringify(e); var t = "", n = [], s = function (e) { var i = !1; "[object Array]" === Object.prototype.toString.call(e) ? (n.push("]", "["), i = !0) : "[object Object]" === Object.prototype.toString.call(e) && n.push("}", "{"); for (var o in e) "[object Null]" === Object.prototype.toString.call(e[o]) ? e[o] = "null" : "[object Undefined]" === Object.prototype.toString.call(e[o]) && (e[o] = "undefined"), t += e[o] && "object" == typeof e[o] ? "," + (i ? "" : '"' + o + '":' + (i ? '"' : "")) + s(e[o]) : ',"' + (i ? "" : o + '":"') + e[o] + '"'; return "" != t && (t = t.slice(1)), n.pop() + t + n.pop() }; return s(e) }, registerUser: function (e) { var t = e.orgName || "", n = e.appName || "", s = e.appKey || ""; if (!t && !n && s) { var i = s.split("#"); 2 === i.length && (t = i[0], n = i[1]) } if (!t && !n) return void e.error({ type: EASEMOB_IM_RESISTERUSER_ERROR, msg: "没有指定开发者信息" }); var o = e.https || o, a = e.apiUrl || (o ? "https" : "http") + "://a1.easemob.com", r = a + "/" + t + "/" + n + "/users", d = { username: e.username, password: e.password, nickname: e.nickname || "" }, l = Utils.stringify(d), e = { url: r, dataType: "json", data: l, success: e.success || EMPTYFN, error: e.error || EMPTYFN }; return Utils.ajax(e) }, login2UserGrid: function (e) { e = e || {}; var t = e.appKey || "", n = t.split("#"); if (2 !== n.length) return r({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; var s = n[0], i = n[1]; if (!s) return r({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; if (!i) return r({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; var o = o || e.https, a = e.success || EMPTYFN, r = e.error || EMPTYFN, d = e.user || "", l = e.pwd || "", c = e.apiUrl || (o ? "https" : "http") + "://a1.easemob.com", m = { grant_type: "password", username: d, password: l }, u = Utils.stringify(m), e = { url: c + "/" + s + "/" + i + "/token", dataType: "json", data: u, success: a || EMPTYFN, error: r || EMPTYFN }; return Utils.ajax(e) }, getFileUrl: function (e) { var t = { url: "", filename: "", filetype: "", data: "" }, n = document.getElementById(e); if (!Utils.isCanUploadFileAsync || !n) return t; if (window.URL.createObjectURL) { var s = n.files; if (s.length > 0) { var i = s.item(0); t.data = i, t.url = window.URL.createObjectURL(i), t.filename = i.name || "" } } else { var i = document.getElementById(e).value; t.url = i; var o = i.lastIndexOf("/"), a = i.lastIndexOf("\\"), r = Math.max(o, a); t.filename = r < 0 ? i : i.substring(r + 1) } var d = t.filename.lastIndexOf("."); return d != -1 && (t.filetype = t.filename.substring(d + 1).toLowerCase()), t }, getFileSizeFn: function (e) { var t = document.getElementById(e), n = 0; if (t) if (t.files) t.files.length > 0 && (n = t.files[0].size); else if (t.select && "ActiveXObject" in window) { t.select(); var s = new ActiveXObject("Scripting.FileSystemObject"), t = s.GetFile(t.value); n = t.Size } return n }, hasFlash: s, trim: function (e) { return e = "string" == typeof e ? e : "", e.trim ? e.trim() : e.replace(/^\s|\s$/g, "") }, parseEmotions: function (e) { if (void 0 === Easemob.im.EMOTIONS || void 0 === Easemob.im.EMOTIONS.map) return e; var t = Easemob.im.EMOTIONS; for (var n in t.map) if (t.map.hasOwnProperty(n)) for (; e.indexOf(n) > -1;) e = e.replace(n, '<img class="em-emotion" src="' + t.path + t.map[n] + '" alt="表情">'); return e }, parseLink: function (e) { var t = /(https?\:\/\/|www\.)([a-zA-Z0-9-]+(\.[a-zA-Z0-9]+)+)(\:[0-9]{2,4})?\/?((\.[:_0-9a-zA-Z-]+)|[:_0-9a-zA-Z-]*\/?)*\??[:_#@*&%0-9a-zA-Z-\/=]*/gm, n = e.match(t), s = n && n[0] ? n[0] : ""; if (n && n.length) { var i = /^https?:\/\//.test(s); e = e.replace(t, "<a href='" + (i ? s : "//" + s) + "' target='_blank'>" + s + "</a>") } return e }, parseJSON: function (e) { if (window.JSON && window.JSON.parse) return window.JSON.parse(e + ""); var t, n = null, s = Utils.trim(e + ""); return s && !Utils.trim(s.replace(/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g, function (e, s, i, o) { return t && s && (n = 0), 0 === n ? e : (t = i || s, n += !o - !i, "") })) ? Function("return " + s)() : Function("Invalid JSON: " + e)() }, parseUploadResponse: function (e) { return e.indexOf("callback") > -1 ? e.slice(9, -1) : e }, parseDownloadResponse: function (e) { return e && e.type && "application/json" === e.type || 0 > Object.prototype.toString.call(e).indexOf("Blob") ? this.url + "?token=" : window.URL.createObjectURL(e) }, uploadFile: function (e) { e = e || {}, e.onFileUploadProgress = e.onFileUploadProgress || EMPTYFN, e.onFileUploadComplete = e.onFileUploadComplete || EMPTYFN, e.onFileUploadError = e.onFileUploadError || EMPTYFN, e.onFileUploadCanceled = e.onFileUploadCanceled || EMPTYFN; var t = e.accessToken || this.context.accessToken; if (!t) return void e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_NO_LOGIN, msg: "用户未登录到usergrid服务器,无法使用文件上传功能", id: e.id }); if (orgName = e.orgName || this.context.orgName || "", appName = e.appName || this.context.appName || "", appKey = e.appKey || this.context.appKey || "", !orgName && !appName && appKey) { var n = appKey.split("#"); 2 == n.length && (orgName = n[0], appName = n[1]) } if (!orgName && !appName) return void e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "没有指定开发者信息", id: e.id }); var s = e.apiUrl || "http://a1.easemob.com", i = s + "/" + orgName + "/" + appName + "/chatfiles"; if (!Utils.isCanUploadFileAsync) return void (Utils.hasFlash && "function" == typeof e.flashUpload ? e.flashUpload && e.flashUpload(i, e) : this.onError({ type: EASEMOB_IM_UPLOADFILE_BROWSER_ERROR, msg: "当前浏览器不支持异步上传！" })); var o = e.file.data ? e.file.data.size : undefined; if (o > EASEMOB_IM_FILESIZE_LIMIT) return void e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件超过服务器大小限制（10M）", id: e.id }); if (o <= 0) return void e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件大小为0", id: e.id }); var a = Utils.xmlrequest(), r = function (t) { e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件失败", id: e.id, xhr: a }) }; a.upload && a.upload.addEventListener("progress", e.onFileUploadProgress, !1), a.addEventListener ? (a.addEventListener("abort", e.onFileUploadCanceled, !1), a.addEventListener("load", function (t) { try { var n = Utils.parseJSON(a.responseText); e.onFileUploadComplete(n) } catch (t) { e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件失败,服务端返回值值不正确", data: a.responseText, id: e.id, xhr: a }) } }, !1), a.addEventListener("error", r, !1)) : a.onreadystatechange && (a.onreadystatechange = function () { if (4 === a.readyState) if (200 === ajax.status) try { var t = Utils.parseJSON(a.responseText); e.onFileUploadComplete(t) } catch (t) { e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件失败,服务端返回值不正确", data: a.responseText, id: e.id, xhr: a }) } else e.onFileUploadError({ type: EASEMOB_IM_UPLOADFILE_ERROR, msg: "上传文件失败,服务端返回异常", data: a.responseText, id: e.id, xhr: a }); else a.abort(), e.onFileUploadCanceled() }), a.open("POST", i), a.setRequestHeader("restrict-access", "true"), a.setRequestHeader("Accept", "*/*"), a.setRequestHeader("Authorization", "Bearer " + t); var d = new FormData; d.append("file", e.file.data), a.send(d) }, downloadFn: function (e) {
                e.onFileDownloadComplete = e.onFileDownloadComplete || EMPTYFN, e.onFileDownloadError = e.onFileDownloadError || EMPTYFN; var t = e.accessToken || ""; if (!t) return void e.onFileDownloadError({ type: EASEMOB_IM_DOWNLOADFILE_NO_LOGIN, msg: "用户未登录到usergrid服务器,无法使用文件下载功能", id: e.id }); var n = function (t) { e.onFileDownloadError({ type: EASEMOB_IM_DOWNLOADFILE_ERROR, msg: "下载文件失败", id: e.id, xhr: s }) }; if (!Utils.isCanDownLoadFile) return void e.onFileDownloadComplete(); var s = Utils.xmlrequest(); "addEventListener" in s ? (s.addEventListener("load", function (t) { e.onFileDownloadComplete(s.response, s) }, !1), s.addEventListener("error", n, !1)) : "onreadystatechange" in s && (s.onreadystatechange = function () {
                    4 === s.readyState ? 200 === ajax.status ? e.onFileDownloadComplete(s.response, s) : e.onFileDownloadError({
                        type: EASEMOB_IM_DOWNLOADFILE_ERROR, msg: "下载文件失败,服务端返回异常", id: e.id,
                        xhr: s
                    }) : (s.abort(), e.onFileDownloadError({ type: EASEMOB_IM_DOWNLOADFILE_ERROR, msg: "错误的下载状态,退出下载", id: e.id, xhr: s }))
                }); var i = e.method || "GET", o = e.responseType || "blob", a = e.mimeType || "text/plain; charset=x-user-defined"; s.open(i, e.url), "undefined" != typeof Blob ? s.responseType = o : s.overrideMimeType(a); var r = { "X-Requested-With": "XMLHttpRequest", Accept: "application/octet-stream", "share-secret": e.secret, Authorization: "Bearer " + t }, d = e.headers || {}; for (var l in d) r[l] = d[l]; for (var l in r) r[l] && s.setRequestHeader(l, r[l]); s.send(null)
            }, parseTextMessage: function (e, t) { if ("string" != typeof e) return void conn.onError({ type: EASEMOB_IM_MESSAGE_REC_TEXT_ERROR, msg: "不合法的消息内容格式，请检查发送消息内容！" }); if ("[object Object]" !== Object.prototype.toString.call(t)) return { isemotion: !1, body: [{ type: "txt", data: e }] }; var n = e, s = [], i = n.match(/\[[^[\]]{2,3}\]/gm); if (!i || i.length < 1) return { isemotion: !1, body: [{ type: "txt", data: e }] }; for (var o = !1, a = 0; a < i.length; a++) { var r = n.substring(0, n.indexOf(i[a])), d = Easemob.im.EMOTIONS.map[i[a]]; if (r && s.push({ type: "txt", data: r }), d) { var l = Easemob.im.EMOTIONS.map ? Easemob.im.EMOTIONS.path + d : null; l ? (o = !0, s.push({ type: "emotion", data: l })) : s.push({ type: "txt", data: i[a] }); var c = n.indexOf(i[a]) + i[a].length; n = n.substring(c) } else s.push({ type: "txt", data: i[a] }) } return n && s.push({ type: "txt", data: n }), o ? { isemotion: o, body: s } : { isemotion: !1, body: [{ type: "txt", data: e }] } }, xmlrequest: n, ajax: function (e) { var t = e.dataType || "text", n = e.success || EMPTYFN, s = e.error || EMPTYFN, i = Utils.xmlrequest(); if (i.onreadystatechange = function () { if (4 === i.readyState) { if (200 === (i.status || 0)) { if ("text" === t) return void n(i.responseText, i); if ("json" === t) { try { var e = Utils.parseJSON(i.responseText); n(e, i) } catch (e) { s(i.responseText, i, "错误的数据,无法转换为json") } return } return "xml" === t ? void (i.responseXML && i.responseXML.documentElement ? n(i.responseXML.documentElement, i) : s(i.responseText, i, "浏览器不支持ajax返回xml对象")) : void n(i.response || i.responseText, i) } if ("json" === t) { try { var e = Utils.parseJSON(i.responseText); s(e, i, "服务器返回错误信息") } catch (e) { s(i.responseText, i, "服务器返回错误信息") } return } return "xml" === t ? void (i.responseXML && i.responseXML.documentElement ? s(i.responseXML.documentElement, i, "服务器返回错误信息") : s(i.responseText, i, "服务器返回错误信息")) : void s(i.responseText, i, "服务器返回错误信息") } 0 === i.readyState && s(i.responseText, i, "服务器异常") }, e.responseType) { if (!i.responseType) return s("", i, "当前浏览器不支持设置响应类型"), null; i.responseType = e.responseType } if (e.mimeType) { if (!Utils.hasOverrideMimeType) return s("", i, "当前浏览器不支持设置mimeType"), null; i.overrideMimeType(e.mimeType) } var o = e.type || "POST", a = e.data || null, r = ""; if ("get" === o.toLowerCase() && a) { for (var d in a) a.hasOwnProperty(d) && (r += d + "=" + a[d] + "&"); r = r ? r.slice(0, -1) : r, e.url += (e.url.indexOf("?") > 0 ? "&" : "?") + (r ? r + "&" : r) + "_v=" + (new Date).getTime(), a = null, r = null } if (i.open(o, e.url), Utils.isCanSetRequestHeader) { var l = e.headers || {}; for (var c in l) l.hasOwnProperty(c) && i.setRequestHeader(c, l[c]) } return i.send(a), i }
        }
    }(), EmMessage = function (e, t) { return !this instanceof EmMessage ? new EmMessage(e) : (this._msg = {}, "function" == typeof EmMessage[e] && (EmMessage[e].prototype.setGroup = this.setGroup, this._msg = new EmMessage[e](t)), this._msg) }; EmMessage.prototype.setGroup = function (e) { this.body.group = e }; var _msgHash = {}, Message = function (e) { if (!this instanceof Message) return new Message(e, conn); this.msg = e }; Message.prototype.send = function (e) { var t = this, n = function (t) { t.ext = t.ext || {}, t.ext.weichat = t.ext.weichat || {}, t.ext.weichat.originType = t.ext.weichat.originType || "webim"; var s = { from: e.context.userId || "", to: t.to, bodies: [t.body], ext: t.ext || {} }, i = Utils.stringify(s), o = $msg({ type: t.group || "chat", to: t.toJid, id: t.id, xmlns: "jabber:client" }).c("body").t(i); t.roomType && o.up().c("roomtype", { xmlns: "easemob:x:roomtype", type: "chatroom" }), e.retry && setTimeout(function () { _msgHash[t.id] && (void 0 === _msgHash[t.id].timeout && (_msgHash[t.id].timeout = 2), 0 === _msgHash[t.id].timeout ? (_msgHash[t.id].timeout = 2, _msgHash[t.id].msg.fail instanceof Function && _msgHash[t.id].msg.fail(t.id)) : (_msgHash[t.id].timeout -= 1, n(t))) }, 2e4), e.sendCommand(o.tree(), t.id) }; if (t.msg.file) { if (t.msg.body && t.msg.body.url) return void n(t.msg); var s = t.msg.onFileUploadComplete, i = function (e) { if (e.entities[0]["file-metadata"]) { var i = e.entities[0]["file-metadata"]["content-length"]; t.msg.file_length = i, t.msg.filetype = e.entities[0]["file-metadata"]["content-type"], i > 204800 && (t.msg.thumbnail = !0) } t.msg.body = { type: t.msg.type || "file", url: e.uri + "/" + e.entities[0].uuid, secret: e.entities[0]["share-secret"], filename: t.msg.file.filename || t.msg.filename, size: { width: t.msg.width || 0, height: t.msg.height || 0 }, length: t.msg.file_length || 0, file_length: t.msg.file_length || 0, filetype: t.msg.filetype }, n(t.msg), s instanceof Function && s(e, t.msg.id) }; t.msg.onFileUploadComplete = i, Utils.uploadFile.call(e, t.msg) } else t.msg.body = { type: "chat" === t.msg.type ? "txt" : t.msg.type, msg: t.msg.msg }, "cmd" === t.msg.type ? t.msg.body.action = t.msg.action : "loc" === t.msg.type && (t.msg.body.addr = t.msg.addr, t.msg.body.lat = t.msg.lat, t.msg.body.lng = t.msg.lng), n(t.msg) }; var Connection = function () { var _networkSt, _listenNetwork = function (e, t) { window.addEventListener ? (window.addEventListener("online", e), window.addEventListener("offline", t)) : window.attachEvent && (document.body ? (document.body.attachEvent("onoffline", t), document.body.attachEvent("onoffline", t)) : window.attachEvent("load", function () { document.body.attachEvent("onoffline", t), document.body.attachEvent("onoffline", t) })) }, _parseRoomFn = function (e) { var t = [], n = e.getElementsByTagName("item"); if (n) for (var s = 0; s < n.length; s++) { var i = n[s], o = i.getAttribute("jid"), a = o.split("@")[0], r = { jid: o, name: i.getAttribute("name"), roomId: a.split("_")[1] }; t.push(r) } return t }, _parseRoomOccupantsFn = function (e) { var t = [], n = e.getElementsByTagName("item"); if (n) for (var s = 0; s < n.length; s++) { var i = n[s], o = { jid: i.getAttribute("jid"), name: i.getAttribute("name") }; t.push(o) } return t }, _parseResponseMessage = function (msginfo) { var parseMsgData = { errorMsg: !0, data: [] }, msgBodies = msginfo.getElementsByTagName("body"); if (msgBodies) { for (var i = 0; i < msgBodies.length; i++) { var msgBody = msgBodies[i], childNodes = msgBody.childNodes; if (childNodes && childNodes.length > 0) { var childNode = msgBody.childNodes[0]; if (childNode.nodeType == Strophe.ElementType.TEXT) { var jsondata = childNode.wholeText || childNode.nodeValue; jsondata = jsondata.replace("\n", "<br>"); try { var data = eval("(" + jsondata + ")"); parseMsgData.errorMsg = !1, parseMsgData.data = [data] } catch (e) { } } } } var delayTags = msginfo.getElementsByTagName("delay"); if (delayTags && delayTags.length > 0) { var delayTag = delayTags[0], delayMsgTime = delayTag.getAttribute("stamp"); delayMsgTime && (parseMsgData.delayTimeStamp = delayMsgTime) } } else { var childrens = msginfo.childNodes; if (childrens && childrens.length > 0) { var child = msginfo.childNodes[0]; if (child.nodeType == Strophe.ElementType.TEXT) try { var data = eval("(" + child.nodeValue + ")"); parseMsgData.errorMsg = !1, parseMsgData.data = [data] } catch (e) { } } } return parseMsgData }, _parseNameFromJidFn = function (e, t) { t = t || ""; var n = e, s = n.indexOf("_"); s !== -1 && (n = n.substring(s + 1)); var i = n.indexOf("@" + t); return i !== -1 && (n = n.substring(0, i)), n }, _parseFriendFn = function (e) { var t = [], n = e.getElementsByTagName("item"); if (n) for (var s = 0; s < n.length; s++) { var i = n[s], o = i.getAttribute("jid"); if (o) { var a = i.getAttribute("subscription"), r = { subscription: a, jid: o }, d = i.getAttribute("ask"); d && (r.ask = d); var l = i.getAttribute("name"); if (l) r.name = l; else { var c = _parseNameFromJidFn(o); r.name = c } var m = []; Strophe.forEachChild(i, "group", function (e) { m.push(Strophe.getText(e)) }), r.groups = m, t.push(r) } } return t }, _dologin2IM = function (e, t) { var n = e.access_token || ""; if ("" == n) { var s = Utils.stringify(e); return void t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "登录失败," + s, data: e, xhr: xhr }) } t.context.accessToken = e.access_token, t.context.accessTokenExpires = e.expires_in; var i = null; if (t.isOpening() && t.context.stropheConn) i = t.context.stropheConn; else { if (t.isOpened() && t.context.stropheConn) return; i = new Strophe.Connection(t.url, { inactivity: t.inactivity, maxRetries: t.maxRetries, pollingTime: t.pollingTime }) } var o = function (e, n) { _login2ImCallback(e, n, t) }; t.context.stropheConn = i, t.route ? i.connect(t.context.jid, "$t$" + n, o, t.wait, t.hold, t.route) : i.connect(t.context.jid, "$t$" + n, o, t.wait, t.hold) }, _parseMessageType = function (e) { var t = "normal", n = e.getElementsByTagName("received"); if (n && n.length > 0 && "urn:xmpp:receipts" === n[0].namespaceURI) t = "received"; else { var s = e.getElementsByTagName("invite"); s && s.length > 0 && (t = "invite") } return t }, _handleQueueMessage = function (e) { for (var t in _msgHash) _msgHash.hasOwnProperty(t) && _msgHash[t].send(e) }, _login2ImCallback = function (e, t, n) { if (e == Strophe.Status.CONNFAIL) n.onError({ type: EASEMOB_IM_CONNCTION_SERVER_CLOSE_ERROR, msg: t, reconnect: !0 }); else if (e == Strophe.Status.ATTACHED || e == Strophe.Status.CONNECTED) { var s = function (e) { var t = _parseMessageType(e); return "received" === t ? (n.handleReceivedMessage(e), !0) : "invite" === t ? (n.handleInviteMessage(e), !0) : (n.handleMessage(e), !0) }, i = function (e) { return n.handlePresence(e), !0 }, o = function (e) { return n.handlePing(e), !0 }, a = function (e) { return n.handleIq(e), !0 }; n.addHandler(s, null, "message", null, null, null), n.addHandler(i, null, "presence", null, null, null), n.addHandler(o, "urn:xmpp:ping", "iq", "get", null, null), n.addHandler(a, "jabber:iq:roster", "iq", "set", null, null), n.context.status = STATUS_OPENED; var r = [EASEMOB_IM_MESSAGE_REC_TEXT, EASEMOB_IM_MESSAGE_REC_EMOTION]; Utils.isCanDownLoadFile && (r.push(EASEMOB_IM_MESSAGE_REC_PHOTO), r.push(EASEMOB_IM_MESSAGE_REC_AUDIO_FILE)); var d = [EASEMOB_IM_MESSAGE_SED_TEXT]; Utils.isCanUploadFile && (d.push(EASEMOB_IM_MESSAGE_REC_PHOTO), d.push(EASEMOB_IM_MESSAGE_REC_AUDIO_FILE)), n.notifyVersion(), n.retry && _handleQueueMessage(n), n.onOpened({ canReceive: r, canSend: d, accessToken: n.context.accessToken }), n.heartBeat() } else e == Strophe.Status.DISCONNECTING ? n.isOpened() && (n.stopHeartBeat(), n.context.status = STATUS_CLOSING, n.onError({ type: EASEMOB_IM_CONNCTION_SERVER_CLOSE_ERROR, msg: t, reconnect: !0 })) : e == Strophe.Status.DISCONNECTED ? (n.context.status = STATUS_CLOSED, n.clear(), n.onClosed()) : e == Strophe.Status.AUTHFAIL ? (n.onError({ type: EASEMOB_IM_CONNCTION_AUTH_ERROR, msg: "登录失败,请输入正确的用户名和密码" }), n.clear()) : e == Strophe.Status.ERROR && n.onError({ type: EASEMOB_IM_CONNCTION_SERVER_ERROR, msg: t || "服务器异常" }) }, _getJid = function (e, t) { var n = e.toJid || ""; if ("" === n) { var s = t.context.appKey || "", i = s + "_" + e.to + "@" + t.domain; e.resource && (i = i + "/" + e.resource), n = i } return n }, _innerCheck = function (e, t) { if (e = e || {}, "" == e.user) return t.onError({ type: EASEMOB_IM_CONNCTION_USER_NOT_ASSIGN_ERROR, msg: "未指定用户" }), !1; var n = e.user || "", s = e.appKey || "", i = s.split("#"); if (2 !== i.length) return t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; var o = i[0], a = i[1]; if (!o) return t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; if (!a) return t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "请指定正确的开发者信息(appKey)" }), !1; var r = s + "_" + n.toLowerCase() + "@" + t.domain, d = e.resource || "webim"; return t.multiResources && (d += n + (new Date).getTime() + Math.floor(1e6 * Math.random().toFixed(6))), t.context.jid = r + "/" + d, t.context.userId = n, t.context.appKey = s, t.context.appName = a, t.context.orgName = o, !0 }, _getXmppUrl = function (e, t) { if (/^(ws|http)s?:\/\/?/.test(e)) return e; var n = { prefix: "http", base: "://" + (e || "im-api.easemob.com"), suffix: "/http-bind/" }; return t && Utils.isSupportWss ? (n.prefix = "wss", n.suffix = "/ws/") : t ? n.prefix = "https" : window.WebSocket && (n.prefix = "ws", n.suffix = "/ws/"), n.prefix + n.base + n.suffix }, connection = function (e) { if (!this instanceof Connection) return new Connection(e); var e = e || {}; this.multiResources = e.multiResources || !1, this.wait = e.wait || 30, this.retry = e.retry || !1, this.https = e.https || https, this.url = _getXmppUrl(e.url, this.https), this.hold = e.hold || 1, this.route = e.route || null, this.domain = e.domain || "easemob.com", this.inactivity = e.inactivity || 30, this.heartBeatWait = e.heartBeatWait || 6e4, this.maxRetries = e.maxRetries || 5, this.pollingTime = e.pollingTime || 800, this.stropheConn = !1, this.context = { status: STATUS_INIT } }; return connection.prototype.listen = function (e) { e.url && (this.url = _getXmppUrl(e.url, this.https)), this.onOpened = e.onOpened || EMPTYFN, this.onClosed = e.onClosed || EMPTYFN, this.onTextMessage = e.onTextMessage || EMPTYFN, this.onEmotionMessage = e.onEmotionMessage || EMPTYFN, this.onPictureMessage = e.onPictureMessage || EMPTYFN, this.onAudioMessage = e.onAudioMessage || EMPTYFN, this.onVideoMessage = e.onVideoMessage || EMPTYFN, this.onFileMessage = e.onFileMessage || EMPTYFN, this.onLocationMessage = e.onLocationMessage || EMPTYFN, this.onCmdMessage = e.onCmdMessage || EMPTYFN, this.onPresence = e.onPresence || EMPTYFN, this.onRoster = e.onRoster || EMPTYFN, this.onError = e.onError || EMPTYFN, this.onReceivedMessage = e.onReceivedMessage || EMPTYFN, this.onInviteMessage = e.onInviteMessage || EMPTYFN, this.onOffline = e.onOffline || EMPTYFN, this.onOnline = e.onOnline || EMPTYFN, _listenNetwork(this.onOnline, this.onOffline) }, connection.prototype.heartBeat = function () { var e = this; if (!e.heartBeatID) { var t = { to: e.domain, type: "normal" }; e.heartBeatID = setInterval(function () { e.sendHeartBeatMessage(t) }, e.heartBeatWait) } }, connection.prototype.sendHeartBeatMessage = function (e) { var t = {}, n = Utils.stringify(t), s = $msg({ to: e.to, type: e.type, id: this.getUniqueId(), xmlns: "jabber:client" }).c("body").t(n); this.sendCommand(s.tree()) }, connection.prototype.stopHeartBeat = function () { this.heartBeatID = clearInterval(this.heartBeatID) }, connection.prototype.sendReceiptsMessage = function (e) { var t = $msg({ from: this.context.jid || "", to: "easemob.com", id: e.id || "" }).c("received", { xmlns: "urn:xmpp:receipts", id: e.id || "" }); this.sendCommand(t.tree()) }, connection.prototype.open = function (e) { if (_innerCheck(e, this)) { var t = this; if (!t.isOpening() && !t.isOpened()) if (e.accessToken) e.access_token = e.accessToken, _dologin2IM(e, t); else { var n = e.apiUrl || (this.https ? "https" : "http") + "://a1.easemob.com", s = this.context.userId, i = e.pwd || "", o = this.context.appName, a = this.context.orgName, r = function (e, n) { t.context.status = STATUS_DOLOGIN_IM, _dologin2IM(e, t) }, d = function (e, n, s) { t.clear(), e.error && e.error_description ? t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "登录失败," + e.error_description, data: e, xhr: n }) : t.onError({ type: EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR, msg: "登录失败", data: e, xhr: n }) }; this.context.status = STATUS_DOLOGIN_USERGRID; var l = { grant_type: "password", username: s, password: i }, c = Utils.stringify(l), e = { url: n + "/" + a + "/" + o + "/token", dataType: "json", data: c, success: r || EMPTYFN, error: d || EMPTYFN }; Utils.ajax(e) } } }, connection.prototype.attach = function (e) { if (_innerCheck(e, this)) { e = e || {}; var t = e.accessToken || ""; if ("" == t) return void this.onError({ type: EASEMOB_IM_CONNCTION_ATTACH_USERGRID_ERROR, msg: "未指定用户的accessToken" }); var n = e.sid || ""; if ("" === n) return void this.onError({ type: EASEMOB_IM_CONNCTION_ATTACH_ERROR, msg: "未指定用户的会话信息" }); var s = e.rid || ""; if ("" === s) return void this.onError({ type: EASEMOB_IM_CONNCTION_ATTACH_ERROR, msg: "未指定用户的消息id" }); var i = new Strophe.Connection(this.url, { inactivity: this.inactivity, maxRetries: this.maxRetries, pollingTime: this.pollingTime }); this.context.accessToken = t, this.context.stropheConn = i, this.context.status = STATUS_DOLOGIN_IM; var o = this, a = function (e, t) { _login2ImCallback(e, t, o) }, r = this.context.jid, d = this.wait, l = this.hold, c = this.wind || 5; i.attach(r, n, s, a, d, l, c) } }, connection.prototype.close = function () { this.context.status != STATUS_INIT && (this.isClosed() || this.isClosing() || (this.stopHeartBeat(), this.context.status = STATUS_CLOSING, this.context.stropheConn.disconnect())) }, connection.prototype.addHandler = function (e, t, n, s, i, o, a) { this.context.stropheConn.addHandler(e, t, n, s, i, o, a) }, connection.prototype.notifyVersion = function (e, t) { var n = (_getJid({}, this), $iq({ from: this.context.jid || "", to: this.domain, type: "result" }).c("query", { xmlns: "jabber:iq:version" }).c("name").t("easemob").up().c("version").t(Easemob.im.version).up().c("os").t("webim")); e = e || EMPTYFN, error = t || this.onError; var s = function (e) { error({ type: EASEMOB_IM_CONNCTION_NOTIFYVERSION_ERROR, msg: "发送版本信息给服务器时失败", data: e }) }; this.context.stropheConn.sendIQ(n.tree(), e, s) }, connection.prototype.handlePresence = function (e) { if (!this.isClosed()) { var t = e.getAttribute("from") || "", n = e.getAttribute("to") || "", s = e.getAttribute("type") || "", i = e.getAttribute("presence_type") || "", o = _parseNameFromJidFn(t), a = _parseNameFromJidFn(n), r = { from: o, to: a, fromJid: t, toJid: n, type: s, chatroom: !!e.getElementsByTagName("roomtype").length }, d = e.getElementsByTagName("show"); if (d && d.length > 0) { var l = d[0]; r.show = Strophe.getText(l) } var c = e.getElementsByTagName("status"); if (c && c.length > 0) { var m = c[0]; r.status = Strophe.getText(m), r.code = m.getAttribute("code") } var u = e.getElementsByTagName("priority"); if (u && u.length > 0) { var h = u[0]; r.priority = Strophe.getText(h) } var p = e.getElementsByTagName("error"); if (p && p.length > 0) { var p = p[0]; r.error = { code: p.getAttribute("code") } } var g = e.getElementsByTagName("destroy"); if (g && g.length > 0) { var g = g[0]; r.destroy = !0; var f = g.getElementsByTagName("reason"); f && f.length > 0 && (r.reason = Strophe.getText(f[0])) } if (r.chatroom) { t.slice(t.lastIndexOf("/") + 1) === this.context.userId && ("" !== r.type || r.code ? "unavailable" !== i && "unavailable" !== r.type || (r.status ? 110 == r.code ? r.type = "leaveChatRoom" : r.error && 406 == r.error.code && (r.type = "joinChatRoomFailed") : r.type = "leaveChatRoom") : r.type = "joinChatRoomSuccess") } else "unavailable" !== i && "unavailable" !== s || (r.destroy ? r.type = "deleteGroupChat" : 307 != r.code && 321 != r.code || (r.type = "leaveGroup")); this.onPresence(r, e) } }, connection.prototype.handlePing = function (e) { if (!this.isClosed()) { var t = e.getAttribute("id"), n = e.getAttribute("from"), s = e.getAttribute("to"), i = $iq({ from: s, to: n, id: t, type: "result" }); this.sendCommand(i.tree()) } }, connection.prototype.handleIq = function (e) { var t = e.getAttribute("id"), n = e.getAttribute("from") || "", s = (_parseNameFromJidFn(n), this.context.jid), i = (this.context.userId, $iq({ type: "result", id: t, from: s })); this.sendCommand(i.tree()); var o = e.getElementsByTagName("query"); if (o && o.length > 0) { var a = o[0], r = _parseFriendFn(a); this.onRoster(r) } return !0 }, connection.prototype.handleMessage = function (e) { if (!this.isClosed()) { var t = e.getAttribute("id") || ""; this.sendReceiptsMessage({ id: t }); var n = _parseResponseMessage(e); if (n.errorMsg) return void this.handlePresence(e); var s = n.data; for (var i in s) if (s.hasOwnProperty(i)) { var o = s[i]; if (o.from && o.to) { var a = o.from.toLowerCase(), r = o.to.toLowerCase(), d = o.ext || {}, l = "", c = e.getElementsByTagName("roomtype"); l = c.length ? c[0].getAttribute("type") || "chat" : e.getAttribute("type") || "chat"; var m = o.bodies; if (m && 0 != m.length) { var u = o.bodies[0], h = u.type; if ("txt" === h) { var p = u.msg, g = Utils.parseTextMessage(p, Easemob.im.EMOTIONS); g.isemotion ? this.onEmotionMessage({ id: t, type: l, from: a, to: r, delay: n.delayTimeStamp, data: g.body, ext: d }) : this.onTextMessage({ id: t, type: l, from: a, to: r, delay: n.delayTimeStamp, data: p, ext: d }) } else if ("img" === h) { var f = 0, b = 0; u.size && (f = u.size.width, b = u.size.height); var o = { id: t, type: l, from: a, to: r, url: u.url, secret: u.secret, filename: u.filename, thumb: u.thumb, thumb_secret: u.thumb_secret, file_length: u.file_length || "", width: f, height: b, filetype: u.filetype || "", accessToken: this.context.accessToken || "", ext: d, delay: n.delayTimeStamp }; this.onPictureMessage(o) } else "audio" === h ? this.onAudioMessage({ id: t, type: l, from: a, to: r, url: u.url, secret: u.secret, filename: u.filename, length: u.length || "", file_length: u.file_length || "", filetype: u.filetype || "", accessToken: this.context.accessToken || "", ext: d, delay: n.delayTimeStamp }) : "file" === h ? this.onFileMessage({ id: t, type: l, from: a, to: r, url: u.url, secret: u.secret, filename: u.filename, file_length: u.file_length, accessToken: this.context.accessToken || "", ext: d, delay: n.delayTimeStamp }) : "loc" === h ? this.onLocationMessage({ id: t, type: l, from: a, to: r, addr: u.addr, lat: u.lat, lng: u.lng, ext: d, delay: n.delayTimeStamp }) : "video" === h ? this.onVideoMessage({ id: t, type: l, from: a, to: r, url: u.url, secret: u.secret, filename: u.filename, file_length: u.file_length, accessToken: this.context.accessToken || "", ext: d, delay: n.delayTimeStamp }) : "cmd" === h && this.onCmdMessage({ id: t, from: a, to: r, action: u.action, ext: d, delay: n.delayTimeStamp }) } } } } }, connection.prototype.handleReceivedMessage = function (e) { this.onReceivedMessage(e); var t, n, s = e.getElementsByTagName("received"); s.length > 0 && (t = s[0].childNodes && s[0].childNodes.length > 0 ? s[0].childNodes[0].nodeValue : s[0].innerHTML || s[0].innerText, n = s[0].getAttribute("mid")), _msgHash[t] && (_msgHash[t].msg.success instanceof Function && _msgHash[t].msg.success(t, n), delete _msgHash[t]) }, connection.prototype.handleInviteMessage = function (e) { var t = null, n = e.getElementsByTagName("invite"), s = e.getAttribute("id") || ""; if (this.sendReceiptsMessage({ id: s }), n && n.length > 0) { t = _parseNameFromJidFn(n[0].getAttribute("from")) } var i = e.getElementsByTagName("x"), o = null; if (i && i.length > 0) for (var a = 0; a < i.length; a++) if ("jabber:x:conference" === i[a].namespaceURI) { var r = i[a].getAttribute("jid"); o = _parseNameFromJidFn(r) } this.onInviteMessage({ type: "invite", from: t, roomid: o }) }, connection.prototype.sendCommand = function (e, t) { this.isOpened() ? this.context.stropheConn.send(e) : this.onError({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "连接还未建立,请先登录或等待登录处理完毕", reconnect: !0 }) }, connection.prototype.getUniqueId = function (e) { var t = new Date, n = new Date(2010, 1, 1), s = t.getTime() - n.getTime(), i = parseInt(s).toString(16); return "string" == typeof e || "number" == typeof e ? e + "_" + i : "WEBIM_" + i }, connection.prototype.send = function (e) { if ("[object Object]" === Object.prototype.toString.call(e)) { var t = this.context.appKey || "", n = t + "_" + e.to + "@" + this.domain; e.group && (n = t + "_" + e.to + "@conference." + this.domain), e.resource && (n = n + "/" + e.resource), e.toJid = n, e.id = e.id || this.getUniqueId(), _msgHash[e.id] = new Message(e), _msgHash[e.id].send(this) } else "string" == typeof e && _msgHash[e] && _msgHash[e].send(this) }, connection.prototype.addRoster = function (e) { var t = _getJid(e, this), n = e.name || "", s = e.groups || "", i = $iq({ type: "set" }); if (i.c("query", { xmlns: "jabber:iq:roster" }), i.c("item", { jid: t, name: n }), s) for (var o = 0; o < s.length; o++) i.c("group").t(s[o]).up(); var a = e.success || EMPTYFN, r = e.error || EMPTYFN; this.context.stropheConn.sendIQ(i.tree(), a, r) }, connection.prototype.removeRoster = function (e) { var t = _getJid(e, this), n = $iq({ type: "set" }).c("query", { xmlns: "jabber:iq:roster" }).c("item", { jid: t, subscription: "remove" }), s = e.success || EMPTYFN, i = e.error || EMPTYFN; this.context.stropheConn.sendIQ(n, s, i) }, connection.prototype.getRoster = function (e) { var t = $iq({ type: "get" }).c("query", { xmlns: "jabber:iq:roster" }); e = e || {}, suc = e.success || this.onRoster; var n = function (e) { var t = [], n = e.getElementsByTagName("query"); if (n && n.length > 0) { t = _parseFriendFn(n[0]) } suc(t, e) }; error = e.error || this.onError; var s = function (e) { error({ type: EASEMOB_IM_CONNCTION_GETROSTER_ERROR, msg: "获取联系人信息失败", data: e }) }; this.isOpened() ? this.context.stropheConn.sendIQ(t.tree(), n, s) : error({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "连接还未建立,请先登录或等待登录处理完毕" }) }, connection.prototype.subscribe = function (e) { var t = _getJid(e, this), n = $pres({ to: t, type: "subscribe" }); e.message && n.c("status").t(e.message).up(), e.nick && n.c("nick", { xmlns: "http://jabber.org/protocol/nick" }).t(e.nick), this.sendCommand(n.tree()) }, connection.prototype.subscribed = function (e) { var t = _getJid(e, this), n = $pres({ to: t, type: "subscribed" }); e.message && n.c("status").t(e.message).up(), this.sendCommand(n.tree()) }, connection.prototype.unsubscribe = function (e) { var t = _getJid(e, this), n = $pres({ to: t, type: "unsubscribe" }); e.message && n.c("status").t(e.message), this.sendCommand(n.tree()) }, connection.prototype.unsubscribed = function (e) { var t = _getJid(e, this), n = $pres({ to: t, type: "unsubscribed" }); e.message && n.c("status").t(e.message).up(), this.sendCommand(n.tree()) }, connection.prototype.createRoom = function (e) { var t, n = e.success || EMPTYFN, s = e.error || EMPTYFN; return t = $iq({ to: e.rooomName, type: "set" }).c("query", { xmlns: Strophe.NS.MUC_OWNER }).c("x", { xmlns: "jabber:x:data", type: "submit" }), this.context.stropheConn.sendIQ(t.tree(), n, s) }, connection.prototype.join = function (e) { var t = this.context.appKey + "_" + e.roomId + "@conference." + this.domain, n = t + "/" + this.context.userId, s = e.success || EMPTYFN, i = e.error || EMPTYFN, o = function (e) { i({ type: EASEMOB_IM_CONNCTION_JOINROOM_ERROR, msg: "加入房间失败", data: e }) }, a = $pres({ from: this.context.jid, to: n }).c("x", { xmlns: Strophe.NS.MUC }); this.context.stropheConn.sendIQ(a.tree(), s, o) }, connection.prototype.listRooms = function (e) { var t = $iq({ to: e.server || "conference." + this.domain, from: this.context.jid, type: "get" }).c("query", { xmlns: Strophe.NS.DISCO_ITEMS }), n = e.success || EMPTYFN, s = function (e) { var t = []; t = _parseRoomFn(e), n(t) }, i = e.error || EMPTYFN, o = function (e) { i({ type: EASEMOB_IM_CONNCTION_GETROOM_ERROR, msg: "获取群组列表失败", data: e }) }; this.context.stropheConn.sendIQ(t.tree(), s, o) }, connection.prototype.queryRoomMember = function (e) { var t = (this.domain, []), n = $iq({ to: this.context.appKey + "_" + e.roomId + "@conference." + this.domain, type: "get" }).c("query", { xmlns: Strophe.NS.MUC + "#admin" }).c("item", { affiliation: "member" }), s = e.success || EMPTYFN, i = function (e) { var n = e.getElementsByTagName("item"); if (n) for (var i = 0; i < n.length; i++) { var o = n[i], a = { jid: o.getAttribute("jid"), affiliation: "member" }; t.push(a) } s(t) }, o = e.error || EMPTYFN, a = function (e) { o({ type: EASEMOB_IM_CONNCTION_GETROOMMEMBER_ERROR, msg: "获取群组成员列表失败", data: e }) }; this.context.stropheConn.sendIQ(n.tree(), i, a) }, connection.prototype.queryRoomInfo = function (e) { var t = this.domain, n = $iq({ to: this.context.appKey + "_" + e.roomId + "@conference." + t, type: "get" }).c("query", { xmlns: Strophe.NS.DISCO_INFO }), s = e.success || EMPTYFN, i = [], o = function (e) { var n = e.getElementsByTagName("field"); if (n) for (var o = 0; o < n.length; o++) { var a = n[o]; if ("owner" === a.getAttribute("label")) { var r = { jid: (a.textContent || a.text) + "@" + t, affiliation: "owner" }; i.push(r) } } s(i) }, a = e.error || EMPTYFN, r = function (e) { a({ type: EASEMOB_IM_CONNCTION_GETROOMINFO_ERROR, msg: "获取群组信息失败", data: e }) }; this.context.stropheConn.sendIQ(n.tree(), o, r) }, connection.prototype.queryRoomOccupants = function (e) { var t = e.success || EMPTYFN, n = function (e) { var n = []; n = _parseRoomOccupantsFn(e), t(n) }, s = e.error || EMPTYFN, i = function (e) { s({ type: EASEMOB_IM_CONNCTION_GETROOMOCCUPANTS_ERROR, msg: "获取群组出席者列表失败", data: e }) }, o = { xmlns: Strophe.NS.DISCO_ITEMS }, a = $iq({ from: this.context.jid, to: this.context.appKey + "_" + e.roomId + "@conference." + this.domain, type: "get" }).c("query", o); this.context.stropheConn.sendIQ(a.tree(), n, i) }, connection.prototype.setUserSig = function (e) { var t = $pres({ xmlns: "jabber:client" }); e = e || "", t.c("status").t(e), this.sendCommand(t.tree()) }, connection.prototype.setPresence = function (e, t) { var n = $pres({ xmlns: "jabber:client" }); e && (t ? (n.c("show").t(e), n.up().c("status").t(t)) : n.c("show").t(e)), this.sendCommand(n.tree()) }, connection.prototype.getPresence = function () { var e = $pres({ xmlns: "jabber:client" }); this.sendCommand(e.tree()) }, connection.prototype.ping = function (e) { e = e || {}; var t = _getJid(e, this), n = $iq({ from: this.context.jid || "", to: t, type: "get" }).c("ping", { xmlns: "urn:xmpp:ping" }); suc = e.success || EMPTYFN, error = e.error || this.onError; var s = function (e) { error({ type: EASEMOB_IM_CONNCTION_PING_ERROR, msg: "ping失败", data: e }) }; this.isOpened() ? this.context.stropheConn.sendIQ(n.tree(), suc, s) : error({ type: EASEMOB_IM_CONNCTION_OPEN_ERROR, msg: "连接还未建立,请先登录或等待登录处理完毕" }) }, connection.prototype.isOpened = function () { return this.context.status == STATUS_OPENED }, connection.prototype.isOpening = function () { var e = this.context.status; return e == STATUS_DOLOGIN_USERGRID || e == STATUS_DOLOGIN_IM }, connection.prototype.isClosing = function () { return this.context.status == STATUS_CLOSING }, connection.prototype.isClosed = function () { return this.context.status == STATUS_CLOSED }, connection.prototype.clear = function () { var e = this.context.appKey; this.context = { status: STATUS_INIT, appKey: e } }, connection.prototype.getChatRooms = function (e) { if (!Utils.isCanSetRequestHeader) return void t.onError({ type: EASEMOB_IM_CONNCTION_AUTH_ERROR, msg: "当前浏览器不支持聊天室功能" }); var t = this, n = e.accessToken || this.context.accessToken; if (n) { var s = e.apiUrl || (this.https ? "https" : "http") + "://a1.easemob.com", i = this.context.appName, o = this.context.orgName; if (!i || !o) return void t.onError({ type: EASEMOB_IM_CONNCTION_AUTH_ERROR, msg: "token无效", data: null }); var a = function (t, n) { "function" == typeof e.success && e.success(t) }, r = function (e, n, s) { e.error && e.error_description && t.onError({ type: EASEMOB_IM_LOAD_CHATROOM_ERROR, msg: "获取聊天室失败," + e.error_description, data: e, xhr: n }) }, d = { url: s + "/" + o + "/" + i + "/chatrooms", dataType: "json", type: "get", headers: { Authorization: "Bearer " + n }, success: a || EMPTYFN, error: r || EMPTYFN }; Utils.ajax(d) } else t.onError({ type: EASEMOB_IM_CONNCTION_AUTH_ERROR, msg: "token无效", data: null }) }, connection.prototype.joinChatRoom = function (e) { var t = this.context.appKey + "_" + e.roomId + "@conference." + this.domain, n = t + "/" + this.context.userId, s = e.success || EMPTYFN, i = e.error || EMPTYFN, o = function (e) { i({ type: EASEMOB_IM_CONNCTION_JOINROOM_ERROR, msg: "加入聊天室失败", data: e }) }, a = $pres({ from: this.context.jid, to: n }).c("x", { xmlns: Strophe.NS.MUC + "#user" }).c("item", { affiliation: "member", role: "participant" }).up().up().c("roomtype", { xmlns: "easemob:x:roomtype", type: "chatroom" }); this.context.stropheConn.sendIQ(a.tree(), s, o) }, connection.prototype.quitChatRoom = function (e) { var t = this.context.appKey + "_" + e.roomId + "@conference." + this.domain, n = t + "/" + this.context.userId, s = e.success || EMPTYFN, i = e.error || EMPTYFN, o = function (e) { i({ type: EASEMOB_IM_CONNCTION_JOINROOM_ERROR, msg: "退出房间失败", data: e }) }, a = $pres({ from: this.context.jid, to: n, type: "unavailable" }).c("x", { xmlns: Strophe.NS.MUC + "#user" }).c("item", { affiliation: "none", role: "none" }).up().up().c("roomtype", { xmlns: "easemob:x:roomtype", type: "chatroom" }); this.context.stropheConn.sendIQ(a.tree(), s, o) }, connection }(), EMPTYFN = function () { }; tempIndex = 0, EASEMOB_IM_CONNCTION_USER_NOT_ASSIGN_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_OPEN_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_AUTH_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_OPEN_USERGRID_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_ATTACH_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_ATTACH_USERGRID_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_REOPEN_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_SERVER_CLOSE_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_SERVER_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_IQ_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_PING_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_NOTIFYVERSION_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_GETROSTER_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_CROSSDOMAIN_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_LISTENING_OUTOF_MAXRETRIES = tempIndex++, EASEMOB_IM_CONNCTION_RECEIVEMSG_CONTENTERROR = tempIndex++, EASEMOB_IM_CONNCTION_JOINROOM_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_GETROOM_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_GETROOMINFO_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_GETROOMMEMBER_ERROR = tempIndex++, EASEMOB_IM_CONNCTION_GETROOMOCCUPANTS_ERROR = tempIndex++, EASEMOB_IM_UPLOADFILE_BROWSER_ERROR = tempIndex++, EASEMOB_IM_UPLOADFILE_ERROR = tempIndex++, EASEMOB_IM_UPLOADFILE_NO_LOGIN = tempIndex++, EASEMOB_IM_UPLOADFILE_NO_FILE = tempIndex++, EASEMOB_IM_DOWNLOADFILE_ERROR = tempIndex++, EASEMOB_IM_DOWNLOADFILE_NO_LOGIN = tempIndex++, EASEMOB_IM_DOWNLOADFILE_BROWSER_ERROR = tempIndex++, EASEMOB_IM_RESISTERUSER_ERROR = tempIndex++, EASEMOB_IM_LOAD_CHATROOM_ERROR = tempIndex++, EASEMOB_IM_JOIN_CHATROOM_ERROR = tempIndex++, EASEMOB_IM_QUIT_CHATROOM_ERROR = tempIndex++, tempIndex = 0, EASEMOB_IM_MESSAGE_REC_TEXT = tempIndex++, EASEMOB_IM_MESSAGE_REC_TEXT_ERROR = tempIndex++, EASEMOB_IM_MESSAGE_REC_EMOTION = tempIndex++, EASEMOB_IM_MESSAGE_REC_PHOTO = tempIndex++, EASEMOB_IM_MESSAGE_REC_AUDIO = tempIndex++, EASEMOB_IM_MESSAGE_REC_AUDIO_FILE = tempIndex++, EASEMOB_IM_MESSAGE_REC_VEDIO = tempIndex++, EASEMOB_IM_MESSAGE_REC_VEDIO_FILE = tempIndex++, EASEMOB_IM_MESSAGE_REC_FILE = tempIndex++, EASEMOB_IM_MESSAGE_SED_TEXT = tempIndex++, EASEMOB_IM_MESSAGE_SED_EMOTION = tempIndex++, EASEMOB_IM_MESSAGE_SED_PHOTO = tempIndex++, EASEMOB_IM_MESSAGE_SED_AUDIO = tempIndex++, EASEMOB_IM_MESSAGE_SED_AUDIO_FILE = tempIndex++, EASEMOB_IM_MESSAGE_SED_VEDIO = tempIndex++, EASEMOB_IM_MESSAGE_SED_VEDIO_FILE = tempIndex++, EASEMOB_IM_MESSAGE_SED_FILE = tempIndex++, EASEMOB_IM_FILESIZE_LIMIT = 10485760, tempIndex = 0; var STATUS_INIT = tempIndex++, STATUS_DOLOGIN_USERGRID = tempIndex++, STATUS_DOLOGIN_IM = tempIndex++, STATUS_OPENED = tempIndex++, STATUS_CLOSING = tempIndex++, STATUS_CLOSED = tempIndex++; delete tempIndex, Easemob.im.Connection = Connection, Easemob.im.EmMessage = EmMessage, Easemob.im.Helper = Easemob.im.Utils = Utils, window.Easemob = Easemob
}(window, void 0), function () {
    window.easemobim = window.easemobim || {}; var e = /android/i.test(navigator.useragent), t = "https:" === location.protocol, n = t ? "https:" : "http:", s = /mobile/i.test(navigator.userAgent), i = function () { var e, t = navigator.userAgent, n = { 4: 8, 5: 9, 6: 10, 7: 11 }; return (e = t.match(/MSIE (\d+)/i)) && e[1] ? +e[1] : (e = t.match(/Trident\/(\d+)/i), e && e[1] ? n[e[1]] || null : 1e4) }()
    ; easemobim.utils = { window: { width: document.body.clientWidth, height: document.body.clientHeight }, ssl: t, root: window.top == window, protocol: n, nodeListType: { "[object Object]": 1, "[object NodeList]": 1, "[object HTMLCollection]": 1, "[object Array]": 1 }, convertFalse: function (e) { return "false" !== (e = void 0 === e ? "" : e) && e }, $Dom: function (e) { return document.getElementById(e) }, each: function (e, t) { for (var n in e) e.hasOwnProperty(n) && "function" == typeof t && t(n, e[n]) }, $Remove: function (e) { if (e) if (e.remove) e.remove(); else { var t = e.parentNode; t && t.removeChild(e) } }, siblings: function (e, t) { if (!e || !e.parentNode) return null; for (var n = e.parentNode.childNodes, s = [], i = 0, o = n.length; i < o; i++) 1 === n[i].nodeType && n[i] != e && (t && this.hasClass(n[i], t), s.push(n[i])); return s }, insertBefore: function (e, t, n) { e && t && (0 === e.childNodes.length ? e.appendChild(t) : e.insertBefore(t, n || null)) }, getIEVersion: i, live: function (e, t, n, s) { var i = this, o = s || document; i.on(o, t, function (t) { var s = t || window.event, a = s.target || s.srcElement, r = e.split(".").length < 2 ? o.getElementsByTagName(e) : i.$Class(e); if (r.length) for (var d = r.length, l = 0; l < d; l++) r[l] != a && r[l] != a.parentNode || n.apply(r[l] == a ? a : a.parentNode, arguments); else r == e && n.apply(e, arguments) }) }, on: function () { var e = function (e, t, n, s) { if (!t) return !1; for (var i = t.split(" "), o = 0, a = i.length; o < a; o++) e.addEventListener ? e.addEventListener(i[o], n, s) : e.attachEvent ? (e["_" + i[o]] = function () { n.apply(e, arguments) }, e.attachEvent("on" + i[o], e["_" + i[o]])) : e["on" + i[o]] = n }; return function (t, n, s, i) { if (Object.prototype.toString.call(t) in this.nodeListType && t.length) for (var o = 0, a = t.length; o < a; o++) 1 === t[o].nodeType && e(t[o], n, s, i); else e(t, n, s, i) } }(), remove: function (e, t, n) { e && (e.removeEventListener ? e.removeEventListener(t, n) : e.detachEvent ? e.detachEvent("on" + t, e["_" + t]) : e["on" + t] = null) }, one: function (e, t, n, s) { var i = this, o = function () { n.apply(this, arguments), i.remove(e, t, o) }; i.on(e, t, o, s) }, extend: function (e, t) { for (var n in t) if (t.hasOwnProperty(n)) { var s = Object.prototype.toString.call(t[n]); "[object Array]" === s ? (e[n] = [], this.extend(e[n], t[n])) : "[object Object]" === s ? (e[n] = {}, this.extend(e[n], t[n])) : e[n] = t[n] } return e }, addClass: function (e, t) { if (e) { if (Object.prototype.toString.call(e) in this.nodeListType && e.length) for (var n = 0, s = e.length; n < s; n++) this.hasClass(e[n], t) || void 0 !== e[n].className && (e[n].className += " " + t); else this.hasClass(e, t) || (e.className += " " + t); return e } }, removeClass: function (e, t) { if (e) { if (Object.prototype.toString.call(e) in this.nodeListType && e.length) for (var n = 0, s = e.length; n < s; n++) for (; void 0 !== e[n].className && e[n].className.indexOf(t) >= 0;) e[n].className = e[n].className.replace(t, ""); else for (; e.className.indexOf(t) >= 0;) e.className = e.className.replace(t, ""); return e } }, hasClass: function (e, t) { if (!e || !e.className) return !1; for (var n = e.className.split(" "), s = 0, i = n.length; s < i; s++) if (n[s].indexOf(t) > -1) return !0; return !1 }, $Class: function (e, t) { var n = e.split("."), s = n[0], i = n[1], o = t || document; if (o.getElementsByClassName) return o.getElementsByClassName(i); for (var a = o.getElementsByTagName(s), r = [], d = 0, l = a.length; d < l; d++) this.hasClass(a[d], i) && r.push(a[d]); return a = null, r }, html: function (e, t) { if (e) { if (i && i < 9 && "STYLE" === e.nodeName) e.styleSheet.cssText = t || ""; else { if (void 0 === t) return e.innerHTML; e.innerHTML = t } return e } }, encode: function (e) { if (!e || 0 === e.length) return ""; var t = ""; return t = e.replace(/&amp;/g, "&"), t = t.replace(/<(?=[^o][^)])/g, "&lt;"), t = t.replace(/>/g, "&gt;"), t = t.replace(/\"/g, "&quot;"), t = t.replace(/\n/g, "<br>") }, decode: function (e) { if (!e || 0 === e.length) return ""; return e.replace(/&amp;/g, "&") }, query: function (e) { var t = location.href.match(new RegExp("[?&]?" + e + "=[0-9a-zA-Z@%._-]*[^&]", "g")); return t = t && t[0] ? "?" == t[0][0] || "&" == t[0][0] ? t[0].slice(1) : t[0] : "", t.slice(e.length + 1) }, isAndroid: e, isMobile: s, click: s && "ontouchstart" in window ? "touchstart" : "click", isQQBrowserInAndroid: e && /MQQBrowser/.test(navigator.userAgent), isQQBrowserInAndroid: function () { return this.isAndroid && /MQQBrowser/.test(navigator.userAgent) }, isMin: function () { return !!(document.visibilityState && "hidden" === document.visibilityState || document.hidden) }, setStore: function (e, t) { if (void 0 !== t) try { localStorage.setItem(e, t) } catch (e) { } }, getStore: function (e) { try { return localStorage.getItem(e) } catch (e) { } }, clearStore: function (e) { try { localStorage.removeItem(e) } catch (e) { } }, clearAllStore: function () { try { localStorage.clear() } catch (e) { } }, set: function (e, t, n) { if (n && "localStorage" in window) localStorage.setItem(encodeURIComponent(e), encodeURIComponent(t)); else { var s = new Date; s.setTime(s.getTime() + 2592e6), document.cookie = encodeURIComponent(e) + "=" + encodeURIComponent(t) + ";path=/;expires=" + s.toGMTString() } }, get: function (e, t) { if (t && "localStorage" in window) { var n = localStorage.getItem(encodeURIComponent(e)); return n ? n : "" } var s = document.cookie.match("(^|;) ?" + encodeURIComponent(e) + "=([^;]*)(;|$)"); return s ? decodeURIComponent(s[2]) : "" }, getAvatarsFullPath: function (e, t) { if (!e) return null; e = e.replace(/^(https?:)?\/\/?/, ""); var n = e.indexOf("img-cn") > 0, s = e.indexOf("ossimages") > 0; return n && !s ? t + "/ossimages/" + e : "//" + e }, encode: function (e, t) { if (!e || 0 === e.length) return ""; var n = ""; return n = e.replace(/&amp;/g, "&"), n = n.replace(/<(?=[^o][^)])/g, "&lt;"), n = n.replace(/>/g, "&gt;"), n = n.replace(/\"/g, "&quot;"), n = n.replace(/\n/g, "<br>") }, decode: function (e) { if (!e || 0 === e.length) return ""; return e.replace(/&amp;/g, "&") }, convertFalse: function (e) { return "false" !== (e = void 0 === e ? "" : e) && e }, queryString: function (e, t) { var n = e.match(new RegExp("[?&]?" + t + "=[0-9a-zA-Z%@._-]*[^&]", "g")); return n = n && n[0] ? "?" == n[0][0] || "&" == n[0][0] ? n[0].slice(1) : n[0] : "", n.slice(t.length + 1) }, getConfig: function (e, t) { var n; if (e && t) { for (var s = document.scripts, i = 0, o = s.length; i < o; i++) if (s[i].src && 0 < s[i].src.indexOf(e)) { n = s[i].src; break } } else n = e ? e : location.href; var a = {}; if (!n) return { str: "", json: a, domain: "" }; var r, d = n.indexOf("?"), l = n.indexOf("//") > -1 ? n.indexOf("//") : 0, c = n.slice(l, n.indexOf("/", l + 2)), m = n.slice(d + 1).split("&"); a.src = n.slice(0, d); for (var u = 0, h = m.length; u < h; u++) r = m[u].split("="), a[r[0]] = r.length > 1 ? decodeURIComponent(r[1]) : ""; return { str: n, json: a, domain: c } }, updateAttribute: function (e, t, s) { var i = e || n + s + "/im.html?tenantId="; for (var o in t) t.hasOwnProperty(o) && void 0 !== t[o] && (i.indexOf(o + "=") < 0 ? i += "&" + o + "=" + ("" !== t[o] ? t[o] : "") : i = i.replace(new RegExp(o + "=[^&#?]*", "gim"), o + "=" + ("" !== t[o] ? t[o] : ""))); return i }, copy: function (e) { return this.extend({}, e) }, code: function () { var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; return { encode: function (t) { var n, s, i, o, a, r, d, l = "", c = 0; do { n = t.charCodeAt(c++), s = t.charCodeAt(c++), i = t.charCodeAt(c++), o = n >> 2, a = (3 & n) << 4 | s >> 4, r = (15 & s) << 2 | i >> 6, d = 63 & i, isNaN(s) ? r = d = 64 : isNaN(i) && (d = 64), l = l + e.charAt(o) + e.charAt(a) + e.charAt(r) + e.charAt(d) } while (c < t.length); return l }, byteEncode: function (t) { var n, s, i, o, a, r, d, l = "", c = 0; do { n = t[c++], s = t[c++], i = t[c++], o = n >> 2, a = (3 & n) << 4 | s >> 4, r = (15 & s) << 2 | i >> 6, d = 63 & i, isNaN(s) ? r = d = 64 : isNaN(i) && (d = 64), l = l + e.charAt(o) + e.charAt(a) + e.charAt(r) + e.charAt(d) } while (c < t.length); return l }, decode: function (t) { var n, s, i, o, a, r, d, l = "", c = 0; t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); do { o = e.indexOf(t.charAt(c++)), a = e.indexOf(t.charAt(c++)), r = e.indexOf(t.charAt(c++)), d = e.indexOf(t.charAt(c++)), n = o << 2 | a >> 4, s = (15 & a) << 4 | r >> 2, i = (3 & r) << 6 | d, l += String.fromCharCode(n), 64 != r && (l += String.fromCharCode(s)), 64 != d && (l += String.fromCharCode(i)) } while (c < t.length); return l } } }() }
}(), function () { var e = function () { }, t = function () { try { return new window.XMLHttpRequest } catch (e) { return !1 } }, n = function () { try { return new window.ActiveXObject("Microsoft.XMLHTTP") } catch (e) { return !1 } }, s = function (s) { var i = s.dataType || "text", o = s.success || e, a = s.error || e, r = t() || n(); r.onreadystatechange = function () { if (4 === r.readyState) { if (200 === (r.status || 0)) { if ("text" === i) return void o(r.responseText, r); if ("json" === i) { try { var e = JSON.parse(r.responseText); o(e, r) } catch (e) { } return } return void o(r.response || r.responseText, r) } if ("json" == i) { try { var e = Utils.parseJSON(r.responseText); a(e, r, "服务器返回错误信息") } catch (e) { a(r.responseText, r, "服务器返回错误信息") } return } return void a(r.responseText, r, "服务器返回错误信息") } 0 === r.readyState && a(r.responseText, r, "服务器异常") }; var d = s.type || "GET", l = s.data || {}, c = ""; if ("get" === d.toLowerCase()) { for (var m in l) l.hasOwnProperty(m) && (c += m + "=" + l[m] + "&"); c = c ? c.slice(0, -1) : c, s.url += (s.url.indexOf("?") > 0 ? "&" : "?") + (c ? c + "&" : c) + "_v=" + (new Date).getTime(), l = null } else l._v = (new Date).getTime(), l = JSON.stringify(l); if (r.open(d, s.url), r.setRequestHeader) { var u = s.headers || {}; u["Content-Type"] = u["Content-Type"] || "application/json"; for (var h in u) u.hasOwnProperty(h) && r.setRequestHeader(h, u[h]) } return r.send(l), r }; window.easemobim = window.easemobim || {}, window.easemobim.emajax = s }(), window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL, Date.prototype.format = function (e) { var t = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds() }; /(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))); for (var n in t) new RegExp("(" + n + ")").test(e) && (e = e.replace(RegExp.$1, 1 === RegExp.$1.length ? t[n] : ("00" + t[n]).substr(("" + t[n]).length))); return e }, window.easemobim = window.easemobim || {}, window.easemobIM = window.easemobIM || {}, easemobIM.Transfer = easemobim.Transfer = function () { "use strict"; var e = function (e, t) { if (JSON && JSON.parse) { var n = e.data; n = JSON.parse(n), "function" == typeof t && t(n) } }, t = function (e) { if (!(this instanceof t)) return new t(e); this.iframe = document.getElementById(e), this.origin = location.protocol + "//" + location.host }; return t.prototype.send = function (e) { return e.origin = this.origin, e = JSON.stringify(e), this.iframe ? this.iframe.contentWindow.postMessage(e, "*") : window.parent.postMessage(e, "*"), this }, t.prototype.listen = function (t) { var n = this; return window.addEventListener ? window.addEventListener("message", function (s) { e.call(n, s, t) }, !1) : window.attachEvent && window.attachEvent("onmessage", function (s) { e.call(n, s, t) }), this }, t }(), function () { var e = new easemobim.Transfer, t = function (t) { var n = null; return t.msg.data && t.msg.data.headers && (n = t.msg.data.headers, delete t.msg.data.headers), { url: t.url, headers: n, data: t.excludeData ? null : t.msg.data, type: t.type || "GET", success: function (n) { try { n = JSON.parse(n) } catch (e) { } e.send({ call: t.msg.api, timespan: t.msg.timespan, status: 0, data: n }) }, error: function (n) { try { n = JSON.parse(n) } catch (e) { } e.send({ call: t.msg.api, status: 1, data: n }) } } }; e.listen(function (n) { switch (e.targetOrigin = n.origin, n.api) { case "getRelevanceList": easemobim.emajax(t({ url: "/v1/webimplugin/targetChannels", msg: n })); break; case "getDutyStatus": easemobim.emajax(t({ url: "/v1/webimplugin/showMessage", msg: n })); break; case "getWechatVisitor": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/wechat/" + n.data.openid + "?tenantId=" + n.data.tenantId, msg: n, type: "POST" })); break; case "createVisitor": easemobim.emajax(t({ url: "/v1/webimplugin/visitors?tenantId=" + n.data.tenantId, msg: n, type: "POST" })); break; case "getSession": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/" + n.data.id + "/schedule-data?techChannelInfo=" + n.data.orgName + "%23" + n.data.appName + "%23" + n.data.imServiceNumber + "&tenantId=" + n.data.tenantId, msg: n, excludeData: !0 })); break; case "getExSession": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/" + n.data.id + "/schedule-data-ex?techChannelInfo=" + n.data.orgName + "%23" + n.data.appName + "%23" + n.data.imServiceNumber + "&tenantId=" + n.data.tenantId, msg: n, excludeData: !0 })); break; case "getPassword": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/password?tenantId=" + n.data.tenantId, msg: n })); break; case "getGroup": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/" + n.data.id + "/ChatGroupId?techChannelInfo=" + n.data.orgName + "%23" + n.data.appName + "%23" + n.data.imServiceNumber + "&tenantId=" + n.data.tenantId, msg: n, excludeData: !0 })); break; case "getHistory": easemobim.emajax(t({ url: "/v1/webimplugin/visitors/msgHistory", msg: n })); break; case "getSlogan": easemobim.emajax(t({ url: "/v1/webimplugin/notice/options", msg: n })); break; case "getTheme": easemobim.emajax(t({ url: "/v1/webimplugin/theme/options", msg: n })); break; case "getSystemGreeting": easemobim.emajax(t({ url: "/v1/webimplugin/welcome", msg: n })); break; case "getRobertGreeting": easemobim.emajax(t({ url: "/v1/Tenants/" + n.data.tenantId + "/robots/visitor/greetings", msg: n })); break; case "sendVisitorInfo": easemobim.emajax(t({ url: "/v1/webimplugin/tenants/" + n.data.tenantId + "/visitors/" + n.data.visitorId + "/attributes?tenantId=" + n.data.tenantId, msg: n, type: "POST" })); break; case "getProject": easemobim.emajax(t({ url: "/tenants/" + n.data.tenantId + "/projects", msg: n })); break; case "createTicket": easemobim.emajax(t({ url: "/tenants/" + n.data.tenantId + "/projects/" + n.data.projectId + "/tickets?tenantId=" + n.data.tenantId + "&easemob-target-username=" + n.data["easemob-target-username"] + "&easemob-appkey=" + n.data["easemob-appkey"] + "&easemob-username=" + n.data["easemob-username"], msg: n, type: "POST" })) } }) }(), window.easemobim = window.easemobim || {}, easemobim.LISTSPAN = 10, easemobim.PICTYPE = { jpg: !0, gif: !0, png: !0, bmp: !0 }, easemobim.FILETYPE = { zip: !0, doc: !0, docx: !0, txt: !0, gif: !0 }, easemobim.LOADING = easemobim.utils.isQQBrowserInAndroid || easemobim.utils.getIEVersion && 9 === easemobim.utils.getIEVersion ? "<img src='//kefu.easemob.com/webim/static/img/loading.gif' width='20' style='margin-top:10px;'/>" : ["<div class='easemobWidget-loading'><svg version='1.1' id='图层_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px'", " viewBox='0 0 70 70' enable-background='new 0 0 70 70' xml:space='preserve'>", "<circle opacity='0.3' fill='none' stroke='#000000' stroke-width='4' stroke-miterlimit='10' cx='35' cy='35' r='11'/>", "<path fill='none' stroke='#E5E5E5' stroke-width='4' stroke-linecap='round' stroke-miterlimit='10' d='M24,35c0-6.1,4.9-11,11-11", "c2.8,0,5.3,1,7.3,2.8'/><image src='//kefu.easemob.com/webim/static/img/loading.gif' width='20' style='margin-top:10px;' /></svg></div>"].join(""), easemobim.THEME = { "天空之城": { css: "body .theme-color{color:#42b8f4;}body .bg-color{background-color:#42b8f4}.border-color{border:1px solid #00a0e7}.hover-color{background-color:#7dcdf7}" }, "丛林物语": { css: "body .theme-color{color:#00b45f;}body .bg-color{background-color:#00b45f}.border-color{border:1px solid #009a51}.hover-color{background-color:#16cd77}" }, "红瓦洋房": { css: "body .theme-color{color:#b50e03;}body .bg-color{background-color:#b50e03}.border-color{border:1px solid #811916}.hover-color{background-color:#e92b25}" }, "鲜美橙汁": { css: "body .theme-color{color:#ffa000;}body .bg-color{background-color:#ffa000}.border-color{border:1px solid #f69000}.hover-color{background-color:#ffb63b}" }, "青草田间": { css: "body .theme-color{color:#9ec100;}body .bg-color{background-color:#9ec100}.border-color{border:1px solid #809a00}.hover-color{background-color:#bad921}" }, "湖光山色": { css: "body .theme-color{color:#00cccd;}body .bg-color{background-color:#00cccd}.border-color{border:1px solid #12b3b4}.hover-color{background-color:#38e6e7}" }, "冷峻山峰": { css: "body .theme-color{color:#5b799a;}body .bg-color{background-color:#5b799a}.border-color{border:1px solid #48627b}.hover-color{background-color:#6a8eb5}" }, "月色池塘": { css: "body .theme-color{color:#3977cf;}body .bg-color{background-color:#3977cf}.border-color{border:1px solid #2b599b}.hover-color{background-color:#548bdc}" } }, Easemob.im.EMOTIONS = { path: "/WebIM/static/img/faces/", map: { "[):]": "ee_1.png", "[:D]": "ee_2.png", "[;)]": "ee_3.png", "[:-o]": "ee_4.png", "[:p]": "ee_5.png", "[(H)]": "ee_6.png", "[:@]": "ee_7.png", "[:s]": "ee_8.png", "[:$]": "ee_9.png", "[:(]": "ee_10.png", "[:'(]": "ee_11.png", "[:|]": "ee_12.png", "[(a)]": "ee_13.png", "[8o|]": "ee_14.png", "[8-|]": "ee_15.png", "[+o(]": "ee_16.png", "[<o)]": "ee_17.png", "[|-)]": "ee_18.png", "[*-)]": "ee_19.png", "[:-#]": "ee_20.png", "[:-*]": "ee_21.png", "[^o)]": "ee_22.png", "[8-)]": "ee_23.png", "[(|)]": "ee_24.png", "[(u)]": "ee_25.png", "[(S)]": "ee_26.png", "[(*)]": "ee_27.png", "[(#)]": "ee_28.png", "[(R)]": "ee_29.png", "[({)]": "ee_30.png", "[(})]": "ee_31.png", "[(k)]": "ee_32.png", "[(F)]": "ee_33.png", "[(W)]": "ee_34.png", "[(D)]": "ee_35.png" } }, easemobim.EVENTS = { NOTIFY: { event: "notify" }, RECOVERY: { event: "recoveryTitle" }, SHOW: { event: "showChat" }, CLOSE: { event: "closeChat" }, CACHEUSER: { event: "setUser" }, DRAGREADY: { event: "dragReady" }, DRAGEND: { event: "dragEnd" }, SLIDE: { event: "titleSlide" }, ONMESSAGE: { event: "onMessage" }, ONSESSIONCLOSED: { event: "onSessionClosed" }, EXT: { event: "ext" }, TEXTMSG: { event: "textmsg" }, ONREADY: { event: "onready" } }, easemobim.autogrow = function () { return function (e) { var t = easemobim.utils, n = e.dom, s = n.getBoundingClientRect().height, i = (n.style.lineHeight, document.createElement("div")); i.style.cssText = ["position:absolute;", "top:-10000px;", "left:-10000px;", "width:" + (n.getBoundingClientRect().width - 45) + "px;", "font-size:" + (n.style.fontSize || 17) + "px;", "line-height:" + (n.style.lineHeight || 17) + "px;", "resize:none;", "word-wrap:break-word;"].join(""), document.body.appendChild(i); var o = function () { var n = function (e, t) { for (var n = 0, s = ""; n < t; n++) s += e; return s }, o = this.value.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/&/g, "&amp;").replace(/\n$/, "<br/>&nbsp;").replace(/\n/g, "<br/>").replace(/ {2,}/g, function (e) { return n("&nbsp;", e.length - 1) + " " }); t.html(i, o), o && (this.style.height = Math.max(i.getBoundingClientRect().height + 17, s) + "px"), "function" == typeof e.callback && e.callback() }; t.on(n, "change", o), t.on(n, "keyup", o), t.on(n, "keydown", o), e.update = function () { o.apply(n) }, o.apply(n) } }(), Easemob.im.EmMessage.txt = function (e) { this.id = e, this.type = "txt", this.brief = "", this.body = {} }, Easemob.im.EmMessage.txt.prototype.get = function (e) { return this.value ? startWith(this.value, "WHAPP:") ? ShowWHAppMsg(this.id, this.value) : [e ? "<div class='easemobWidget-left'>" : "<div id='" + this.id + "' class='easemobWidget-right'>", e ? "<div class='WebimKeFuHeadPhoto'><img src='" + kefuHeadPhoto + "' alt='KeFuHeadPhoto' /></div>" : "<div class='WebimUserHeadPhoto'><img src='" + userHeadPhoto + "' alt='UserHeadPhoto' /></div>", "<div class='easemobWidget-msg-wrapper'>", "<i class='easemobWidget-corner'></i>", this.id ? "<div id='" + this.id + "_failed' class='easemobWidget-msg-status em-hide'><span>发送失败</span><i></i></div>" : "", this.id ? "<div id='" + this.id + "_loading' class='easemobWidget-msg-loading'>" + easemobim.LOADING + "</div>" : "", "<div class='easemobWidget-msg-container'>", "<pre>" + Easemob.im.Utils.parseLink(this.emotion ? this.value : Easemob.im.Utils.parseEmotions(easemobim.utils.encode(this.value))) + "</pre>", "</div>", "</div>", "</div>"].join("") : "" }, Easemob.im.EmMessage.txt.prototype.set = function (e) { this.value = e.value, this.emotion = e.emotion, this.value && (this.brief = (e.brief || this.value).replace(/\n/gm, ""), this.brief = this.brief.length > 15 ? this.brief.slice(0, 15) + "..." : this.brief), this.body = { id: this.id, to: e.to, msg: this.value, type: this.type, ext: e.ext || {}, success: e.success, fail: e.fail } }, Easemob.im.EmMessage.cmd = function (e) { this.id = e, this.type = "cmd", this.body = {} }, Easemob.im.EmMessage.cmd.prototype.set = function (e) { this.value = "", this.body = { to: e.to, action: e.action, msg: this.value, type: this.type, ext: e.ext || {} } }, Easemob.im.EmMessage.img = function (e) { this.id = e, this.type = "img", this.brief = "图片", this.body = {} }, Easemob.im.EmMessage.img.prototype.get = function (e) { return [e ? "<div class='easemobWidget-left'>" : "<div id='" + this.id + "' class='easemobWidget-right'>", e ? "<div class='WebimKeFuHeadPhoto'><img src='" + kefuHeadPhoto + "' alt='KeFuHeadPhoto' /></div>" : "<div class='WebimUserHeadPhoto'><img src='" + userHeadPhoto + "' alt='UserHeadPhoto' /></div>", "<div class='easemobWidget-msg-wrapper'>", "<i class='easemobWidget-corner'></i>", this.id ? "<div id='" + this.id + "_failed' class='easemobWidget-msg-status em-hide'><span>发送失败</span><i></i></div>" : "", this.id ? "<div id='" + this.id + "_loading' class='easemobWidget-msg-loading'>" + easemobim.LOADING + "</div>" : "", "<div class='easemobWidget-msg-container'>", null === this.value ? "<a class='easemobWidget-noline' href='javascript:;'><i class='easemobWidget-unimage'>I</i></a>" : "<a class='easemobWidget-noline' href='javascript:;'><img class='easemobWidget-imgview' src='" + this.value.url + "'/></a>", , "</div>", "</div>", "</div>"].join("") }, Easemob.im.EmMessage.img.prototype.set = function (e) { this.value = e.file, this.body = { id: this.id, file: this.value, apiUrl: e.apiUrl, to: e.to, type: this.type, onFileUploadError: e.uploadError, onFileUploadComplete: e.uploadComplete, success: e.success, fail: e.fail, flashUpload: e.flashUpload } }, Easemob.im.EmMessage.list = function (e) { this.id = e, this.type = "list", this.brief = "", this.body = {} }, Easemob.im.EmMessage.list.prototype.get = function (e) { return this.value ? ["<div class='easemobWidget-left'>", "<div class='easemobWidget-msg-wrapper'>", "<i class='easemobWidget-corner'></i>", "<div class='easemobWidget-msg-container'>", "<p>" + Easemob.im.Utils.parseLink(Easemob.im.Utils.parseEmotions(easemobim.utils.encode(this.value))) + "</p>", "</div>", "<div id='" + this.id + "_failed' class='easemobWidget-msg-status em-hide'><span>发送失败</span><i></i></div>", "</div>", this.listDom, "</div>"].join("") : "" }, Easemob.im.EmMessage.list.prototype.set = function (e) { this.value = e.value, this.value && (this.brief = this.value.replace(/\n/gm, ""), this.brief = this.brief.length > 15 ? this.brief.slice(0, 15) + "..." : this.brief), this.listDom = e.list }, Easemob.im.EmMessage.file = function (e) { this.id = e, this.type = "file", this.brief = "文件", this.body = {} }, Easemob.im.EmMessage.file.prototype.get = function (e) { return [e ? "<div class='easemobWidget-left'>" : "<div id='" + this.id + "' class='easemobWidget-right'>", "<div class='easemobWidget-msg-wrapper easemobWidget-msg-file'>", "<i class='easemobWidget-corner'></i>", this.id ? "<div id='" + this.id + "_failed' class='easemobWidget-msg-status em-hide'><span>发送失败</span><i></i></div>" : "", this.id ? "<div id='" + this.id + "_loading' class='easemobWidget-msg-loading'>" + config.LOADING + "</div>" : "", "<div class='easemobWidget-msg-container'>", null === this.value ? "<a class='easemobWidget-noline' href='javascript:;'><i class='easemobWidget-unimage'>I</i></a>" : "<a target='_blank' href='" + this.value.url + "' class='easemobWidget-fileMsg' title='" + this.filename + "'><img class='easemobWidget-msg-fileicon' src='static/img/file_download.png'/><span>" + (this.filename.length > 19 ? this.filename.slice(0, 19) + "..." : this.filename) + "</span></a>", "</div>", "</div>", "</div>"].join("") }, Easemob.im.EmMessage.file.prototype.set = function (e) { this.value = e.file, this.filename = e.filename || this.value.filename || "文件", this.body = { id: this.id, file: this.value, filename: this.filename, apiUrl: e.apiUrl, to: e.to, type: this.type, onFileUploadError: e.uploadError, onFileUploadComplete: e.uploadComplete, success: e.success, fail: e.fail, flashUpload: e.flashUpload } }, easemobim.paste = function (e) { var t, n = document.createElement("div"), s = easemobim.utils; s.addClass(n, "easemobWidget-dialog easemobWidget-paste-wrapper em-hide"), s.html(n, "\t\t<div class='easemobWidget-paste-image'></div>\t\t<div>\t\t\t<button class='easemobWidget-cancel'>取消</button>\t\t\t<button class='bg-color'>发送</button>\t\t</div>\t"), easemobim.imChat.appendChild(n); var i = n.getElementsByTagName("button"), o = i[0], a = i[1], r = n.getElementsByTagName("div")[0]; return s.on(o, "click", function () { easemobim.paste.hide() }), s.on(a, "click", function () { e.sendImgMsg({ data: t, url: n.getElementsByTagName("img")[0].getAttribute("src") }), easemobim.paste.hide() }), { show: function (e) { var i = new Image; i.src = "string" == typeof e ? e : window.URL.createObjectURL(e), t = e, r.appendChild(i), s.removeClass(n, "em-hide"), i = null }, hide: function () { s.html(r, ""), s.addClass(n, "em-hide") }, bind: function () { var e = this; return s.on(easemobim.textarea, "paste", function (t) { var n = t || window.event; try { if (n.clipboardData && n.clipboardData.types) n.clipboardData.items.length > 0 && /^image\/\w+$/.test(n.clipboardData.items[0].type) && e.show(n.clipboardData.items[0].getAsFile()); else if (window.clipboardData) { var s = window.clipboardData.getData("URL"); e.show(s) } } catch (e) { } }), this } }.bind() }, function () { easemobim.leaveMessage = function (e, t) { var n = this.leaveMessage, s = this.utils, i = easemobim.imChat; if (n.dom) return !1; n.domBg = document.createElement("div"), n.dom = document.createElement("div"), n.domBg.id = "easemobWidgetOffline", s.addClass(n.domBg, "easemobWidget-offline-bg em-hide"), s.addClass(n.dom, "easemobWidget-offline"), s.html(n.dom, "\t\t\t<h3>请填写以下内容以方便我们及时联系您</h3>\t\t\t<input type='text' placeholder='姓名'/>\t\t\t<input type='text' placeholder='电话'/>\t\t\t<input type='text' placeholder='邮箱'/>\t\t\t<textarea spellcheck='false' placeholder='请输入留言'></textarea>\t\t\t<button class='easemobWidget-offline-cancel'>取消</button>\t\t\t<button class='easemobWidget-offline-ok bg-color'>留言</button>\t\t\t<div class='easemobWidget-success-prompt em-hide'><i>A</i><p>留言发送成功</p></div>\t\t"), n.domBg.appendChild(n.dom), i.appendChild(n.domBg); var o = n.dom.getElementsByTagName("textarea")[0], a = n.dom.getElementsByTagName("input")[0], r = n.dom.getElementsByTagName("input")[1], d = n.dom.getElementsByTagName("input")[2], l = n.dom.getElementsByTagName("button")[1], c = n.dom.getElementsByTagName("button")[0], m = n.dom.getElementsByTagName("div")[0]; s.on(c, s.click, function () { s.addClass(n.domBg, "em-hide") }), s.on(l, s.click, function () { if (f) return e.errorPrompt("留言提交中..."), !1; u && h ? !a.value || a.value.length > 140 ? e.errorPrompt("姓名输入不正确") : !r.value || r.value.length > 24 ? e.errorPrompt("电话输入不正确") : !d.value || d.value.length > 127 ? e.errorPrompt("邮箱输入不正确") : !o.value || o.value.length > 2e3 ? e.errorPrompt("留言内容不能为空，长度小于2000字") : (f = !0, setTimeout(function () { f = !1 }, 1e4), easemobim.api("createTicket", { tenantId: t, "easemob-target-username": h, "easemob-appkey": g, "easemob-username": b, headers: { Authorization: "Easemob IM " + p }, projectId: u, subject: "", content: o.value, status_id: "", priority_id: "", category_id: "", creator: { name: a.value, avatar: "", email: d.value, phone: r.value, qq: "", company: "", description: "" }, attachments: null }, function (t) { f = !1, t && t.data && t.data.id ? (s.removeClass(m, "em-hide"), setTimeout(function () { s.addClass(m, "em-hide") }, 1500), a.value = "", r.value = "", d.value = "", o.value = "") : e.errorPrompt("留言失败，请稍后重试") })) : e.errorPrompt("留言失败，token无效") }); var u = null, h = null, p = null, g = null, f = !1, b = null; return { auth: function (e, n) { p = e, h = n.toUser, b = n.user.username, g = n.appKey.replace("#", "%23"), u || easemobim.api("getProject", { tenantId: t, "easemob-target-username": h, "easemob-appkey": g, "easemob-username": b, headers: { Authorization: "Easemob IM " + p } }, function (e) { e.data && e.data.entities && e.data.entities.length > 0 && (u = e.data.entities[0].id) }) }, show: function (e) { e && s.addClass(c, "em-hide"), s.removeClass(n.domBg, "em-hide") } } } }(), easemobim.satisfaction = function (e) { var t = document.createElement("div"), n = easemobim.utils; n.addClass(t, "easemobWidget-dialog easemobWidget-satisfaction-dialog em-hide"), n.html(t, "\t\t<h3>请对我的服务做出评价</h3>\t\t<ul><li idx='1'>H</li><li idx='2'>H</li><li idx='3'>H</li><li idx='4'>H</li><li idx='5'>H</li></ul>\t\t<textarea spellcheck='false' placeholder='请输入留言'></textarea>\t\t<div>\t\t\t<button class='easemobWidget-cancel'>取消</button>\t\t\t<button class='bg-color'>提交</button>\t\t</div>\t\t<div class='easemobWidget-success-prompt em-hide'><i>A</i><p>提交成功</p></div>\t"), easemobim.imChat.appendChild(t); var s, i, o = n.$Dom("EasemobKefuWebimSatisfy"), a = t.getElementsByTagName("ul")[0], r = a.getElementsByTagName("li"), d = t.getElementsByTagName("textarea")[0], l = t.getElementsByTagName("button"), c = l[0], m = l[1], u = t.getElementsByTagName("div")[1], h = function () { for (var e = 0, t = r.length; t > 0; t--) n.hasClass(r[t - 1], "sel") && (e += 1); return e }, p = function () { for (var e = r.length; e > 0; e--) n.removeClass(r[e - 1], "sel") }; o && n.on(o, n.click, function () { s = null, i = null, n.removeClass(t, "em-hide"), clearInterval(e.focusText) }), n.live("button.js_satisfybtn", "click", function () { s = this.getAttribute("data-servicesessionid"), i = this.getAttribute("data-inviteid"), n.removeClass(t, "em-hide"), clearInterval(e.focusText) }), n.on(c, "click", function () { n.addClass(t, "em-hide") }), n.on(m, "click", function () { var o = h(); if (0 === o) return e.errorPrompt("请先选择星级"), !1; e.sendSatisfaction(o, d.value, s, i), d.blur(), n.removeClass(u, "em-hide"), setTimeout(function () { d.value = "", p(), n.addClass(u, "em-hide"), n.addClass(t, "em-hide") }, 1500) }), n.on(a, "click", function (e) { var t = e || window.event, s = t.target || t.srcElement, i = s.getAttribute("idx"); if (!i) return !1; for (var o = 0; o < r.length; o++) o < Number(i) ? n.addClass(r[o], "sel") : n.removeClass(r[o], "sel") }) }, easemobim.imgView = function () { var e = document.createElement("div"), t = easemobim.utils, n = document.createElement("img"); n.style.cssText = "\tposition: absolute;    top: 0;    left: 0;    right: 0;    bottom: 0;    margin: auto;", e.appendChild(n), e.style.cssText = "\tdisplay: none;\tz-index: 100000;    position: fixed;    width: 100%;    height: 100%;    left: 0;    top: 0;    background: rgba(0,0,0,.3);", document.body.appendChild(e); var s = function () { e.style.display = "none", e.style.overflow = "hidden" }; return n.onload = function () { this.width > .9 * easemobim.utils.window.width || this.height > .9 * easemobim.utils.window.height || s() }, t.on(e, "click", s, !1), { show: function (t) { n.setAttribute("src", t), e.style.display = "block", e.style.overflow = "auto" } } }(), easemobim.uploadShim = function (e, t) { var n = this, s = easemobim.utils; n.flashUpload = function (e, t) { n.swfupload.setUploadURL(e), n.swfupload.startUpload(), n.swfupload.uploadOptions = t }, n.uploadShim = function (i) { if (Easemob.im.Utils.isCanUploadFile) { var o = (document.title, s.$Dom(i)); if (!("undefined" == typeof SWFUpload || o.length < 1)) return new SWFUpload({ file_post_name: "file", flash_url: s.protocol + e.staticPath + "/js/swfupload/swfupload.swf", button_placeholder_id: i, button_width: 120, button_height: 30, button_cursor: SWFUpload.CURSOR.HAND, button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT, file_size_limit: 10485760, file_upload_limit: 0, file_queued_error_handler: function () { }, file_dialog_start_handler: function () { }, file_dialog_complete_handler: function () { }, file_queued_handler: function (e) { this.getStats().files_queued > 1 && this.cancelUpload(), 10485760 < e.size ? (t.errorPrompt("请上传大小不超过10M的文件"), this.cancelUpload()) : easemobim.PICTYPE[e.type.slice(1).toLowerCase()] ? t.sendImgMsg({ name: e.name, data: e }) : easemobim.FILETYPE[e.type.slice(1).toLowerCase()] ? t.sendFileMsg({ name: e.name, data: e }) : (t.errorPrompt("不支持此类型" + e.type), this.cancelUpload()) }, upload_error_handler: function (t, s, i) { if (s != SWFUpload.UPLOAD_ERROR.FILE_CANCELLED && s != SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED && s != SWFUpload.UPLOAD_ERROR.FILE_VALIDATION_FAILED) { var i = new Easemob.im.EmMessage("img", this.fileMsgId); i.set({ file: null }), n.appendMsg(e.user.username, e.toUser, i), n.appendDate((new Date).getTime(), e.toUser) } }, upload_success_handler: function (n, s) { if (n && s) try { var i = Easemob.im.Utils.parseUploadResponse(s); i = JSON.parse(i), n && !n.url && i.entities && i.entities.length > 0 && (n.url = i.uri + "/" + i.entities[0].uuid); var o = new Easemob.im.EmMessage("img"); o.set({ file: n }), t.appendDate((new Date).getTime(), e.toUser), t.appendMsg(e.user.username, e.toUser, o), t.scrollBottom(1e3), this.uploadOptions.onFileUploadComplete(i) } catch (e) { t.errorPrompt("上传图片发生错误") } } }) } }, !Easemob.im.Utils.isCanUploadFileAsync && Easemob.im.Utils.isCanUploadFile && (n.swfupload = n.uploadShim("easemobWidgetFileInput")) }, function () { var e = /MicroMessenger/.test(navigator.userAgent), t = easemobim.utils.query("wechatAuth"), n = easemobim.utils.query("appid"), s = easemobim.utils.query("code"), i = easemobim.utils.query("tenantId"); if (!(e && t && i && n)) return !1; easemobim.wechat = function (e) { s ? function (e, t) { easemobim.emajax({ url: "/v1/weixin/sns/userinfo/" + n + "/" + e, data: { tenantId: i }, type: "GET", success: function (e) { t(e) }, error: function (e) { var t = location.href.replace(/&code=[^&]+/, ""); t.indexOf("appid") !== t.lastIndexOf("appid") && (t = t.replace(/&appid=wx[^&]+/, "")), location.href = t } }) }(s, function (t) { if (!t) return void e(); e(t) }) : function (e) { easemobim.emajax({ url: "/v1/weixin/admin/appid", success: function (t) { e(t) }, error: function (t) { e() } }) }(function (t) { if (!t) return void e(); var s = encodeURIComponent(location.href), i = "https://open.weixin.qq.com/connect/oauth2/authorize?appid=" + n + "&redirect_uri=" + s + "&response_type=code&scope=snsapi_userinfo&state=STATE&component_appid=" + t + "#wechat_redirect"; location.href = i }) } }(), function () { var e = function () { this.list = {} }; e.prototype.set = function (e, t) { return void 0 === this.list[e] && (this.list[e] = t), this }, e.prototype.get = function (e) { return this.list.hasOwnProperty(e) ? this.list[e] : null }, easemobim.site = e }(), function () {
    easemobim.chat = function (e) {
        var t = easemobim.utils, n = new easemobim.site; return easemobim.im = t.$Dom("EasemobKefuWebim"), easemobim.imBtn = t.$Dom("easemobWidgetPopBar"), easemobim.imChat = t.$Dom("EasemobKefuWebimChat"), easemobim.imChatBody = t.$Dom("easemobWidgetBody"), easemobim.send = t.$Dom("easemobWidgetSend"),
        easemobim.textarea = easemobim.send.getElementsByTagName("textarea")[0], easemobim.sendBtn = t.$Dom("easemobWidgetSendBtn"), easemobim.faceBtn = easemobim.send.getElementsByTagName("i")[0], easemobim.realFile = t.$Dom("easemobWidgetFileInput"), easemobim.sendFileBtn = t.$Dom("easemobWidgetFile"), easemobim.noteBtn = t.$Dom("easemobWidgetNote"), easemobim.mobileNoteBtn = t.$Dom("easemobWidgetNotem"), easemobim.dragHeader = t.$Dom("easemobWidgetDrag"), easemobim.dragBar = easemobim.dragHeader.getElementsByTagName("p")[0], easemobim.chatFaceWrapper = t.$Dom("EasemobKefuWebimFaceWrapper"), easemobim.messageCount = easemobim.imBtn.getElementsByTagName("span")[0], easemobim.swfupload = null, { init: function () { this.setConnection(), this.scbT = 0, this.msgCount = 0, this.msgTimeSpan = {}, this.opened = !0, this.setTheme(), this.setMinmum(), this.soundReminder(), this.mobile(), this.setRoot(), this.bindEvents() }, handleReady: function () { var n = this; if (n.readyHandled) return !1; if (n.readyHandled = !0, easemobim.leaveMessage && easemobim.leaveMessage.auth(n.token, e), t.root) { var s = e.visitor; if (!s) { s = t.getStore(e.tenantId + e.emgroup + "visitor"); try { e.visitor = Easemob.im.Utils.parseJSON(s) } catch (e) { } t.clearStore(e.tenantId + e.emgroup + "visitor") } var i = t.getStore(e.tenantId + e.emgroup + "ext"); try { i && n.sendTextMsg("", !1, { ext: Easemob.im.Utils.parseJSON(i) }) } catch (e) { } t.clearStore(e.tenantId + e.emgroup + "ext") } else transfer.send(easemobim.EVENTS.ONREADY) }, setExt: function (n) { n.body.ext = n.body.ext || {}, n.body.ext.weichat = n.body.ext.weichat || {}, e.emgroup && (n.body.ext.weichat.queueName = decodeURIComponent(e.emgroup)); var s = e.visitor; s && (n.body.ext.weichat.visitor = s), e.agentName && (n.body.ext.weichat.agentUsername = e.agentName); var i = t.getStore(e.tenantId + "gr_user_id"); i && (n.body.ext.weichat.visitor = n.body.ext.weichat.visitor || {}, n.body.ext.weichat.visitor.gr_user_id = i, t.clearStore(e.tenantId + "gr_user_id")), e.originType && (n.body.ext.weichat.originType = e.originType) }, setRoot: function () { if (!t.root) return !1; e.dragenable = !1, this.fillFace() }, mobile: function () { if (!t.isMobile) return !1; if (e.dragenable = !1, e.ticket && t.removeClass(easemobim.mobileNoteBtn, "em-hide"), !e.hideKeyboard) { var n = document.createElement("i"); t.addClass(n, "easemobWidgetHeader-keyboard easemobWidgetHeader-keyboard-down"), easemobim.dragHeader.appendChild(n) } }, ready: function () { this.setNotice(), this.sdkInit(), this.open(), this.handleGroup(), this.getSession(), this.setLogo(), this.initAutoGrow(), this.chatWrapper.getAttribute("data-getted") || e.newuser || this.getHistory(), sentWelcomeMsg(this) }, initAutoGrow: function () { var e = this; e.autoGrowOptions || (e.autoGrowOptions = {}, e.autoGrowOptions.callback = function () { var t = easemobim.send.getBoundingClientRect().height; "up" === e.direction ? easemobim.chatFaceWrapper.style.top = 43 + easemobim.send.getBoundingClientRect().height + "px" : (easemobim.imChatBody.style.bottom = t + "px", easemobim.chatFaceWrapper.style.bottom = easemobim.send.getBoundingClientRect().height + "px") }, e.autoGrowOptions.dom = easemobim.textarea, setTimeout(function () { t.isMobile && easemobim.autogrow(e.autoGrowOptions) }, 1e3)) }, setConnection: function () { this.conn = new Easemob.im.Connection({ url: e.xmppServer, retry: !0, multiResources: e.resources, heartBeatWait: 3e4 }) }, handleChatWrapperByHistory: function (e, t) { e.length === easemobim.LISTSPAN ? (t.setAttribute("data-start", Number(e[easemobim.LISTSPAN - 1].chatGroupSeqId) - 1), t.setAttribute("data-history", 0)) : t.setAttribute("data-history", 1) }, getHistory: function (t) { if (!e.offDuty && !e.newuser) { var n = this, s = n.chatWrapper, i = s.getAttribute("data-groupid"); i ? Number(s.getAttribute("data-history")) || easemobim.api("getHistory", { fromSeqId: s.getAttribute("data-start") || 0, size: easemobim.LISTSPAN, chatGroupId: i, tenantId: e.tenantId }, function (e) { n.handleChatWrapperByHistory(e.data, s), e.data && e.data.length > 0 && (n.handleHistory(e.data), t || n.scrollBottom()) }) : Number(s.getAttribute("data-history")) || easemobim.api("getGroup", { id: e.user.username, orgName: e.orgName, appName: e.appName, imServiceNumber: e.toUser, tenantId: e.tenantId }, function (i) { i && i.data && (s.setAttribute("data-groupid", i.data), easemobim.api("getHistory", { fromSeqId: s.getAttribute("data-start") || 0, size: easemobim.LISTSPAN, chatGroupId: i.data, tenantId: e.tenantId }, function (e) { n.handleChatWrapperByHistory(e.data, s), e && e.data && e.data.length > 0 && (n.handleHistory(e.data), t || n.scrollBottom()) })) }), s.setAttribute("data-getted", 1) } }, getGreeting: function () { }, getSession: function () { if (!e.offDuty) { var t = this; t.session && t.sessionSent || (t.sessionSent = !0, t.agent = t.agent || {}, easemobim.api("getExSession", { id: e.user.username, orgName: e.orgName, appName: e.appName, imServiceNumber: e.toUser, tenantId: e.tenantId }, function (n) { if (n && n.data) { var s = e.referrer ? decodeURIComponent(e.referrer) : document.referrer; t.onlineHumanAgentCount = n.data.onlineHumanAgentCount, t.onlineRobotAgentCount = n.data.onlineRobotAgentCount, t.agentCount = t.onlineHumanAgentCount / 1 + t.onlineRobotAgentCount / 1 } else t.session = null, t.getGreeting(); n.data.serviceSession ? (t.session = n.data.serviceSession, n.data.serviceSession.visitorUser && n.data.serviceSession.visitorUser.userId && easemobim.api("sendVisitorInfo", { tenantId: e.tenantId, visitorId: n.data.serviceSession.visitorUser.userId, referer: s })) : t.getGreeting() })) } }, handleGroup: function () { this.handleChatContainer(e.toUser), this.chatWrapper = t.$Dom(e.toUser) }, handleChatContainer: function (n) { var s = t.$Dom(n); this.setAgentProfile({ userNickname: e.defaultAgentName, avatar: e.tenantAvatar }), s ? (t.removeClass(s, "em-hide"), t.addClass(t.siblings(s, "easemobWidget-chat"), "em-hide"), t.removeClass(t.$Dom(e.toUser + "-transfer"), "em-hide")) : (s = document.createElement("div"), s.id = n, t.addClass(s, "easemobWidget-chat"), t.insertBefore(easemobim.imChatBody, s, easemobim.imChatBody.childNodes[this.hasLogo ? 1 : 0]), s = document.createElement("div"), s.id = e.toUser + "-transfer", t.addClass(s, "easemobWidget-status-prompt"), easemobim.imChat.appendChild(s), s = null, this.handleChatContainer(n)) }, handleHistory: function (s) { var i = this; s.length > 0 && t.each(s, function (t, s) { var o, a = s.body, r = a.from === e.user.username; if (a && a.bodies.length > 0) { if (o = a.bodies[0], a.from === e.user.username) switch (o.type) { case "img": o.url = /^http/.test(o.url) ? o.url : e.base + o.url, o.to = a.to, i.sendImgMsg(o, !0); break; case "file": o.url = /^http/.test(o.url) ? o.url : e.base + o.url, o.to = a.to, i.sendFileMsg(o, !0); break; case "txt": i.sendTextMsg(o.msg, a.to) } else a.ext && a.ext.weichat && a.ext.weichat.ctrlType && "inviteEnquiry" == a.ext.weichat.ctrlType || a.ext && a.ext.msgtype && a.ext.msgtype.choice || a.ext && a.ext.weichat && "TransferToKfHint" === a.ext.weichat.ctrlType ? i.receiveMsg(a, "", !0) : i.receiveMsg({ msgId: s.msgId, data: o.msg, url: /^http/.test(o.url) ? o.url : e.base + o.url, from: a.from, to: a.to }, o.type, !0); "cmd" === o.type || "txt" === o.type && !o.msg || n.get(s.msgId) || i.appendDate(s.timestamp || a.timestamp, r ? a.to : a.from, !0) } }) }, getMsgid: function (e) { return e ? e.ext && e.ext.weichat ? e.ext.weichat.msgId : e.msgId : null }, setKeyboard: function (e) { var t = this; switch (t.direction = e, e) { case "up": easemobim.send.style.bottom = "auto", easemobim.send.style.zIndex = "3", easemobim.send.style.top = "43px", easemobim.imChatBody.style.bottom = "0", easemobim.chatFaceWrapper.style.bottom = "auto", easemobim.chatFaceWrapper.style.top = 43 + easemobim.send.getBoundingClientRect().height + "px"; break; case "down": easemobim.send.style.bottom = "0", easemobim.send.style.zIndex = "3", easemobim.send.style.top = "auto", easemobim.imChatBody.style.bottom = easemobim.send.getBoundingClientRect().height + "px", easemobim.chatFaceWrapper.style.bottom = easemobim.send.getBoundingClientRect().height + "px", easemobim.chatFaceWrapper.style.top = "auto", t.scrollBottom(50) } }, setAgentProfile: function (n) { var s = t.$Class("span.easemobWidgetHeader-nickname")[0], i = t.$Class("img.easemobWidgetHeader-portrait")[0]; if (t.html(s, n && n.userNickname ? n.userNickname : n && n.agentUserNiceName || e.defaultAgentName), this.currentAvatar = n && n.avatar ? t.getAvatarsFullPath(n.avatar, e.domain) : e.tenantAvatar || e.defaultAvatar, i.getAttribute("src") !== this.currentAvatar) { var o = this.currentAvatar; i.onload = function () { i.style.opacity = "1" }, i.style.opacity = "0", i.setAttribute("src", o) } }, setMinmum: function () { if (e.minimum && !t.root) { var n = this, s = document.createElement("a"); s.setAttribute("href", "javascript:;"), s.setAttribute("title", "关闭"), t.addClass(s, "easemobWidgetHeader-min bg-color border-color"), easemobim.dragHeader.appendChild(s), t.on(s, "mousedown touchstart", function () { return n.close(), !1 }), t.on(s, "mouseenter", function () { t.addClass(this, "hover-color") }), t.on(s, "mouseleave", function () { t.removeClass(this, "hover-color") }), s = null } }, setTheme: function () { easemobim.api("getTheme", { tenantId: e.tenantId }, function (n) { e.theme = n.data && n.data.length && n.data[0].optionValue ? n.data[0].optionValue : "天空之城", easemobim.THEME[e.theme] || (e.theme = "天空之城"); var s = document.createElement("style"); s.setAttribute("type", "text/css"), t.html(s, easemobim.THEME[e.theme].css), (document.head || document.getElementsByTagName("head")[0]).appendChild(s) }) }, setLogo: function () { !t.$Class("div.easemobWidget-tenant-logo").length && e.logo && (t.html(this.chatWrapper, '<div class="easemobWidget-tenant-logo"><img src="' + e.logo + '"></div>' + t.html(this.chatWrapper)), this.hasLogo = !0) }, setNotice: function () { var n = this; n.slogan || e.offDuty || easemobim.api("getSlogan", { tenantId: e.tenantId }, function (e) { if (e.data && e.data.length > 0 && e.data[0].optionValue) { easemobim.imChatBody.style.top = "90px", n.slogan = document.createElement("div"), t.addClass(n.slogan, "easemobWidget-word"); var s = Easemob.im.Utils.parseLink(e.data[0].optionValue); t.html(n.slogan, "<span>" + s + "</span><a class='easemobWidget-word-close' href='javascript:;'></a>"), easemobim.imChat.appendChild(n.slogan), t.on(t.$Class("a.easemobWidget-word-close"), t.click, function () { t.addClass(n.slogan, "em-hide"), easemobim.imChatBody.style.top = "43px" }) } }) }, fillFace: function () { if (!t.html(easemobim.chatFaceWrapper.getElementsByTagName("ul")[0])) { var e = "", n = 0, s = this; t.on(easemobim.faceBtn, "mouseenter", function () { t.isMobile || t.addClass(this, "theme-color") }), t.on(easemobim.faceBtn, "mouseleave", function () { t.isMobile || t.removeClass(this, "theme-color") }), t.on(easemobim.faceBtn, t.click, function () { if (easemobim.textarea.blur(), t.hasClass(easemobim.chatFaceWrapper, "em-hide") ? t.removeClass(easemobim.chatFaceWrapper, "em-hide") : t.addClass(easemobim.chatFaceWrapper, "em-hide"), e) return !1; e = '<li class="e-face">', t.each(Easemob.im.EMOTIONS.map, function (t, s) { n += 1, e += ["<div class='easemobWidget-face-bg e-face'>", "<img class='easemobWidget-face-img e-face em-emotion' ", "src='" + Easemob.im.EMOTIONS.path + s + "' ", "data-value=" + t + " />", "</div>"].join(""), n % 7 == 0 && (e += '</li><li class="e-face">') }), n % 7 == 0 ? e = e.slice(0, -'<li class="e-face">'.length) : e += "</li>", t.html(easemobim.chatFaceWrapper.getElementsByTagName("ul")[0], e) }), t.live("img.em-emotion", t.click, function (e) { !t.isMobile && easemobim.textarea.focus(), easemobim.textarea.value = easemobim.textarea.value + this.getAttribute("data-value"), t.isMobile && (s.autoGrowOptions.update(), setTimeout(function () { easemobim.textarea.scrollTop = 1e4 }, 100)), s.readyHandled && t.removeClass(easemobim.sendBtn, "disabled") }, easemobim.chatFaceWrapper) } }, errorPrompt: function (e, n) { var s = this; s.ePrompt || (s.ePrompt = document.createElement("p"), s.ePrompt.className = "easemobWidget-error-prompt em-hide", t.html(s.ePrompt, "<span></span>"), easemobim.imChat.appendChild(s.ePrompt), s.ePromptContent = s.ePrompt.getElementsByTagName("span")[0]), t.html(s.ePromptContent, e), t.removeClass(s.ePrompt, "em-hide"), n || setTimeout(function () { t.html(s.ePromptContent, ""), t.addClass(s.ePrompt, "em-hide") }, 2e3) }, setOffline: function (e) { easemobim.leaveMessage && (this.slogan && t.addClass(this.slogan, "em-hide"), t.removeClass(easemobim.leaveMessage.dom, "em-hide"), t.addClass(easemobim.imChatBody, "em-hide"), t.addClass(easemobim.send, "em-hide"), easemobim.leaveMessage.show(e)) }, close: function (n) { this.opened = !1, e.hide || (t.addClass(easemobim.imChat, "em-hide"), setTimeout(function () { t.removeClass(easemobim.imBtn, "em-hide") }, 60)), easemobim.EVENTS.CLOSE.data = { trigger: !0 }, t.root || transfer.send(easemobim.EVENTS.CLOSE) }, show: function (e) { var n = this; e || (easemobim.EVENTS.SHOW.data = { trigger: !0 }, t.root || transfer.send(easemobim.EVENTS.SHOW)), n.opened = !0, n.fillFace(), n.scrollBottom(50), t.addClass(easemobim.imBtn, "em-hide"), t.removeClass(easemobim.imChat, "em-hide"); try { easemobim.textarea.focus() } catch (e) { } n.resetPrompt() }, sdkInit: function () { var n = this; n.conn.listen({ onOpened: function (e) { n.reOpen && clearTimeout(n.reOpen), n.token = e.accessToken, n.conn.setPresence(), easemobim.textarea.value && t.removeClass(easemobim.sendBtn, "disabled"), t.html(easemobim.sendBtn, "发送"), n.handleReady() }, onTextMessage: function (e) { n.receiveMsg(e, "txt") }, onEmotionMessage: function (e) { n.receiveMsg(e, "face") }, onPictureMessage: function (e) { n.receiveMsg(e, "img") }, onFileMessage: function (e) { n.receiveMsg(e, "file") }, onCmdMessage: function (e) { n.receiveMsg(e, "cmd") }, onOnline: function () { t.isMobile && n.open() }, onOffline: function () { t.isMobile && n.conn.close() }, onError: function (t) { t.reconnect ? n.open() : 2 === t.type ? n.reOpen || (n.reOpen = setTimeout(function () { n.open() }, 2e3)) : (n.conn.stopHeartBeat(n.conn), "function" == typeof e.onerror && e.onerror(t)) } }) }, appendDate: function (n, s, i) { var o = t.$Dom(s || e.toUser), a = document.createElement("div"); o && (t.html(a, new Date(n).format("M月d日 hh:mm")), t.addClass(a, "easemobWidget-date"), i ? t.insertBefore(o, a, o.getElementsByTagName("div")[this.hasLogo ? 1 : 0]) : ((!this.msgTimeSpan[s] || n - this.msgTimeSpan[s] > 6e4) && o.appendChild(a), this.resetSpan(s))) }, resetSpan: function (e) { this.msgTimeSpan[e] = (new Date).getTime() }, open: function () { var n = this, s = { user: e.user.username, appKey: e.appKey, apiUrl: (t.ssl ? "https://" : "http://") + e.restServer }; e.user.password ? s.pwd = e.user.password : s.accessToken = e.user.token, n.conn.open(s) }, soundReminder: function () { var n = this; if (t.getIEVersion && t.getIEVersion < 9 || t.isMobile || !e.soundReminder) return void (n.soundReminder = function () { }); if (n.reminder = document.createElement("a"), n.reminder.setAttribute("href", "javascript:;"), t.addClass(n.reminder, "easemobWidgetHeader-audio theme-color"), easemobim.dragHeader.appendChild(n.reminder), t.on(n.reminder, "mousedown touchstart", function () { return n.silence = !n.silence, t.hasClass(n.reminder, "easemobWidgetHeader-silence") ? t.removeClass(n.reminder, "easemobWidgetHeader-silence") : t.addClass(n.reminder, "easemobWidgetHeader-silence"), !1 }), window.HTMLAudioElement) { var s = 0; n.audio = document.createElement("audio"), n.audio.src = e.staticPath + "/mp3/msg.m4a", n.soundReminder = function () { !t.isMin() && n.opened || 0 !== s || n.silence || (s = setTimeout(function () { s = 0 }, 3e3), n.audio.play()) } } }, setThemeBackground: function (e) { t.isMobile || t.addClass(e, "bg-color") }, clearThemeBackground: function (e) { t.isMobile || t.removeClass(e, "bg-color") }, setThemeColor: function (e) { t.isMobile || t.addClass(e, "theme-color") }, clearThemeColor: function (e) { t.isMobile || t.removeClass(e, "theme-color") }, bindEvents: function () { var n = this; t.live("i.easemobWidgetHeader-keyboard", t.click, function () { t.hasClass(this, "easemobWidgetHeader-keyboard-up") ? (t.addClass(this, "easemobWidgetHeader-keyboard-down"), t.removeClass(this, "easemobWidgetHeader-keyboard-up"), n.setKeyboard("down")) : (t.addClass(this, "easemobWidgetHeader-keyboard-up"), t.removeClass(this, "easemobWidgetHeader-keyboard-down"), n.setKeyboard("up")) }), !t.isMobile && t.on(easemobim.imBtn, t.click, function () { n.show() }), t.on(easemobim.imChatBody, t.click, function () { return easemobim.textarea.blur(), !1 }), t.on(document, "mouseover", function () { t.root || transfer.send(easemobim.EVENTS.RECOVERY) }), t.live("img.easemobWidget-imgview", "click", function () { easemobim.imgView.show(this.getAttribute("src")) }), t.live("button.easemobWidget-list-btn", "mouseover", function () { n.setThemeBackground(this) }), t.live("button.easemobWidget-list-btn", "mouseout", function () { n.clearThemeBackground(this) }), t.on(easemobim.sendFileBtn, "mouseenter", function () { n.setThemeColor(this) }), t.on(easemobim.sendFileBtn, "mouseleave", function () { n.clearThemeColor(this) }), t.on(easemobim.noteBtn, "mouseenter", function () { n.setThemeColor(this) }), t.on(easemobim.noteBtn, "mouseleave", function () { n.clearThemeColor(this) }), e.dragenable && (easemobim.dragBar.style.cursor = "move", t.isMobile || t.on(easemobim.dragBar, "mousedown", function (e) { var n = window.event || e; return easemobim.textarea.blur(), easemobim.EVENTS.DRAGREADY.data = { x: n.clientX, y: n.clientY }, t.root || transfer.send(easemobim.EVENTS.DRAGREADY), !1 }, !1)), function () { var e, s, i; t.live("div.easemobWidget-date", "touchstart", function (e) { var t = e || window.event, n = t.touches; t.touches && t.touches.length > 0 && (s = n[0].pageY) }), t.live("div.easemobWidget-date", "touchmove", function (t) { var o = t || window.event, a = o.touches; o.touches && o.touches.length > 0 && (i = a[0].pageY) - s > 8 && this.getBoundingClientRect().top >= 0 && (clearTimeout(e), e = setTimeout(function () { n.getHistory(!0) }, 100)) }); var o = function (t) { var s = t || window.event, i = (s.touches, this); (s.wheelDelta / 120 > 0 || s.detail < 0) && (clearTimeout(e), e = setTimeout(function () { i.getBoundingClientRect().top >= 0 && n.getHistory(!0) }, 400)) }; t.live("div.easemobWidget-chat", "mousewheel", o), t.live("div.easemobWidget-chat", "DOMMouseScroll", o) }(), t.live("div.easemobWidget-msg-status", t.click, function () { var e = this.getAttribute("id").slice(0, -7); t.addClass(this, "em-hide"), t.removeClass(t.$Dom(e + "_loading"), "em-hide"), n.conn.send(e) }), t.live("button.js_robertTransferBtn", t.click, function () { var e = this; return n.transferToKf(e.getAttribute("data-id"), e.getAttribute("data-sessionid")), !1 }), t.live("button.js_robertbtn", t.click, function () { var e = this; return n.sendTextMsg(t.html(e), null, { msgtype: { choice: { menuid: e.getAttribute("data-id") } } }), !1 }); var s = function () { if (!n.readyHandled) return t.hasClass(easemobim.sendBtn, "disabled") || t.addClass(easemobim.sendBtn, "disabled"), !1; easemobim.textarea.value ? t.removeClass(easemobim.sendBtn, "disabled") : t.addClass(easemobim.sendBtn, "disabled") }; if (t.on(easemobim.textarea, "keyup", s), t.on(easemobim.textarea, "change", s), t.on(easemobim.textarea, "input", s), t.isMobile) { var i = function () { easemobim.textarea.style.overflowY = "auto", n.scrollBottom(800), clearInterval(n.focusText), n.focusText = setInterval(function () { document.body.scrollTop = 1e4 }, 100) }; t.on(easemobim.textarea, "input", function () { n.autoGrowOptions.update(), n.scrollBottom(800) }), t.on(easemobim.textarea, "focus", i), t.one(easemobim.textarea, "touchstart", i), t.on(easemobim.textarea, "blur", function () { clearInterval(n.focusText) }) } t.on(easemobim.realFile, "change", function () { easemobim.realFile.value && n.sendImgMsg() }), t.on(document, t.click, function (e) { var n = window.event || e, s = n.srcElement || n.target; t.hasClass(s, "e-face") || t.addClass(easemobim.chatFaceWrapper, "em-hide") }), t.on(easemobim.sendFileBtn, "touchend", function () { easemobim.textarea.blur() }), t.on(easemobim.sendFileBtn, "click", function () { return n.readyHandled ? Easemob.im.Utils.isCanUploadFileAsync ? void easemobim.realFile.click() : (n.errorPrompt("当前浏览器需要安装flash发送图片"), !1) : (n.errorPrompt("正在连接中..."), !1) }), t.on(easemobim.noteBtn, "click", function () { easemobim.leaveMessage.show() }), t.on(easemobim.mobileNoteBtn, "click", function () { easemobim.leaveMessage.show() }), t.on(easemobim.textarea, "keydown", function (e) { var s = this; if (t.isMobile && 13 === e.keyCode || e.ctrlKey && 13 === e.keyCode || e.shiftKey && 13 === e.keyCode) return s.value = s.value + "\n", !1; if (13 === e.keyCode) { if (t.addClass(easemobim.chatFaceWrapper, "em-hide"), t.hasClass(easemobim.sendBtn, "disabled")) return !1; n.sendTextMsg(), setTimeout(function () { s.value = "" }, 0) } }), t.on(easemobim.sendBtn, "click", function () { return !t.hasClass(this, "disabled") && (t.addClass(easemobim.chatFaceWrapper, "em-hide"), n.sendTextMsg(), t.isMobile && (easemobim.textarea.style.height = "34px", easemobim.textarea.style.overflowY = "hidden", "up" === n.direction || (easemobim.imChatBody.style.bottom = "43px"), easemobim.textarea.focus()), !1) }) }, scrollBottom: function (e) { var t = easemobim.imChatBody; e ? (clearTimeout(this.scbT), this.scbT = setTimeout(function () { t.scrollTop = t.scrollHeight - t.offsetHeight + 1e4 }, e)) : t.scrollTop = t.scrollHeight - t.offsetHeight + 1e4 }, sendImgMsg: function (n, s) { var i = this, o = new Easemob.im.EmMessage("img", s ? null : i.conn.getUniqueId()); o.set({ apiUrl: (t.ssl ? "https://" : "http://") + e.restServer, file: n || Easemob.im.Utils.getFileUrl(easemobim.realFile.getAttribute("id")), to: e.toUser, uploadError: function (e) { if (Easemob.im.Utils.isCanUploadFileAsync) { var n = e.id; t.$Dom(n); t.html(t.$Class("a.easemobWidget-noline")[0], '<i class="easemobWidget-unimage">I</i>'), t.addClass(t.$Dom(n + "_loading"), "em-hide"), i.scrollBottom() } else easemobim.swfupload && easemobim.swfupload.settings.upload_error_handler() }, uploadComplete: function (e) { i.handleTransfer("sending") }, success: function (e) { t.$Remove(t.$Dom(e + "_loading")), t.$Remove(t.$Dom(e + "_failed")) }, fail: function (e) { t.addClass(t.$Dom(e + "_loading"), "em-hide"), t.removeClass(t.$Dom(e + "_failed"), "em-hide") }, flashUpload: easemobim.flashUpload }), s ? i.appendMsg(e.user.username, n.to, o, !0) : (i.setExt(o), i.conn.send(o.body), easemobim.realFile.value = "", Easemob.im.Utils.isCanUploadFileAsync && (i.appendDate((new Date).getTime(), e.toUser), i.appendMsg(e.user.username, e.toUser, o))) }, sendFileMsg: function (n, s) { var i = this, o = new Easemob.im.EmMessage("file", s ? null : i.conn.getUniqueId()), n = n || Easemob.im.Utils.getFileUrl(easemobim.realFile.getAttribute("id")); if (!n || !n.filetype || !e.FILETYPE[n.filetype.toLowerCase()]) return chat.errorPrompt("不支持此文件"), easemobim.realFile.value = null, !1; o.set({ apiUrl: (t.ssl ? "https://" : "http://") + e.restServer, file: n, to: e.toUser, uploadError: function (e) { if (Easemob.im.Utils.isCanUploadFileAsync) { var n = e.id; t.$Dom(n); t.html(t.$Class("a.easemobWidget-noline")[0], '<i class="easemobWidget-unimage">I</i>'), t.addClass(t.$Dom(n + "_loading"), "em-hide"), i.scrollBottom() } else easemobim.swfupload && easemobim.swfupload.settings.upload_error_handler() }, uploadComplete: function (e) { i.handleTransfer("sending") }, success: function (e) { t.$Remove(t.$Dom(e + "_loading")), t.$Remove(t.$Dom(e + "_failed")) }, fail: function (e) { t.addClass(t.$Dom(e + "_loading"), "em-hide"), t.removeClass(t.$Dom(e + "_failed"), "em-hide") }, flashUpload: easemobim.flashUpload }), s ? i.appendMsg(e.user.username, n.to, o, !0) : (i.setExt(o), i.conn.send(o.body), easemobim.realFile.value = "", Easemob.im.Utils.isCanUploadFileAsync && (i.appendDate((new Date).getTime(), e.toUser), i.appendMsg(e.user.username, e.toUser, o))) }, handleTransfer: function (n, s, i) { if (!e.hideStatus) { var o = t.$Dom(e.toUser + "-transfer"); e.agentList = e.agentList || {}, e.agentList[e.toUser] = e.agentList[e.toUser] || {}; if (i ? this.onlineHumanAgentCount < 1 : !this.session && this.agentCount < 1) t.addClass(o, "none"), t.removeClass(o, "transfer"), t.removeClass(o, "link"), t.removeClass(o, "em-hide"), this.handleMobileHeader(); else if ("sending" === n) { if (e.offDuty || this.session || e.agentName) return; e.agentList[e.toUser].firstMsg || this.chatWrapper.getAttribute("data-session") || (e.agentList[e.toUser].firstMsg = !0, t.addClass(o, "link"), t.removeClass(o, "transfer"), t.removeClass(o, "none"), t.removeClass(o, "em-hide")), this.handleMobileHeader() } else "transfer" === n ? (t.addClass(o, "transfer"), t.removeClass(o, "link"), t.removeClass(o, "none"), t.removeClass(o, "em-hide"), this.handleMobileHeader()) : "reply" === n && (t.addClass(o, "em-hide"), s && s.userNickname && this.setAgentProfile({ userNickname: s.userNickname, avatar: s.avatar }), t.isMobile && (t.removeClass(easemobim.dragHeader.getElementsByTagName("img")[0], "em-hide"), t.removeClass(easemobim.dragHeader.getElementsByTagName("span")[0], "em-hide"))) } }, handleMobileHeader: function () { t.isMobile && (t.addClass(easemobim.dragHeader.getElementsByTagName("img")[0], "em-hide"), t.addClass(easemobim.dragHeader.getElementsByTagName("span")[0], "em-hide")) }, appendMsg: function (n, s, i, o) { var a = n == e.user.username && (n || e.user.username), r = this, d = r.chatWrapper, l = document.createElement("div"); l.className = "emim-clear emim-mt20 emim-tl emim-msg-wrapper ", l.className += a ? "emim-fr" : "emim-fl", t.html(l, i.get(!a)), o ? t.insertBefore(d, l, d.childNodes[r.hasLogo ? 1 : 0]) : (d.appendChild(l), r.scrollBottom(t.isMobile ? 800 : null)); var c = t.$Class("img.easemobWidget-imgview", l), m = c.length > 0 ? c[0] : null; m && t.on(m, "load", function () { r.scrollBottom(), m = null }), l = null }, sendTextMsg: function (n, s, i) { var o = this, a = new Easemob.im.EmMessage("txt", s ? null : o.conn.getUniqueId()); if (a.set({ value: n || easemobim.textarea.value, to: e.toUser, success: function (e) { t.$Remove(t.$Dom(e + "_loading")), t.$Remove(t.$Dom(e + "_failed")), o.handleTransfer("sending", null, !s && ("转人工" === a.value || "转人工客服" === a.value)) }, fail: function (e) { t.addClass(t.$Dom(e + "_loading"), "em-hide"), t.removeClass(t.$Dom(e + "_failed"), "em-hide") } }), i && t.extend(a.body, i), t.addClass(easemobim.sendBtn, "disabled"), s) o.appendMsg(e.user.username, s, a, !0); else { if (o.setExt(a), o.conn.send(a.body), easemobim.textarea.value = "", a.body.ext && "custom" === a.body.ext.type) return; o.appendDate((new Date).getTime(), e.toUser), o.appendMsg(e.user.username, e.toUser, a) } }, transferToKf: function (t, n) { var s = this, i = new Easemob.im.EmMessage("cmd"); i.set({ to: e.toUser, action: "TransferToKf", ext: { weichat: { ctrlArgs: { id: t, serviceSessionId: n } } } }), s.conn.send(i.body), s.handleTransfer("sending", null, !0) }, sendSatisfaction: function (n, s, i, o) { var a = this, r = new Easemob.im.EmMessage("txt", a.conn.getUniqueId()); r.set({ value: "", to: e.toUser }), t.extend(r.body, { ext: { weichat: { ctrlType: "enquiry", ctrlArgs: { inviteId: o || "", serviceSessionId: i || "", detail: s, summary: n } } } }), a.conn.send(r.body) }, messagePrompt: function (e) { if (!t.isMobile) { var n = this; n.opened ? n.resetPrompt() : (t.removeClass(t.html(easemobim.messageCount, ""), "em-hide"), n.msgCount += 1, n.msgCount > 9 ? t.html(t.addClass(easemobim.messageCount, "mutiCount"), "…") : t.html(t.removeClass(easemobim.messageCount, "mutiCount"), n.msgCount)), !t.isMin() && n.opened || (n.soundReminder(), easemobim.EVENTS.NOTIFY.data = { avatar: this.currentAvatar, title: "新消息", brief: e.brief }, t.root || transfer.send(easemobim.EVENTS.SLIDE), t.root || transfer.send(easemobim.EVENTS.NOTIFY)) } }, resetPrompt: function () { this.msgCount = 0, t.addClass(t.html(easemobim.messageCount, ""), "em-hide"), t.root || transfer.send(easemobim.EVENTS.RECOVERY) }, receiveMsg: function (s, i, o) { if (!e.offDuty) { var a = this, r = a.getMsgid(s); if (!n.get(r) && (r && n.set(r, 1), o || !s.from || s.from.toLowerCase() == e.toUser.toLowerCase() || s.noprompt)) { var d = null; switch (s.ext && s.ext.weichat && s.ext.weichat.ctrlType && "inviteEnquiry" == s.ext.weichat.ctrlType ? i = "satisfactionEvaluation" : s.ext && s.ext.msgtype && s.ext.msgtype.choice ? i = "robertList" : s.ext && s.ext.weichat && "TransferToKfHint" === s.ext.weichat.ctrlType && (i = "robertTransfer"), i) { case "txt": d = new Easemob.im.EmMessage("txt"), d.set({ value: s.data }); break; case "face": d = new Easemob.im.EmMessage("txt"); for (var l = "", c = "", m = 0, u = s.data.length; m < u; m++) c += "emotion" === s.data[m].type ? "[表情]" : s.data[m].data, l += "emotion" === s.data[m].type ? "<img class='em-emotion' src='" + s.data[m].data + "' alt='表情'/>" : s.data[m].data; d.set({ value: l, emotion: !0, brief: c }); break; case "img": d = new Easemob.im.EmMessage("img"), d.set({ file: { url: s.url } }); break; case "file": d = new Easemob.im.EmMessage("file"), d.set({ file: { url: s.url, filename: s.filename } }); break; case "satisfactionEvaluation": d = new Easemob.im.EmMessage("list"), d.set({ value: "请对我的服务做出评价", list: ['                            <div class="easemobWidget-list-btns">                                <button class="easemobWidget-list-btn js_satisfybtn" data-inviteid="' + s.ext.weichat.ctrlArgs.inviteId + '"\t\t\t\t\t\t\t\t data-servicesessionid="' + s.ext.weichat.ctrlArgs.serviceSessionId + '">立即评价</button>                            </div>'] }); break; case "robertList": d = new Easemob.im.EmMessage("list"); var h = "", p = s.ext.msgtype.choice.items || s.ext.msgtype.choice.list; if (p.length > 0) { h = '<div class="easemobWidget-list-btns">'; for (var m = 0, u = p.length; m < u; m++) h += '<button class="easemobWidget-list-btn js_robertbtn" data-id="' + p[m].id + '">' + (p[m].name || p[m]) + "</button>"; h += "</div>" } d.set({ value: s.ext.msgtype.choice.title, list: h }); break; case "robertTransfer": d = new Easemob.im.EmMessage("list"); var h = "", p = [s.ext.weichat.ctrlArgs]; if (p.length > 0) { h = '<div class="easemobWidget-list-btns">'; for (var m = 0, u = p.length; m < u; m++) h += '<button class="easemobWidget-list-btn js_robertTransferBtn"\t\t\t\t\t\t\t\t data-sessionid="' + p[m].serviceSessionId + '" data-id="' + p[m].id + '">' + p[m].label + "</button>"; h += "</div>" } d.set({ value: s.data || s.ext.weichat.ctrlArgs.label, list: h }) } if (o) { if (!d || !d.value) return; a.appendMsg(s.from, s.to, d, !0) } else { if (s.noprompt || this.getSession(), s.ext && s.ext.weichat && (!s.ext.weichat.event || "ServiceSessionTransferedEvent" !== s.ext.weichat.event.eventName && "ServiceSessionTransferedToAgentQueueEvent" !== s.ext.weichat.event.eventName ? s.ext.weichat.event && "ServiceSessionClosedEvent" === s.ext.weichat.event.eventName ? (e.agentList && e.agentList[e.toUser] && e.agentList[e.toUser].firstMsg && (e.agentList[e.toUser].firstMsg = !1), this.session = null, this.sessionSent = !1, this.handleTransfer("reply"), t.root || transfer.send(easemobim.EVENTS.ONSESSIONCLOSED)) : s.ext.weichat.event && "ServiceSessionOpenedEvent" === s.ext.weichat.event.eventName ? (this.agentCount < 1 && (this.agentCount = 1), this.handleTransfer("reply")) : s.ext.weichat.event && "ServiceSessionCreatedEvent" === s.ext.weichat.event.eventName || (s.ext.weichat.agent ? s.ext.weichat.agent && "调度员" !== s.ext.weichat.agent.userNickname && this.handleTransfer("reply", s.ext.weichat.agent) : this.handleTransfer("reply")) : this.handleTransfer("transfer")), !d || !d.value) return; if (dealWHAPPMsg(d, s, a) > 0) return; if (s.noprompt || a.messagePrompt(d), a.appendDate((new Date).getTime(), s.from), a.resetSpan(), a.appendMsg(s.from, s.to, d), a.scrollBottom(50), e.receive) { easemobim.EVENTS.ONMESSAGE.data = { from: s.from, to: s.to, message: d }; try { t.root || transfer.send(easemobim.EVENTS.ONMESSAGE) } catch (e) { } } } } } } }
    }, easemobim.api = function (e, t, n) { easemobim.api[e] = easemobim.api[e] || {}; var s = (new Date).getTime(); easemobim.api[e][s] = n, easemobim.getData.send({ api: e, data: t, timespan: s }).listen(function (e) { if (easemobim.api[e.call] && "function" == typeof easemobim.api[e.call][e.timespan]) { var t = easemobim.api[e.call][e.timespan]; delete easemobim.api[e.call][e.timespan], 0 !== e.status ? "function" == typeof easemobim.config.onerror && config.onerror(e) : t(e) } }) }
}(); var messageType_UserWord = 0, messageType_UserAction = 1, messageType_KeFuWord = 2, messageType_KeFuAction = 3, messageType_UserAction_ClickChoice = 0, messageType_UserAction_ClickHotel = 10, messageType_UserAction_RequirePrice = 20, messageType_UserAction_RequirePrice_ClickChoice = 21, messageType_UserAction_Other = 100; window.setInterval("MagiCallClientHeart()", 15e3); var isTodayFirstMessage = 0; Date.prototype.pattern = function (e) { var t = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12, "H+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), S: this.getMilliseconds() }, n = { 0: "/u65e5", 1: "/u4e00", 2: "/u4e8c", 3: "/u4e09", 4: "/u56db", 5: "/u4e94", 6: "/u516d" }; /(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))), /(E+)/.test(e) && (e = e.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? "/u661f/u671f" : "/u5468" : "") + n[this.getDay() + ""])); for (var s in t) new RegExp("(" + s + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? t[s] : ("00" + t[s]).substr(("" + t[s]).length))); return e }, function (e, t) {
    "use strict"; if ("function" == typeof easemobim) return !1; var n, s = document.getElementById("EasemobKefuWebim"), i = easemobim.utils, o = function (t) {
        var o = i.query("tenantId"), t = t || {}; if (i.root) {
            try { t = JSON.parse(i.code.decode(i.getStore("emconfig" + o))) } catch (e) { } t.tenantId = easemobim.config.tenantId, t.hide = !0, t.to = e.easemobim.config.to, t.appKey = e.easemobim.config.appKey, t.domain = e.easemobim.config.domain, t.staticPath = e.easemobim.config.staticPath, t.xmppServer = e.easemobim.config.xmppServer, t.restServer = e.easemobim.config.restServer, t.originType = e.easemobim.config.originType, t.agentName = e.easemobim.config.agentName, t.satisfaction = e.easemobim.config.sat, t.resources = e.easemobim.config.resources, t.hideStatus = e.easemobim.config.hideStatus, t.wechatAuth = e.easemobim.config.wechatAuth, t.hideKeyboard = e.easemobim.config.hideKeyboard, t.ticket = "" === e.easemobim.config.ticket || e.easemobim.config.ticket; try { t.emgroup = decodeURIComponent(i.query("emgroup")) } catch (e) { t.emgroup = i.query("emgroup") } i.query("user") ? (!t.user || t.user.username && t.user.username !== i.query("user")) && (t.user = { username: e.easemobim.config.user.name, password: e.easemobim.config.user.password, token: "" }) : t.user = {
                username: e.easemobim.config.user.name,
                password: e.easemobim.config.user.password, token: ""
            }
        } s.innerHTML = "\t\t\t<div id='easemobWidgetPopBar'" + (i.root || !t.minimum || t.hide ? " class='em-hide'" : "") + ">\t\t\t\t<a class='easemobWidget-pop-bar bg-color' href='" + (i.isMobile ? location.href + "' target='_blank'" : "javascript:;'") + "><i></i>" + t.buttonText + "</a>\t\t\t\t<span class='easemobWidget-msgcount em-hide'></span>\t\t\t</div>\t\t\t<div id='EasemobKefuWebimChat' class='easemobWidgetWrapper" + (i.root || !t.minimum ? "" : " em-hide") + (i.isMobile ? " easemobWidgetWrapper-mobile" : "") + "'>\t\t\t\t<div id='easemobWidgetHeader' class='easemobWidgetHeader-wrapper bg-color border-color'  style=\"display:none\">\t\t\t\t\t<div id='easemobWidgetDrag'>\t\t\t\t\t\t" + (i.isMobile || i.root ? "" : "<p></p>") + "\t\t\t\t\t\t<img class='easemobWidgetHeader-portrait border-color'/>\t\t\t\t\t\t<span class='easemobWidgetHeader-nickname'></span>                        <i id='easemobWidgetNotem' class='easemobWidget-notem em-hide'></i>\t\t\t\t\t</div>\t\t\t\t</div>\t\t\t\t<div id='easemobWidgetBody' class='easemobWidgetBody-wrapper'></div>\t\t\t\t<div id='EasemobKefuWebimFaceWrapper' class='easemobWidget-face-wrapper e-face em-hide'>\t\t\t\t\t<ul class='easemobWidget-face-container'></ul>\t\t\t\t</div>\t\t\t\t<div id='easemobWidgetSend' class='easemobWidget-send-wrapper'>\t\t\t\t\t<i class='easemobWidget-face e-face' tile='表情'></i>\t\t\t\t\t<i class='easemobWidget-file' id='easemobWidgetFile' tile='图片'></i>\t\t\t\t\t<i class='" + (t.ticket ? "easemobWidget-note" : "easemobWidget-note em-hide") + "' id='easemobWidgetNote' tile='留言'></i>\t\t\t\t\t<input id='easemobWidgetFileInput' type='file' accept='image/*'/>\t\t\t\t\t<textarea class='easemobWidget-textarea' spellcheck='false'></textarea>" + (i.isMobile || !t.satisfaction ? "" : "<span id='EasemobKefuWebimSatisfy' class='easemobWidget-satisfaction'>请对服务做出评价</span>") + "\t\t\t\t\t<a href='javascript:;' class='easemobWidget-send bg-color disabled' id='easemobWidgetSendBtn'>连接中</a>\t\t\t\t</div>\t\t\t\t<iframe id='EasemobKefuWebimIframe' class='em-hide' src='" + (t.domain || "//" + location.host) + "/webim/transfer.html?v=43.6'>\t\t\t</div>", e.chat = easemobim.chat(t); var a = easemobim.api; if (t.base = i.protocol + t.domain, t.sslImgBase = t.domain + "/ossimages/", !Easemob.im.Utils.isCanUploadFileAsync && Easemob.im.Utils.isCanUploadFile) { var r = document.createElement("script"); r.onload = r.onreadystatechange = function () { this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || easemobim.uploadShim(t, chat) }, r.src = i.protocol + t.staticPath + "/js/swfupload/swfupload.min.js", s.appendChild(r) } n = { init: function () { var e = this; return t.toUser = t.toUser || t.to, a("getDutyStatus", { tenantId: t.tenantId }, function (e) { t.offDuty = e.data, e.data && chat.setOffline(!0) }), t.orgName = t.appKey.split("#")[0], t.appName = t.appKey.split("#")[1], a("getRelevanceList", { tenantId: t.tenantId }, function (n) { if (0 === n.data.length) return void chat.errorPrompt("未创建关联", !0); t.relevanceList = n.data, t.tenantAvatar = i.getAvatarsFullPath(n.data[0].tenantAvatar, t.domain), t.defaultAvatar = t.staticPath ? t.staticPath + "/img/default_avatar.png" : "static/img/default_avatar.png", t.defaultAgentName = n.data[0].tenantName, t.logo = t.logo || n.data[0].tenantLogo, t.toUser = t.toUser || n.data[0].imServiceNumber, t.orgName = t.orgName || n.data[0].orgName, t.appName = t.appName || n.data[0].appName, t.appKey = t.appKey || t.orgName + "#" + t.appName, t.restServer = t.restServer || n.data[0].restDomain; var s = t.restServer ? t.restServer.match(/vip\d/) : ""; if (s = s && s.length ? "-" + s[0] : "", t.xmppServer = t.xmppServer || "im-api" + s + ".easemob.com", chat.init(), t.user.username && (t.user.password || t.user.token)) chat.ready(); else { if (t.wechatAuth && easemobim.wechat) return easemobim.wechat(function (n) { try { n = JSON.parse(n) } catch (e) { n = null } if (n) { t.visitor = t.visitor || {}, t.visitor.userNickname = n.nickname; var s = t.tenantId + "_" + t.orgName + "_" + t.appName + "_" + t.toUser + "_" + n.openid; easemobim.emajax({ url: "/v1/webimplugin/visitors/wechat/" + s + "?tenantId=" + t.tenantId, data: { orgName: t.orgName, appName: t.appName, imServiceNumber: t.toUser }, type: "POST", success: function (n) { try { n = JSON.parse(n) } catch (e) { n = null } n && "OK" === n.status ? (t.user.username = n.entity.userId, t.user.password = n.entity.userPassword, chat.ready()) : e.go() }, error: function (t) { e.go() } }) } else e.go() }), this; t.user.username ? a("getPassword", { userId: t.user.username, tenantId: t.tenantId }, function (n) { n.data ? (t.user.password = n.data, chat.ready()) : e.go() }) : e.go() } }), this }, go: function () { a("createVisitor", { orgName: t.orgName, appName: t.appName, imServiceNumber: t.toUser, tenantId: t.tenantId }, function (e) { t.newuser = !0, t.user.username = e.data.userId, t.user.password = e.data.userPassword, easemobim.EVENTS.CACHEUSER.data = { username: t.user.username, group: t.user.emgroup }, i.root ? i.set("root" + t.tenantId + t.emgroup, t.user.username) : transfer.send(easemobim.EVENTS.CACHEUSER), chat.ready() }) }, beforeOpen: function () { }, open: function (e) { t.toUser = t.to, this.beforeOpen(), chat.show(e) }, close: function (e) { chat.close(e), this.afterClose() }, afterClose: function () { } }, i.on(i.$Dom("EasemobKefuWebimIframe"), "load", function () { easemobim.getData = new easemobim.Transfer("EasemobKefuWebimIframe"), n.init() }), "function" == typeof easemobim.leaveMessage && (easemobim.leaveMessage = easemobim.leaveMessage(chat, o)), "function" == typeof easemobim.paste && (easemobim.paste = easemobim.paste(chat)), "function" == typeof easemobim.satisfaction && easemobim.satisfaction(chat)
    }; i.root ? o() : e.transfer = (new easemobim.Transfer).listen(function (e) { if (e && e.tenantId) o(e); else if (e.event) switch (e.event) { case easemobim.EVENTS.SHOW.event: n.open(!0); break; case easemobim.EVENTS.CLOSE.event: n.close(!0); break; case easemobim.EVENTS.EXT.event: chat.sendTextMsg("", !1, e.data.ext); break; case easemobim.EVENTS.TEXTMSG.event: chat.sendTextMsg(e.data.data, !1, e.data.ext) } })
}(window);