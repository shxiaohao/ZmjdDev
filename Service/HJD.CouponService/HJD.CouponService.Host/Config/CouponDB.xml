<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <statements>
    <select id="GetNeedCancelMemberUserList">
      <![CDATA[
        select
          ec.UserID
          from CouponDB..RefundCoupons rf with(nolock)
          inner join CouponDB..ExchangeCoupon ec with(nolock) on ec.ID = rf.CouponID
          inner join CouponDB..CouponActivity ca with(nolock) on ca.ID = ec.ActivityID
        where (rf.State = 2 OR rf.State = 3) and ca.Type = 400
      ]]>
    </select>  
    <select id="GetCouponActivitySKURelBySKUID">
      <![CDATA[       
SELECT *
FROM   dbo.CouponActivitySKURel r(NOLOCK)
WHERE  SKUID = @SKUID
      ]]>
    </select>
    <select id="GetCouponActivityBySKUID">
      <![CDATA[
      DECLARE @coun int 
      SELECT @coun = COUNT(1) FROM   dbo.CouponActivitySKURel r(NOLOCK)
            INNER JOIN CouponActivity ca(NOLOCK)
                    ON r.CouponActivityID= ca.ID
            INNER JOIN ProductDB..SKU k(nolock)
				            ON k.ID =r.SKUID
            WHERE  SKUID = @SKUID AND  ca.State = 1
      IF @coun>0
	      SELECT *,k.NeedPhoto FROM   dbo.CouponActivitySKURel r(NOLOCK)
		        INNER JOIN CouponActivity ca(NOLOCK)
				        ON r.CouponActivityID= ca.ID
            INNER JOIN ProductDB..SKU k(nolock)
				        ON k.ID =r.SKUID
		        WHERE  SKUID = @SKUID AND  ca.State = 1
      ELSE
	      SELECT *,k.NeedPhoto FROM dbo.CouponActivitySKURel r(NOLOCK)
		        INNER JOIN CouponActivity ca(NOLOCK)
				        ON r.CouponActivityID= ca.ID
            INNER JOIN ProductDB..SKU k(nolock)
				        ON k.ID =r.SKUID
		        WHERE  SKUID = @SKUID order by UpdateTime desc
      
      
      --SELECT * FROM   dbo.CouponActivitySKURel r(NOLOCK)
      --INNER JOIN CouponActivity ca(NOLOCK)
      --        ON r.CouponActivityID= ca.ID
      --WHERE  SKUID = @SKUID AND  ca.State = 1
    ]]>
    </select>
    <select id="GetCouponActivityBySourceID">
      <![CDATA[
      select * from CouponDB..CouponActivity ca(nolock) where ca.SourceID = @SourceID
    ]]>
    </select>

    <select id="GetCouponActivitySKURelByActivityID">
      <![CDATA[       
SELECT *
FROM   dbo.CouponActivitySKURel r(NOLOCK)
WHERE  CouponActivityID = @ActivityID
      ]]>
    </select>
    <select id="GetNeedSettlementBotaoCouponList">
      <![CDATA[
        select
          ec.ID, settleType = 1
          from CouponDB..RefundCoupons rc with(nolock) 
          inner join CouponDB..ExchangeCoupon ec with(nolock) on ec.ID = rc.CouponID
          inner join CouponDB..CouponActivity ca with(nolock) on ca.ID = ec.ActivityID
	          left join HotelDB..BotaoSettlement bs with(nolock) on bs.OrderId = ec.ID
          where rc.state = 3 and ca.MerchantCode = 'bohuijinrong' and ca.Type = 200 and bs.OrderId is null
          union all
          select
          ec.ID, settleType = 2
          from CouponDB..ExchangeCoupon ec with(nolock)
          inner join CouponDB..CouponActivity ca with(nolock) on ca.ID = ec.ActivityID
          left join CouponDB..RefundCoupons rc with(nolock) on rc.CouponID = ec.ID
	          left join HotelDB..BotaoSettlement bs with(nolock) on bs.OrderId = ec.ID
          where ec.state = 2 and ca.ReturnPolicy = 3 and ca.MerchantCode = 'bohuijinrong' and ca.Type = 200  and rc.CouponID is null and bs.OrderId is null
          union all
          select
	          ec.ID, settleType = 2
          from 
	          CouponDB..ExchangeCoupon ec with(nolock) 
	          inner join CouponDB..CouponActivity ca with(nolock) on ca.ID = ec.ActivityID
	          inner join HotelDB..Orders o with(nolock) on o.OrderID = ec.ExchangeTargetID
	          inner join HotelDB..OrderOperate op with(nolock) on op.ID = o.ID
	          left join HotelDB..BotaoSettlement bs with(nolock) on bs.OrderId = ec.ID
        where ec.State = 3 and ec.ExchangeTargetID > 0 and ca.Type = 200 and ca.MerchantCode = 'bohuijinrong' and o.state = 12 and op.LastCancelTime <= GETDATE() and bs.OrderId is null
        ]]>
    </select>
    <select id="GetCouponRateEntityList">
      <![CDATA[
       
IF EXISTS(
       SELECT TOP 1 ID
       FROM   CouponDB..CouponRate (NOLOCK)
       WHERE  CouponActivity = @couponActivity
   )
BEGIN
    SELECT *
    FROM   CouponDB..CouponRate (NOLOCK)
    WHERE  CouponActivity = @couponActivity
END
ELSE
BEGIN
    SELECT pr.ID,
           [CouponActivity] = ca.ID,
           [DateType] = pr.[Type],
           [Date] = CONVERT(DateTime, pr.[Date]),
           [Price] = pr.Price,
           [Creator] = convert(bigint,0),
           [CreateTime] =  CONVERT(DateTime, pr.[Date]),
           [Updator] =  convert(bigint,0),
           [UpdateTime] =  CONVERT(DateTime, pr.[Date]),
           [VIPPrice] = CASE 
                             WHEN pr.ManualVIPPrice >= 0 THEN pr.ManualVIPPrice
                             ELSE pr.VIPPrice
                        END
    FROM   Coupondb.dbo.CouponActivity ca(NOLOCK)
           INNER JOIN hoteldb.dbo.PRate pr(NOLOCK)
                ON  pr.PID = ca.SourceID
    WHERE  ca.ID = @couponActivity
END 
      ]]>
    </select> <select id="GetExchangeCouponListByUserIDSourceID">
      <![CDATA[    
      SELECT 
 ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
       ca.SourceID,
       CouponName = ISNULL(ISNULL(p.Code, ca.PackageInfo), ''),
       ObjectName = ISNULL(h.HotelName, ca.pageTitle),
       ObjectID = ISNULL(h.HotelID, 0),
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ISNULL(rc.State, 0) RefundState,
       ca.IsFestivalCanUse,
       ca.IsAllowMultiRoom,
       ca.ExchangeMethod,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.CouponNote 
FROM   [CouponDB]..[ExchangeCoupon] ec  (nolock)
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       LEFT JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
       LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID and rc.refundType=0
WHERE  ec.UserID = @userID AND ca.sourceid = @SourceID
      
     ]]>
    </select>
    
    <select id="GetOneExchangeCoupon">
      <![CDATA[      
SELECT 
 ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
       ca.SourceID,
       CouponName = ISNULL(ISNULL(p.Code, ca.PackageInfo), ''),
       ObjectName = ISNULL(h.HotelName, ca.pageTitle),
       ObjectID = ISNULL(h.HotelID, 0),
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ISNULL(rc.State, 0) RefundState,
       ca.IsFestivalCanUse,
       ca.IsAllowMultiRoom,
       ca.ExchangeMethod,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.CouponNote 
FROM   [CouponDB]..[ExchangeCoupon] ec  (nolock)
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       LEFT JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
       LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID and rc.refundType=0
WHERE  ec.ID =  @CouponID
      ]]>
    </select>
    <select id="GetWaitingRefundCouponList">
      <![CDATA[
        Select 
         ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,   
        ISNULL(rc.State,0) RefundState  
        from ExchangeCoupon ec with(nolock)
        inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
        left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID
        where ec.[State] = 2 AND ca.ID > 100000 AND ca.[ReturnPolicy] != 3 AND   DATEADD(day,1, ca.[ExpireTime]) <  GETDATE()
      ]]>
    </select>
    <select id="GetRefundCouponsList">
      <![CDATA[   
SELECT *
FROM   (
           SELECT ROW_NUMBER() OVER(ORDER BY tempcolumn) temprownumber,
                  tempcolumn,
                  CouponID,
                  PhoneNum,
                  PayType,
                  PayAccount,
                  PayID,
                  Price,
                  STATE,
                  CreateTime,
                  RefundTime,
                  HotelID,
                  HotelName,
                  Creator,
                  Updator,
                  (
                      SELECT EmailAccount
                      FROM   AccountDB..User_Info
                      WHERE  UserID = Creator
                  ) EmailCreator,
                  (
                      SELECT EmailAccount
                      FROM   AccountDB..User_Info
                      WHERE  UserID = Updator
                  ) EmailUpdator,
                  ISNULL(Remark, '') Remark,
                  PageTitle,
                  ExchangeNo,
                  ExchangeNoType,
                  ExchangeTipsName,
                  ThirdPartyType,
                  RefundState,
                  RefundType,
                  RefundCouponIDX = IDX,
                  CanAutoRefund  
           FROM   (
                      SELECT TOP(@end) tempcolumn = 0,
                             rc.*,
                             ca.PageTitle,
                             ec.ExchangeNo,
                             ISNULL(h.HotelId, 0) HotelID,
                             ISNULL(h.HotelName, '') HotelName,
                             ISNULL(ke.ExchangeNoType, 0)ExchangeNoType,
                             ISNULL(kt.ExchangeTipsName, 0) ExchangeTipsName,
                             ThirdPartyType = ISNULL(kt.ThirdPartyType, 0),
                             RefundState = ISNULL(rd.State, -1),
							 CanAutoRefund = opc.CanAutoRefund
                      FROM   RefundCoupons rc WITH(NOLOCK)
                             INNER JOIN hoteldb.dbo.OrderPaymentCode opc(NOLOCK)
                                  ON  opc.ID = rc.PayType
                             INNER JOIN ExchangeCoupon ec WITH(NOLOCK)
                                  ON  ec.ID = rc.CouponID
                             INNER JOIN CouponActivity ca WITH(NOLOCK)
                                  ON  ca.id = ec.ActivityID
                             LEFT JOIN HotelDB..Package p WITH(NOLOCK)
                                  ON  p.ID = ca.SourceID
                             LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
                                  ON  h.HotelId = p.HotelID
                             LEFT JOIN productdb..SKU (NOLOCK)
                                  ON  ec.SKUID = SKU.ID
                             LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
                                  ON  ke.SKUID = SKU.ID
                             LEFT JOIN productdb..SKU_ThirdParty kt(NOLOCK)
                                  ON  kt.SKUID = SKU.ID
                             LEFT JOIN Hoteldb..Refund rd  (nolock)
                                  ON  rd.ID = rc.refundid
                      WHERE  (@State = 0 OR rc.[State] = @State)
                             AND (
                                     @PayType = 0
                                     OR (@PayType != 1000 AND opc.CanAutoRefund = 0)
                                     OR (@PayType = 1000 AND opc.CanAutoRefund = 1)
                                 )
                             AND (rc.PhoneNum = @PhoneNum OR @PhoneNum = '')
                             AND (@RefoundCouponIDX = 0 OR @RefoundCouponIDX = IDX)
                      ORDER BY
                             rc.CouponID DESC
                  )t
       )tt
WHERE  temprownumber > @start

      ]]>
    </select>
    <select id="GetRefundCouponsCount">
      <![CDATA[
      SELECT  COUNT(1)
                      FROM   RefundCoupons rc WITH(NOLOCK)
                             INNER JOIN hoteldb.dbo.OrderPaymentCode opc(NOLOCK)
                                  ON  opc.ID = rc.PayType
                             INNER JOIN ExchangeCoupon ec WITH(NOLOCK)
                                  ON  ec.ID = rc.CouponID
                             INNER JOIN CouponActivity ca WITH(NOLOCK)
                                  ON  ca.id = ec.ActivityID
                             LEFT JOIN HotelDB..Package p WITH(NOLOCK)
                                  ON  p.ID = ca.SourceID
                             LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
                                  ON  h.HotelId = p.HotelID
                      WHERE  (@State = 0 OR rc.[State] = @State)
                             AND (
                                     @PayType = 0
                                     OR (@PayType != 1000 AND opc.CanAutoRefund = 0)
                                     OR (@PayType = 1000 AND opc.CanAutoRefund = 1)
                                 )
                             AND(rc.PhoneNum = @PhoneNum OR @PhoneNum = '') 
                             AND (@RefoundCouponIDX = 0 OR @RefoundCouponIDX = IDX )
      
    -- SELECT COUNT(CouponID)
    -- FROM   RefundCoupons rc(NOLOCK)
    -- INNER JOIN hoteldb.dbo.OrderPaymentCode opc(NOLOCK)
    --         ON  rc.PayType = opc.ID
    -- WHERE  (@State = 0 OR [State] = @State)
    -- AND (
    --           @PayType = 0
    --           OR (@PayType != 1000 AND opc.CanAutoRefund = 0)
    --           OR (@PayType = 1000 AND opc.CanAutoRefund = 0)
    --       )   
           ]]>
    </select>
    <select id="GetUsedCouponByOrderID">
      <![CDATA[
   SELECT ec.ID,
       ec.UserID,
       ec.PhoneNum,
       ec.ExchangeNo,
       ec.[Type],
       ec.ActivityType,
       ec.ActivityID,
       ec.[State],
       ec.ExchangeTargetID,
       ec.CreateTime,
       ec.CancelTime,
       ec.ExchangeTime,
       ec.PayID,
       Price = CONVERT(DECIMAL(18, 2), ec.Price),
       ec.Updator,
       ec.UpdateTime,
       ec.AddInfo,
       ec.UpgradeCount,
       ec.hasSendOverTimeMsg,
       ec.hasSendRoomAlertMsg,
       ec.CID,
       ec.SKUID,
       ec.SettlePrice,
       ec.PromotionID,
       ec.HasSettle,
       ec.GroupId,
       ec.SettleTime,
       ec.IsVIPInvatation,
       ec.CustomerType,
       ec.InnerBuyGroup,
       ec.Points,
       ec.OriPrice,
       ec.CashCouponID,
       ec.CashCouponAmount,
       ec.OrderNotice,
       ec.UserUseHousingFundAmount,
       ec.VoucherIDs,
       ec.VoucherAmount,
       ca.SourceID,
       p.Code CouponName,
       h.HotelName ObjectName,
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ca.ReturnPolicy
FROM   [CouponDB]..[ExchangeCoupon] ec
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       INNER JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       INNER JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
WHERE  ec.[ExchangeTargetID] = @orderID
      ]]>
    </select>
    <select id="GetOneExchangeCouponByCouponNo">
      <![CDATA[
     
SELECT 
 ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
  ec.OperationState,
  ec.PhotoUrl,  
  
       ca.SourceID,
       CouponName = ISNULL(ISNULL(p.Code, ca.PackageInfo), ''),
       ObjectName = ISNULL(h.HotelName, ca.pageTitle),
       ObjectID = ISNULL(h.HotelID, 0),
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ISNULL(rc.State, 0) RefundState,
       ca.IsFestivalCanUse,
       ca.IsAllowMultiRoom,
       ca.ExchangeMethod,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.PackageInfo,
       ca.CouponNote 
FROM   [CouponDB]..[ExchangeCoupon] ec  (nolock)
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       LEFT JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
       LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID and rc.refundType=0
WHERE  ec.ExchangeNo = @CouponNo
      ]]>
    </select>
    <select id="GetOneCommOrderEntity">
      <![CDATA[
     SELECT IDX,
       NAME,
       PhoneNum,
       TypeID,
       CustomID,
       Price,
       STATE,
       CreateTime,
       OpNotice,
       RelSettleID,
       Points
FROM   [HotelDB]..[CommOrders] o  (nolock)
WHERE  o.[IDX] = @IDX
      ]]>
    </select>
    <select id="GetCouponActivityBizRelByCouponActivityIdOrBizID">
      <![CDATA[
      SELECT * FROM CouponDB..CouponActivityBizRel cabr  (nolock)
      WHERE (cabr.BizID = @BizID OR @BizID = 0) AND (cabr.CouponActivityId = @CID OR @CID = 0) AND cabr.BizType = @BizType
      ]]>
    </select>
    <select id="GetExchangeCouponEntityByPayID">
      <![CDATA[
      SELECT ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
  StateName = CASE 
              WHEN ec.[State] = 1 THEN '已提交'
              WHEN ec.[State] = 2 THEN '已支付'                                   
              WHEN ec.[State] = 3 THEN '已消费'
              WHEN ec.[State] = 4 THEN '已取消'
              WHEN ec.[State] = 5 THEN '已退款'
              WHEN ec.[State] = 6 THEN '超时支付'
              WHEN ec.[State] = 8 THEN '已过期'
              ELSE '其它'
         END,
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
    ec.FromWeixinUid,
    ec.PhotoUrl,
    ec.CouponOrderID,
  ca.SourceID,
  ca.WeixinAcountId,
  Tags=ISNULL(ca.Tags,''),
    ca.PageTitle,
  p.Code CouponName, h.HotelName ObjectName, ca.ExpireTime ExpireTime,  ca.SupplierId SupplierID,
      ca.NightRoomCount, ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount ,
      ISNULL(ke.ExchangeNoType,0) ExchangeNoType,
      ISNULL(kt.ExchangeTipsName,'') ExchangeTipsName,
      ThirdPartyType=isnull(kt.ThirdPartyType,0),
      ISNULL(gp.State,-1) GroupState,
      IsPackage = ISNULL(k.IsPackage, 0)
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID  and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
      left join ProductDB..SKU k(nolock) on k.ID=ec.SKUID
      left join ProductDB..SKU_Ex ke(nolock) on ke.SKUID = k.ID
      left join ProductDB..SKU_ThirdParty kt(nolock) on kt.SKUID=k.ID
      WHERE ec.[PayID] = @PayID ORDER BY  ec.CreateTime DESC 
      ]]>
    </select>
    <select id="GetExchangeCouponEntityByCID">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount
  
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      WHERE ec.[CID] = @CID
      ]]>
    </select>
    <select id="GetExchangeCouponPageListCount">
      <![CDATA[
      IF @state = 7
       SELECT COUNT(1)
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND (ec.state = 2 or ec.state = 6)
                        AND rc.State >0  
      ELSE IF @state = 5
       SELECT COUNT(1)
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND ec.state = 5
                        AND rc.State >0 
      ELSE
       SELECT COUNT(1)
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND (ec.state = @state or @state = 0)
      ]]>
    </select>
    <select id="GetExchangeCouponPageList">
      <![CDATA[
      IF @state = 7
      SELECT * FROM 
              (SELECT 
              
               ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
  ec.TraveIDs,
  
  SKU.Name SKUName,
  ISNULL(ke.ExchangeNoType,0) ExchangeNoType ,
  ISNULL(kt.ExchangeTipsName,'') ExchangeTipsName ,
  ca.SourceID, p.Code CouponName, h.HotelName ObjectName, 
                      ca.ExpireTime ExpireTime, ca.NightRoomCount, ca.ReturnPolicy, 
                      ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount,
                      ISNULL(gp.State,-1) GroupState,
                      ROW_NUMBER() OVER(ORDER BY ec.id desc) rn,
      IsPackage = ISNULL(SKU.IsPackage, 0)
      
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join ProductDB..SKU (nolock)
                         on SKU.ID= ec.SKUID
      			      LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
      			     	       ON  ke.SKUID = SKU.ID
                  LEFT JOIN productdb..SKU_ThirdParty kt(NOLOCK)
                         ON kt.SKUID = SKU.ID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND (ec.state = 2 or ec.state = 6)
                        AND rc.State >0
              ) ECP
          WHERE ECP.rn > (@pageIndex - 1) * @pageSize AND ECP.rn <= @pageIndex * @pageSize 
          order by  HasSettle asc, UpdateTime desc 
      ELSE IF @state = 5
      SELECT * FROM 
              (SELECT 
              
               ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
  ec.TraveIDs,
  
  SKU.Name SKUName,
  ISNULL(ke.ExchangeNoType,0) ExchangeNoType ,
  ISNULL(kt.ExchangeTipsName,'') ExchangeTipsName ,
  ca.SourceID, p.Code CouponName, h.HotelName ObjectName, 
                      ca.ExpireTime ExpireTime, ca.NightRoomCount, ca.ReturnPolicy, 
                      ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount,
                      ISNULL(gp.State,-1) GroupState,
                      ROW_NUMBER() OVER(ORDER BY ec.id desc) rn,
      IsPackage = ISNULL(SKU.IsPackage, 0)
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join ProductDB..SKU (nolock)
                         on SKU.ID= ec.SKUID
      			      LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
      			     	       ON  ke.SKUID = SKU.ID
                  LEFT JOIN productdb..SKU_ThirdParty kt(NOLOCK)
                         ON kt.SKUID = SKU.ID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND ec.State =5
                        AND rc.State >0
              ) ECP
          WHERE ECP.rn > (@pageIndex - 1) * @pageSize AND ECP.rn <= @pageIndex * @pageSize 
          order by  HasSettle asc, UpdateTime desc 
      ELSE
      SELECT * FROM 
              (SELECT  ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
  ec.TraveIDs,
  
  SKU.Name SKUName,
  ISNULL(ke.ExchangeNoType,0) ExchangeNoType ,
  ISNULL(kt.ExchangeTipsName,'') ExchangeTipsName ,
  ca.SourceID, p.Code CouponName, h.HotelName ObjectName, 
                      ca.ExpireTime ExpireTime, ca.NightRoomCount, ca.ReturnPolicy, 
                      ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount,
                      ISNULL(gp.State,-1) GroupState,
                      ROW_NUMBER() OVER(ORDER BY ec.id desc) rn,
      IsPackage = ISNULL(SKU.IsPackage, 0)
                  FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
                  inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
                  left join ProductDB..SKU (nolock)
                         on SKU.ID= ec.SKUID
      			      LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
      			     	       ON  ke.SKUID = SKU.ID
                  LEFT JOIN productdb..SKU_ThirdParty kt(NOLOCK)
                         ON kt.SKUID = SKU.ID
                  left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
                  left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
                  left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
                  left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
                  left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
                  WHERE ec.[ActivityID] = @ActivityID 
                        AND (ec.state = @state or @state = 0)
                        AND ISNULL(rc.State,0) = 0
              ) ECP
          WHERE ECP.rn > (@pageIndex - 1) * @pageSize AND ECP.rn <= @pageIndex * @pageSize 
         order by  HasSettle asc, UpdateTime desc 
      ]]>
    </select>

    <select id="GetExchangeOrderList">
      <![CDATA[
             /*
 
declare @SKUID INT 
declare @FollowOperation int 
declare @SKUName nvarchar(4000) 
declare @PhoneNum nvarchar(4000)
declare @SupplierName nvarchar(4000) 
declare @pageSize int 
declare @pageIndex int 
declare @ThirdPartyOrderID nvarchar(4000) 
declare @ExchangeNo nvarchar(4000)


set @SKUID=0
set @FollowOperation=0
set @SKUName=N''
set @PhoneNum=N''
set @SupplierName=N''
set @pageSize=50
set @pageIndex=1
set @ThirdPartyOrderID=N''
set @ExchangeNo=N''
     */ 
      


DECLARE @tblEC AS TABLE(ID INT)
IF @FollowOperation = 0
BEGIN
    IF @SKUID = 0
       AND @SKUName = ''
       AND '' = @PhoneNum
       AND '' = @SupplierName
       AND '' = @ThirdPartyOrderID
       AND '' = @ExchangeNo
    BEGIN
        INSERT INTO @tblEC
          (
            ID
          )(
               SELECT ID
               FROM   (
                          SELECT TOP(@pageIndex * @pageSize) ec.ID,
                                 ROW_NUMBER() OVER(ORDER BY ec.id DESC) rn
                          FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                          where State in (2,3,5,8)
                      )ECP
               WHERE  ECP.rn > (@pageIndex - 1) * @pageSize
                      AND ECP.rn <= @pageIndex * @pageSize
           )
    END
    ELSE
    BEGIN
        INSERT INTO @tblEC
          (
            ID
          )(
               SELECT ID
               FROM   (
                          SELECT ec.ID,
                                 ROW_NUMBER() OVER(ORDER BY ec.id DESC) rn
                          FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                                 INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
                                      ON  ca.ID = ec.ActivityID
                                 INNER JOIN ProductDB..SKU (NOLOCK)
                                      ON  SKU.ID = ec.SKUID
                                 LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
                                      ON  ke.SKUID = SKU.ID
                                 INNER JOIN productdb..SPU p(NOLOCK)
                                      ON  p.ID = SKU.SPUID
                                 LEFT JOIN hoteldb..Supplier sp(NOLOCK)
                                      ON  p.SupplierID = sp.ID
                                 LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
                                      ON  rc.CouponID = ec.ID
                                      AND rc.refundType = 0
                                 LEFT JOIN CouponDB..ThirdPartyOrderRel rel(NOLOCK)
                                      ON  ec.id = rel.bizid
                          WHERE  (@SKUID = 0 OR SKU.ID = @SKUID)
                                 AND (@SKUName = '' OR SKU.Name LIKE '%' + @SKUName + '%')
                                 AND ('' = @PhoneNum OR ec.PhoneNum = @PhoneNum)
                                 AND (
                                         '' = @SupplierName
                                         OR sp.Name LIKE '%' + @SupplierName + 
                                            '%'
                                     )
                                 AND (
                                         '' = @ThirdPartyOrderID
                                         OR rel.ThirdOrderID = @ThirdPartyOrderID
                                     )
                                 AND ('' = @ExchangeNo OR ec.ExchangeNo = @ExchangeNo)
                      )ECP
               WHERE  ECP.rn > (@pageIndex - 1) * @pageSize
                      AND ECP.rn <= @pageIndex * @pageSize
           )
    END
END
ELSE
BEGIN
    INSERT INTO @tblEC
      (
        ID
      )(
           SELECT ID
           FROM   (
                      SELECT ec.ID,
                             ROW_NUMBER() OVER(ORDER BY ec.id DESC) rn
                      FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                             INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
                                  ON  ca.ID = ec.ActivityID
                             INNER JOIN ProductDB..SKU (NOLOCK)
                                  ON  SKU.ID = ec.SKUID
                             LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
                                  ON  ke.SKUID = SKU.ID
                             INNER JOIN productdb..SPU p(NOLOCK)
                                  ON  p.ID = SKU.SPUID
                             LEFT JOIN hoteldb..Supplier sp(NOLOCK)
                                  ON  p.SupplierID = sp.ID
                             LEFT JOIN productdb..GroupPurchase gp(NOLOCK)
                                  ON  gp.ID = ec.GroupId
                             LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
                                  ON  rc.CouponID = ec.ID
                                  AND rc.refundType = 0
                             LEFT JOIN CouponDB..ThirdPartyOrderRel rel(NOLOCK)
                                  ON  ec.ID = rel.bizID
                      WHERE  ec.state = 2
                             AND ec.OperationState = @FollowOperation
                             AND (ISNULL(rc.State, 0) = 0 OR ISNULL(rc.State, 0) = 13)
                             AND ISNULL(gp.State, 1) = 1
                             AND (@SKUID = 0 OR SKU.ID = @SKUID)
                             AND (@SKUName = '' OR SKU.Name LIKE '%' + @SKUName + '%')
                             AND ('' = @PhoneNum OR ec.PhoneNum = @PhoneNum)
                             AND (
                                     '' = @SupplierName
                                     OR sp.Name LIKE '%' + @SupplierName + '%'
                                 )
                             AND (
                                     '' = @ThirdPartyOrderID
                                     OR rel.ThirdOrderID = @ThirdPartyOrderID
                                 )
                             AND ('' = @ExchangeNo OR ec.ExchangeNo = @ExchangeNo)
                  )ECP
           WHERE  ECP.rn > (@pageIndex - 1) * @pageSize
                  AND ECP.rn <= @pageIndex * @pageSize
       )
END
 
SELECT ec.ID,
       ec.UserID,
       ec.PhoneNum,
       ec.ExchangeNo,
       ec.[Type],
       ec.ActivityType,
       ec.ActivityID,
       ec.[State],
       ec.ExchangeTargetID,
       ec.CreateTime,
       ec.CancelTime,
       ec.ExchangeTime,
       ec.PayID,
       Price = CONVERT(DECIMAL(18, 2), ec.Price),
       ec.Updator,
       ec.UpdateTime,
       ec.AddInfo,
       ec.UpgradeCount,
       ec.hasSendOverTimeMsg,
       ec.hasSendRoomAlertMsg,
       ec.CID,
       ec.SKUID,
       ec.SettlePrice,
       ec.PromotionID,
       ec.HasSettle,
       ec.GroupId,
       ec.SettleTime,
       ec.IsVIPInvatation,
       ec.CustomerType,
       ec.InnerBuyGroup,
       ec.Points,
       ec.OriPrice,
       ec.CashCouponID,
       ec.CashCouponAmount,
       ec.OrderNotice,
       ec.UserUseHousingFundAmount,
       ec.VoucherIDs,
       ec.VoucherAmount,
       ec.OperationState,
       ec.PhotoUrl,
       ec.TraveIDs,
       SKU.Name SKUName,
       IsPackage = ISNULL(SKU.IsPackage, 0),
       ca.SourceID,
       p.Code CouponName,
       h.HotelName ObjectName,
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ca.ReturnPolicy,
       ISNULL(rc.State, 0) RefundState,
       ISNULL(op.PayType, 0) PayType,
       op.PayAccount PayAccount,
       ISNULL(gp.State, -1) GroupState,
       ISNULL(bu.TravelIDs, '') TravelIDs,
       ISNULL(bu.Remark, '') Remark,
       --ISNULL(coo.OperationState, 0) OperationState,
       --ISNULL(coo.Remark, '') OperationRemark,
       ISNULL(ke.FollowOperation, '') FollowOperation,
       ISNULL(ca.PageTitle, '')pageTitle,
       ISNULL(ke.ShowKeFuOperation, '') ShowKeFuOperation,
       ISNULL(ke.ExchangeNoType, '') ExchangeNoType,
       ISNULL(kt.ExchangeTipsName, '') ExchangeTipsName,
       ROW_NUMBER() OVER(ORDER BY ec.id DESC) rn,
       ThirdPartyType = ISNULL(kt.ThirdPartyType, 0),
       ThirdPartySourceID = ISNULL(kt.ThirdPartySourceID, 0),
       ThirdPartyOrderID = ISNULL(tp.ThirdOrderID, ''),
       ThirdPartyState = ISNULL(tp.State, -100),
       ThirdPartyBookDate = ISNULL(tp.VisitDate, '1900/1/1'),
       OperationRemark = ISNULL(ec.OperationRemark, '')
FROM   @tblEC tec
       INNER JOIN [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
            ON  ec.ID = tec.ID
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       INNER JOIN ProductDB..SKU (NOLOCK)
            ON  SKU.ID = ec.SKUID
       LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
            ON  ke.SKUID = SKU.ID
       LEFT JOIN productdb..SKU_ThirdParty kt(NOLOCK)
            ON  kt.SKUID = SKU.ID
       LEFT JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
       LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID
            AND rc.refundType = 0
       LEFT JOIN HotelDB..[OrderPayment] op WITH(NOLOCK)
            ON  op.PayOrderID = ec.PayID
       LEFT JOIN productdb..GroupPurchase gp(NOLOCK)
            ON  ec.GroupId = gp.ID
       LEFT JOIN ProductDB..BookUserDateInfo bu(NOLOCK)
            ON  bu.ExchangCouponId = ec.ID
            AND bu.State = 0
                --LEFT JOIN [CouponDB]..CouponOrderOperation coo(NOLOCK)
                --     ON  coo.ExchangeID = ec.ID
                
       LEFT JOIN [CouponDB]..ThirdPartyOrderRel tp(NOLOCK)
            ON  tp.BizID = ec.ID
ORDER BY
       HasSettle ASC,
       ec.UpdateTime DESC    
      ]]>
    </select>

    <select id="GetExchangeOrderListCount">
      <![CDATA[
       DECLARE @tblEC AS TABLE(ID INT)
      IF @FollowOperation = 0
       BEGIN
          INSERT INTO @tblEC
                      (
                        ID
                      )
         (
            SELECT ec.ID
      		  FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
      			INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
      				 ON  ca.ID = ec.ActivityID
      			INNER JOIN ProductDB..SKU (NOLOCK)
      				 ON  SKU.ID = ec.SKUID
      			INNER JOIN productdb..SKU_Ex ke(NOLOCK)
      				 ON  ke.SKUID = SKU.ID
      		  INNER JOIN productdb..SPU p(NOLOCK)
      		       ON  p.ID = SKU.SPUID
      		  LEFT JOIN hoteldb..Supplier sp(NOLOCK)
      		       ON  p.SupplierID = sp.ID
      			LEFT JOIN CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
            LEFT JOIN CouponDB..ThirdPartyOrderRel rel(nolock) on ec.ID=rel.bizID
      		    WHERE  (@SKUID = 0 OR SKU.ID = @SKUID)
      			        AND (@SKUName = '' OR SKU.Name LIKE '%' + @SKUName + '%')
      			        AND ('' = @PhoneNum OR ec.PhoneNum = @PhoneNum)
      						  AND ('' = @SupplierName OR sp.Name LIKE '%'+ @SupplierName +'%')  
                    AND ('' =@ThirdPartyOrderID OR rel.ThirdOrderID=@ThirdPartyOrderID)
                    AND ('' =@ExchangeNo OR ec.ExchangeNo = @ExchangeNo)
      	)
       END
      ELSE
       BEGIN
       	 INSERT INTO @tblEC
                      (
                        ID
                      )
             (
      				 SELECT ec.ID
      				 FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
      			 	 INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
      				 	 ON  ca.ID = ec.ActivityID
      				 INNER JOIN ProductDB..SKU (NOLOCK)
      				 	 ON  SKU.ID = ec.SKUID
      				 INNER JOIN productdb..SKU_Ex ke(NOLOCK)
      				 	 ON  ke.SKUID = SKU.ID
      				 INNER JOIN productdb..SPU p(NOLOCK)
      				      ON  p.ID = SKU.SPUID
      				 LEFT JOIN hoteldb..Supplier sp(NOLOCK)
      				      ON  p.SupplierID = sp.ID
      				 LEFT JOIN CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
               LEFT JOIN CouponDB..ThirdPartyOrderRel rel(nolock) on ec.ID=rel.bizID
      				 WHERE  ec.state = 2
      						AND ec.OperationState = 1
      						AND (ISNULL(rc.State,0) = 0 or ISNULL(rc.State,0) = 13)
      						AND (@SKUID = 0 OR SKU.ID = @SKUID)
      						AND (@SKUName = '' OR SKU.Name LIKE '%' + @SKUName + '%')
      						AND ('' = @PhoneNum OR ec.PhoneNum = @PhoneNum)  
      						AND ('' = @SupplierName OR sp.Name LIKE '%'+ @SupplierName +'%')  
                  AND ('' =@ThirdPartyOrderID OR rel.ThirdOrderID=@ThirdPartyOrderID)
                  AND ('' =@ExchangeNo OR ec.ExchangeNo = @ExchangeNo)
      		)
       END
      
      SELECT COUNT(1) FROM @tblEC
     
      
      ]]>
    </select>

    <select id="GetCouponOderOperationByCouponId">
      <![CDATA[
       select * from  [CouponDB]..CouponOrderOperation  (nolock) where ExchangeID = @ExchangeID 
      ]]>
    </select>

    <select id="GetExchangeCouponEntityListByActivity">
      <![CDATA[
      SELECT  ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,
  
      ca.SourceID, p.Code CouponName, h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, ca.NightRoomCount, ca.ReturnPolicy, 
      ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount
      FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[ActivityID] = @ActivityID
      ]]>
    </select> 
    <select id="GetExchangeCouponEntityListByActivityIDAndUserID">
      <![CDATA[
      SELECT  ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
  
  ca.SourceID, p.Code CouponName, h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, ca.NightRoomCount, ca.ReturnPolicy, 
      ISNULL(rc.State,0) RefundState, ISNULL(op.PayType,0) PayType, op.PayAccount PayAccount
      FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[ActivityID] = @ActivityID and ec.UserID = @UserID
      ]]>
    </select>
    <select id="GetExchangeCouponList">
      <![CDATA[
      SELECT  ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount
  
      FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
      WHERE ec.[ActivityID] = @activityID
      ]]>
    </select>
    <select id="GetExchangeCouponListByUserSKU">
      <![CDATA[
      SELECT
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
  
  rc.CouponID
      FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
      Left join coupondb..RefundCoupons rc (NOLOCK) on ec.ID = rc.CouponID and rc.refundType=0
      WHERE ec.UserID = @UserID and ec.SKUID = @SKUID and ec.State not in (4,5,6,7) and rc.CouponID is null and ec.PromotionID = @PromotionID
      ]]>
    </select>
    <select id="GetExchangeCouponListByUserCoupon">
      <![CDATA[
      SELECT ec.*,rc.CouponID
      FROM [CouponDB]..[ExchangeCoupon] ec with(nolock)
      Left join coupondb..RefundCoupons rc on ec.ID = rc.CouponID
      WHERE ec.UserID = @UserID and ec.SKUID = @SKUID and ec.State not in (4,5,6,7) and rc.CouponID is null and ec.PromotionID = @PromotionID
      ]]>
    </select>
    
    <select id="GetExchangeCouponListByUserIDAndSKU">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
  
             ISNULL(rc.State, 0) RefundState
      FROM [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
      LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID and rc.refundType=0
      WHERE ec.UserID = @UserID and ec.SKUID = @SKUID 
      ]]>
    </select>
      
    <select id="GetExchangeCouponEntityListByUser">
      <![CDATA[     

SELECT  ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.exchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
	ec.OperationState, 
  ec.PhotoUrl,
  ec.CouponOrderId,
  
       ca.ReturnPolicy,
       ca.SourceID,
       CouponName = ISNULL(p.Code,ca.PackageInfo),
       ObjectName = ISNULL(h.HotelName, ca.pageTitle ),
       ca.ExpireTime ExpireTime,
       ca.NightRoomCount,
       ca.IsAllowMultiRoom,
       ca.ExchangeMethod,
       ISNULL(rc.State, 0) RefundState,
       ISNULL(op.PayType, 0) PayType,
       op.PayAccount PayAccount,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.Notice,
       ca.Properties,
       ca.CouponNote,
       ActivityName=ca.PageTitle,
       RefundTime=rc.CreateTime,
       ChannelName=Convert(varchar,isnull(ci.Name,ec.CID)),
       ISNULL(gp.State,-1) GroupState,
       ISNULL(kt.ExchangeTipsName,'') ExchangeTipsName,
       ISNULL(ke.ExchangeNoType,0) ExchangeNoType,
       ISNULL(ke.ShopWriteOffCouponTip,'') ShopWriteOffCouponTip,
       ISNULL(ke.BookPosition,0) BookPosition,
       
       ISNULL(RelWHSales,'') RelWHSales,
        ThirdPartyType=isnull(kt.ThirdPartyType,0),
        ThirdPartySourceID=isnull(kt.ThirdPartySourceID,0),
        ThirdPartyOrderID=isnull(tp.ThirdOrderID,''),
        SupplierContact=isnull((select (Name+':'+Phone+' ')  from HotelDB..SupplierContact where SupplierID=sp.ID for xml path('') ),''),
       SupplierSettleType = isnull( k.SupplierSettleType,0),
      IsPackage = ISNULL(k.IsPackage, 0)
FROM   [CouponDB]..[ExchangeCoupon] ec  (nolock)
       INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
            ON  ca.ID = ec.ActivityID
       LEFT JOIN HotelDB..Package p WITH(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN HotelDB..Hotel h WITH(NOLOCK)
            ON  h.HotelId = p.HotelID
       LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
            ON  rc.CouponID = ec.ID and rc.refundType=0
       LEFT JOIN HotelDB..[OrderPayment] op WITH(NOLOCK)
            ON  op.PayOrderID = ec.PayID
       left join HotelBizDB..ChannelInfo ci(nolock) on ci.IDX=ec.CID
       left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
       LEFT JOIN productdb..SKU k(NOLOCK) on k.ID = ec.SKUID
       LEFT JOIN productdb..SPU spu(NOLOCK) ON spu.ID = k.SPUID
       LEFT JOIN ProductDB..SKU_Ex ke(NOLOCK) ON ke.SKUID = k.ID
       LEFT JOIN ProductDB..SKU_ThirdParty kt(NOLOCK) ON kt.SKUID=k.ID AND (ke.ExchangeNoType=2 OR ke.ExchangeNoType=3)
         left join [CouponDB]..ThirdPartyOrderRel tp
                  on tp.BizID=ec.ID
       LEFT JOIN hoteldb..Supplier sp(NOLOCK) ON sp.ID=spu.SupplierID
WHERE  ec.[UserID] = @UserID
       AND (@ActivityType = 0 OR ec.[ActivityType] = @ActivityType)
       AND ec.SKUID >-1
    
      ]]>
    </select>

    
    <select id="GetExchangCouponByCategoryId">
      <![CDATA[
      SELECT * FROM 
(
SELECT *,ROW_NUMBER()OVER(order by C.CreateTime desc) rn FROM 
     (
		SELECT A.* FROM 
		( 
            (
				SELECT   ec.ID ,
						 ec.PayID,
						 ISNULL(gp.State,	-1) GroupState,
						 ec.Price,
						 ec.CreateTime,
						 ec.State,
						 StateName =
								CASE
								WHEN ec.[State] = 1 THEN '已提交'
								WHEN ec.[State] = 2 THEN '已支付'
								WHEN ec.[State] = 3 THEN '已消费'
								WHEN ec.[State] = 4 THEN '已取消'
								WHEN ec.[State] = 5 THEN '已退款'
								WHEN ec.[State] = 6 THEN '超时支付'
								WHEN ec.[State] = 8 THEN '已过期'
								ELSE '其它' END, 
						 ec.ExchangeNo,
						 ca.PageTitle, 
						 ca.ExpireTime, 
						 Tags=Isnull(ca.Tags,''), 
						 SKUName=k.Name
						 FROM [CouponDB]..[ExchangeCoupon] ec (nolock)
						 INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
								ON ca.ID = ec.ActivityID
						 LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
								ON rc.CouponID = ec.ID AND rc.refundType=0
						 LEFT JOIN HotelDB..[OrderPayment] op WITH(NOLOCK)
								ON op.PayOrderID = ec.PayID
						 LEFT JOIN productdb..GroupPurchase gp (nolock)
								ON ec.GroupId= gp.ID
						 LEFT JOIN productdb..SKU k(NOLOCK)
								ON k.ID = ec.SKUID
						 LEFT JOIN productdb..SPU spu(NOLOCK)
								ON spu.ID = k.SPUID
						 LEFT JOIN productdb..ProcudtCategory pc(NOLOCK)
								ON pc.ID = spu.ProductCategoryID
						 WHERE ec.[UserID] = @UserID
									AND ec.SKUID >-1
									AND pc.ParentID = @ParentId
									AND ec.State<>40
									AND ec.State<>50 
                  AND (@ID = 0 OR ec.ID = @ID)
			) A
            INNER JOIN 
            (
					SELECT ID, num FROM 
					(
							SELECT ROW_NUMBER()OVER(PARTITION BY ec.PayID
							ORDER BY  ec.CreateTime DESC) num, ec.ID, ec.PayID
							FROM [CouponDB]..[ExchangeCoupon] ec (nolock)
							INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
								ON ca.ID = ec.ActivityID
							LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
								ON rc.CouponID = ec.ID  AND rc.refundType=0
							LEFT JOIN HotelDB..[OrderPayment] op WITH(NOLOCK)
								ON op.PayOrderID = ec.PayID
							LEFT JOIN productdb..GroupPurchase gp (nolock)
								ON ec.GroupId= gp.ID
							LEFT JOIN productdb..SKU k(NOLOCK)
								ON k.ID = ec.SKUID
							LEFT JOIN productdb..SPU spu(NOLOCK)
								ON spu.ID = k.SPUID
							LEFT JOIN productdb..ProcudtCategory pc(NOLOCK)
								ON pc.ID = spu.ProductCategoryID
							WHERE ec.[UserID] = @UserID
									AND ec.SKUID >-1
									AND pc.ParentID = @ParentId
									AND ec.State<>40
									AND ec.State<>50 
                  AND (@ID = 0 OR ec.ID = @ID)
					) D  WHERE D.num=1 
			  ) B ON A.ID=B.ID AND B.num=1
		 ) 
	 ) C 
) T
 WHERE T.rn BETWEEN @start + 1 AND @start + @count ORDER BY  T.CreateTime DESC 
      ]]>
    </select>
    
    <select id="GetRoomCouponDistrictInfoForWxapp">
      <!--SQL语句应放入 CDATA标记中-->
      <![CDATA[   
       select dz.DistrictID,di.Name as DistrictName,PicUrl,InChina 
       from destdb..DistrictZone dz(nolock)    
       inner join fn_Split(@districtIds,',') irh
       on irh.Item = dz.DistrictID  and dz.Type = 1
       inner join destdb..DistrictInfo di(nolock)
       on di.DistrictID= irh.Item   
       inner join destdb..DistrictDirectory dd  (nolock)
       on dd.DistrictID=irh.Item   
      ]]>
    </select>
    <select id="GetRoomCouponDistrictInfoForLatLngWxapp">
      <!--SQL语句应放入 CDATA标记中-->
      <![CDATA[   
       DECLARE @g geography = geography::Point(@lat, @lng, 4326)
       IF @lat > 0 AND @lng > 0 AND @geoScopeType = 3
               BEGIN
                   select dz.DistrictID,di.Name as DistrictName,PicUrl,InChina from destdb..DistrictZone dz(nolock)    
                         inner join fn_Split(@districtIds,',') irh
                                 on irh.Item = dz.DistrictID  and dz.Type = 1
                         inner join destdb..DistrictInfo di(nolock)
                                 on di.DistrictID= irh.Item   
                         inner join destdb..DistrictDirectory dd
                                 on dd.DistrictID=irh.Item   
                   where @g.STDistance(di.geo) <= 300000
               END
       ELSE 
            IF @lat > 0 AND @lng > 0 AND @InChina = 1
            BEGIN
               select dz.DistrictID,di.Name as DistrictName,PicUrl,InChina from destdb..DistrictZone dz(nolock)    
                         inner join fn_Split(@districtIds,',') irh
                                 on irh.Item = dz.DistrictID  and dz.Type = 1
                         inner join destdb..DistrictInfo di(nolock)
                                 on di.DistrictID= irh.Item   
                         inner join destdb..DistrictDirectory dd
                                 on dd.DistrictID=irh.Item   
                   where @g.STDistance(di.geo) >= 300000 and dd.InChina = 1
            END
            ELSE
               BEGIN
                  select dz.DistrictID,di.Name as DistrictName,PicUrl,InChina from destdb..DistrictZone dz(nolock)    
                         inner join fn_Split(@districtIds,',') irh
                                 on irh.Item = dz.DistrictID  and dz.Type = 1
                         inner join destdb..DistrictInfo di(nolock)
                                 on di.DistrictID= irh.Item   
                         inner join destdb..DistrictDirectory dd
                                 on dd.DistrictID=irh.Item   
                   where dd.InChina = @InChina
               END
             
      ]]>
    </select>
    
    <select id="GetExchangeCouponEntityListByIDList">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
	ec.OperationState, 
  ec.PhotoUrl,
	ec.OperationRemark, 
  ec.supplierID,
  
		  ca.SourceID, 
		  p.Code CouponName, 
		  h.HotelName ObjectName, 
		  ca.ExpireTime ExpireTime, 
		  ca.NightRoomCount, 
		  ca.IsAllowMultiRoom,
		  ca.ExchangeMethod,
		  ISNULL(rc.State,0) RefundState, 
		  ISNULL(op.PayType,0) PayType, 
		  op.PayAccount PayAccount,
       ca.RelPackageAlbumsID,
      --ISNULL(coo.OperationState,0) OperationState,
      --ISNULL(coo.Remark,'') OperationRemark,
      ca.RelProductID,
      ISNULL(SKU.Name,'') SKUName,
      ISNULL(ke.BookPosition,0) BookPosition,
      ThirdPartyType=isnull(sp.ThirdPartyType,0),
      IsPackage = ISNULL(SKU.IsPackage, 0)
    FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
	    inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
	    INNER JOIN dbo.fn_Split( @IDList,',') fs ON fs.Item = ec.id 
	    left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
	    left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
	    left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
	    left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID 
      --left join [CouponDB]..CouponOrderOperation coo(nolock) on coo.ExchangeID = ec.ID
      left join ProductDB..SKU (nolock) on SKU.ID= ec.SKUID
      left join productdb..SKU_Ex ke(nolock)on SKU.ID = ke.SKUID
      left join ProductDB..SKU_ThirdParty sp (nolock) on sp.SKUID= ec.SKUID
      ]]>
    </select>
    
    <select id="GetExchangeCouponEntityListByPhone">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
      ca.SourceID, 
      p.Code CouponName, 
      h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, 
      ca.NightRoomCount,
      ca.ExchangeMethod,
      ca.IsAllowMultiRoom,
      ISNULL(rc.State,0) RefundState, 
      ISNULL(op.PayType,0) PayType, 
      op.PayAccount PayAccount ,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.SupplierID
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[PhoneNum] = @PhoneNum AND (@ActivityType = 0 OR ec.[ActivityType] = @ActivityType)
      ]]>
    </select>

    <select id="GetExchangeCouponEntityListByGroupId">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
      ca.SourceID, 
      p.Code CouponName, 
      h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, 
      ca.NightRoomCount,
      ca.ExchangeMethod,
      ca.IsAllowMultiRoom,
      ca.WeixinAcountId,
      ISNULL(rc.State,0) RefundState, 
      ISNULL(op.PayType,0) PayType, 
      op.PayAccount PayAccount ,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.PageTitle
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[GroupID] = @GroupId AND (@ActivityType = 0 OR ec.[ActivityType] = @ActivityType)
      ]]>
    </select>
    <select id="GetExchangeCouponEntityListBySKUID">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
      ca.SourceID, 
      p.Code CouponName, 
      h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, 
      ca.NightRoomCount,
      ca.ExchangeMethod,
      ca.IsAllowMultiRoom,
      ISNULL(rc.State,0) RefundState, 
      ISNULL(op.PayType,0) PayType, 
      op.PayAccount PayAccount ,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.PageTitle
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      inner join ProductDB..BookUserDateInfo bdi(nolock)
              on bdi.ExchangCouponId=ec.ID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[SKUID] = @SKUID  AND (ec.State = @State OR 0 = @State) AND bdi.State = 0
      ]]>
    </select>

    <select id="GetExchangeCouponEntityListNoJoinBookBySKUID">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount,  
      ca.SourceID, 
      p.Code CouponName, 
      h.HotelName ObjectName, 
      ca.ExpireTime ExpireTime, 
      ca.NightRoomCount,
      ca.ExchangeMethod,
      ca.IsAllowMultiRoom,
      ISNULL(rc.State,0) RefundState, 
      ISNULL(op.PayType,0) PayType, 
      op.PayAccount PayAccount ,
       ca.RelPackageAlbumsID,
       ca.RelProductID,
       ca.PageTitle
      FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
      inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
      left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
      left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
      left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
      left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID
      WHERE ec.[SKUID] = @SKUID  AND (ec.State = @State OR 0 = @State)
      ]]>
    </select>
    <select id="GetTodayCouponActivity">
      <![CDATA[
      SELECT Top 1 sa.* FROM [CouponDB]..[CouponActivity] sa with(nolock)
      WHERE sa.State = 1 AND convert(date,sa.EffectiveTime) = convert(date,GETDATE())
      ]]>
    </select>


    <select id="GetToDayCouponActivityAndSKU">
      <![CDATA[
      SELECT Top 1 ISNULL(TagID,0) TagID,sa.* FROM [CouponDB]..[CouponActivity] sa with(nolock)
           LEFT JOIN CouponDB.dbo.CouponActivitySKURel rel with(nolock)
                  ON sa.ID=rel.CouponActivityID
           LEFT JOIN ProductDB..TagObjRel toj(nolock)
                  ON toj.ObjID=rel.SKUID and toj.ObjType=1 and toj.TagID=1
      WHERE sa.State = 1 AND convert(date,sa.EffectiveTime) = convert(date,GETDATE())
      ]]>
    </select>

    <select id="GetOneCouponActivityAndSKUWithLock">
      <![CDATA[
       SELECT SKUSortNo = isnull(SKU.SortNo,0),ISNULL(TagID,0) TagID,PackageCode = isnull(p.Code,''),sa.* 
      FROM [CouponDB]..[CouponActivity] sa with(nolock)
           LEFT JOIN hoteldb..Package p(NOLOCK) 
                   ON p.ID=sa.SourceID
           LEFT JOIN CouponDB.dbo.CouponActivitySKURel rel with(nolock)
                   ON sa.ID=rel.CouponActivityID
           LEFT JOIN ProductDB..TagObjRel toj(nolock)
                  ON toj.ObjID=rel.SKUID and toj.ObjType=1 and toj.TagID=1
           LEFT JOIN ProductDB..SKU (nolock)
                  ON SKU.ID=rel.SKUID
      WHERE sa.ID = @id
      ]]>
    </select>
    <select id="GetOneCouponActivityAndSKUWithNoLock">
      <![CDATA[
      SELECT ISNULL(TagID,0) TagID,p.Code PackageCode,sa.* 
      FROM [CouponDB]..[CouponActivity] sa   (nolock)
           LEFT JOIN hoteldb..Package p 
                   ON p.ID=sa.SourceID
           LEFT JOIN CouponDB.dbo.CouponActivitySKURel rel 
                  ON sa.ID=rel.CouponActivityID
           LEFT JOIN ProductDB..TagObjRel 
                  ON toj.ObjID=rel.SKUID and toj.ObjType=1 and toj.TagID=1
      WHERE sa.ID = @id
      ]]>
    </select>
    
    <select id="GetOneCouponActivityWithNoLock">
      <![CDATA[
      SELECT sa.* FROM [CouponDB]..[CouponActivity] sa with(nolock)
      WHERE sa.ID = @id
      ]]>
    </select>
    <select id="GetOneCouponActivityWithLock">
      <![CDATA[
      SELECT sa.* FROM [CouponDB]..[CouponActivity] sa  (nolock)
      WHERE sa.ID = @id
      ]]>
    </select>
    <select id="GetOneCouponActivityByIdAndType">
      <![CDATA[
      SELECT sa.* FROM [CouponDB]..[CouponActivity] sa  (nolock)
      WHERE sa.ID = @id AND type = @type
      ]]>
    </select>
    <select id="GetActivityLockedCount">
      <![CDATA[
    select lockedCount = COUNT(1)
 from ExchangeCoupon (nolock)
where ActivityID = @ActivityID and State between 1 and 3
      ]]>
    </select>
    <select id="GetCouponActivityByBizIdAndBizType">
      <![CDATA[
      SELECT ca.* FROM [CouponDB]..[CouponActivity] ca(nolock)
      INNER JOIN CouponActivityBizRel cbr(nolock)
              ON cbr.CouponActivityId=ca.ID
      WHERE cbr.BizID = @BizId AND cbr.BizType = @BizType
       order by ca.ID desc
      ]]>
    </select>
    <select id="GetCouponActivityList">
      <![CDATA[     
     ;
with  CAList 
AS (
  
  SELECT top(@count) * 
  From
        (SELECT sa.*,NoExchangeCount = (select COUNT(1) from [CouponDB]..[ExchangeCoupon] ec with(nolock) where ec.ActivityID=sa.ID and ec.State=2)
        , ROW_NUMBER() over(order by sa.ID desc) rowNo  
        FROM 
        [CouponDB]..[CouponActivity] sa with(nolock)
        inner join fn_split(@stateItems,',') fs on fs.Item = sa.State
        inner join fn_split(@activityTypeItems,',') fs2 on fs2.Item = sa.Type
        where sa.UpdateTime >= @lastEditTime AND (sa.MerchantCode = @merchantCode OR @merchantCode = 'all') AND (sa.GroupNo = @GroupNo OR @GroupNo = 0)
        )temp
      where temp.rowNo > @start )
      
   select cl.*, ZeroPriceCount = isnull(a.ZeroPriceCount, 0),CancelCount = ISNULL( a.CancelCount,0)
   from CAList cl  (nolock)
   left  join ( 
   select c.ID
   , ZeroPriceCount = SUM ( case when ec.price = 0 and ec.state = 2 then 1 else 0  end ) 
   , CancelCount = SUM( case when ec.price > 0 and ec.state = 5 then 1 else 0 end )
    from  ExchangeCoupon  ec (nolock)
   inner join CAList c on c.ID = ec.ActivityID 
   group by c.ID
   ) a on a.ID = cl.ID 
   order by cl.NoExchangeCount desc ,cl.EffectiveTime desc 
   
      ]]>
    </select>

    <select id="GetCouponActivityBySKUIDSCount">
      <![CDATA[
      SELECT Count(1) FROM 
        [CouponDB]..[CouponActivity] sa with(nolock)
        inner join fn_split(@stateItems,',') fs on fs.Item = sa.State
        inner join fn_split(@activityTypeItems,',') fs2 on fs2.Item = sa.Type
        inner join (SELECT distinct r.CouponActivityID FROM   dbo.CouponActivitySKURel r(NOLOCK)
					                 INNER JOIN fn_Split(@SKUIDS,',') ids
					                         ON ids.Item=r.SKUID
                    ) a
					      on a.CouponActivityID=sa.ID
        where sa.UpdateTime >= @lastEditTime 
      ]]>
    </select>

    <select id="GetCouponActivityBySKUIDSList">
      <![CDATA[     
     ;
with  CAList 
AS (
  
  SELECT top(@count) * 
  From
        (SELECT sa.*,a.Price SKUPrice,a.VIPPrice SKUVIPPrice ,a.TagID ,NoExchangeCount = (select COUNT(1) from [CouponDB]..[ExchangeCoupon] ec with(nolock) where ec.ActivityID=sa.ID and ec.State=2)
        ,ROW_NUMBER() over(order by b.Rank asc) rowNo  ,b.Rank albumsRank 
        FROM 
        [CouponDB]..[CouponActivity] sa with(nolock)
        inner join fn_split(@stateItems,',') fs on fs.Item = sa.State
        inner join fn_split(@activityTypeItems,',') fs2 on fs2.Item = sa.Type
        inner join (SELECT r.CouponActivityID,ISNULL(tor.TagID,0) TagID,SKU.SPUID,SKU.Price ,SKU.VIPPrice   FROM   dbo.CouponActivitySKURel r(NOLOCK)
					                 INNER JOIN fn_Split(@SKUIDS,',') ids
					                         ON ids.Item=r.SKUID
                           INNER JOIN ProductDB..SKU on r.SKUID=SKU.ID
                           LEFT JOIN ProductDB.dbo.TagObjRel tor
                                   ON tor.ObjID =ids.Item AND ObjType = 1 AND TagID = 1
                    ) a
					      on a.CouponActivityID=sa.ID
        inner join (
				                  select pas.Rank,SPUID
				                  from  ProductDB..ProductAlbums pa(nolock)
				                  inner join  ProductDB..ProductAlbumSKU pas(nolock)
						                 on pa.ID=pas.ProductAlbumId
				                  left join  ProductDB..SKU sku(nolock)
						                 on sku.ID=pas.SKUID
				                  inner join  ProductDB..SPU spu(nolock)
						                 on spu.ID = sku.SPUID
				                  where pa.ID = @ProductAlbumID  and pas.State=1
		                )b on a.SPUID=b.SPUID
        where sa.IsValid=1 and sa.State=1 and sa.UpdateTime >= @lastEditTime 
        )temp
      where temp.rowNo > @start )
      
   select cl.*, ZeroPriceCount = isnull(a.ZeroPriceCount, 0),CancelCount = ISNULL( a.CancelCount,0)
   from CAList cl
   left  join ( 
   select c.ID
   , ZeroPriceCount = SUM ( case when ec.price = 0 and ec.state = 2 then 1 else 0  end ) 
   , CancelCount = SUM( case when ec.price > 0 and ec.state = 5 then 1 else 0 end )
    from  ExchangeCoupon  ec (nolock)
   inner join CAList c on c.ID = ec.ActivityID 
   group by c.ID
   ) a on a.ID = cl.ID 
   order by cl.albumsRank asc 
   
      ]]>
    </select>
    
    <select id="MemberCouponActivityList">
      <![CDATA[     
     
     ;
WITH  CAList 
AS (
       SELECT TOP(@count) *
       FROM   (
                  SELECT sa.*,
                         NoExchangeCount = (
                             SELECT COUNT(1)
                             FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                                    LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
                                         ON  rc.CouponID = ec.ID
                                         AND rc.refundType = 0
                             WHERE  ec.ActivityID = sa.ID
                                    AND ec.State = 2
                                    AND rc.IDX IS NULL
                         ),
                         h.HotelName,
                         SupplierNames = ISNULL(
                             (
                                 SELECT TOP 1 s.Name
                                 FROM   CouponActivitySKURel Rel
                                        INNER JOIN ProductDB.dbo.SKU k
                                             ON  rel.SKUID = k.ID
                                        INNER JOIN ProductDB.dbo.SPU p
                                             ON  k.SPUID = p.ID
                                        INNER JOIN HotelDB.dbo.Supplier s
                                             ON  p.SupplierID = s.ID
                                 WHERE  sa.ID = Rel.CouponActivityID
                                 GROUP BY
                                        s.Name
                             ),
                             ''
                         ),
                         ROW_NUMBER() OVER(ORDER BY sa.ID DESC) rowNo
                  FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
                         INNER JOIN fn_split(@stateItems, ',') fs
                              ON  fs.Item = sa.State
                         INNER JOIN fn_split(@activityTypeItems, ',') fs2
                              ON  fs2.Item = sa.Type
                         LEFT JOIN HotelDB..Package p(NOLOCK)
                              ON  p.ID = sa.SourceID
                         LEFT JOIN HotelDB..hotel h(NOLOCK)
                              ON  p.HotelID = h.HotelId
                  WHERE  sa.UpdateTime >= @lastEditTime
                         AND (sa.MerchantCode = @merchantCode OR @merchantCode = 'all')
              )temp
       WHERE  temp.rowNo > @start
              AND (
                      GroupNo = @GroupNo
                      OR '' = @HotelName
                      OR HotelName LIKE '%' + @HotelName + '%'
                      OR PageTitle LIKE '%' + @HotelName + '%'
                      OR SupplierNames LIKE '%' + @HotelName + '%'
                  )
   )
      
SELECT cl.*,
       ZeroPriceCount = ISNULL(a.ZeroPriceCount, 0),
       CancelCount = ISNULL(a.CancelCount, 0),
       SKUNames = ISNULL(
           (
               SELECT k.Name + ','
               FROM   CouponActivitySKURel Rel(NOLOCK)
                      INNER JOIN ProductDB.dbo.SKU k(NOLOCK)
                           ON  rel.SKUID = k.ID
               WHERE  cl.ID = Rel.CouponActivityID FOR XML PATH('')
           ),
           ''
       )
FROM   CAList cl
       LEFT  JOIN (
                SELECT c.ID,
                       ZeroPriceCount = SUM(CASE WHEN ec.price = 0 AND ec.state = 2 THEN 1 ELSE 0 END),
                       CancelCount = SUM(CASE WHEN ec.price > 0 AND ec.state = 5 THEN 1 ELSE 0 END)
                FROM   ExchangeCoupon ec(NOLOCK)
                       INNER JOIN CAList c
                            ON  c.ID = ec.ActivityID
                GROUP BY
                       c.ID
            ) a
            ON  a.ID = cl.ID
ORDER BY
       cl.ID DESC
     
   
      ]]>
    </select>
    
    <select id="MemberCouponActivityListCount">
      <![CDATA[
      SELECT COUNT(1) FROM (
            SELECT * FROM ( SELECT sa.*,
                         h.HotelName,
                         SupplierNames=isnull((select  top 1 s.Name from CouponActivitySKURel Rel inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID inner join ProductDB.dbo.SPU p on k.SPUID=p.ID
                          inner join HotelDB.dbo.Supplier s on p.SupplierID=s.ID
                          where sa.ID=Rel.CouponActivityID
                          group by s.Name
                          ),'')
FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
       INNER JOIN fn_split(@stateItems, ',') fs
            ON  fs.Item = sa.State
       INNER JOIN fn_split(@activityTypeItems, ',') fs2
            ON  fs2.Item = sa.Type
       LEFT JOIN HotelDB..Package p(NOLOCK)
            ON  p.ID = sa.SourceID
       LEFT JOIN HotelDB..hotel h(NOLOCK)
            ON  p.HotelID = h.HotelId
                                    )B
                        WHERE  UpdateTime >= @lastEditTime
                               AND (MerchantCode = @merchantCode OR @merchantCode = 'all')
                               AND ( GroupNo = @GroupNo OR '' = @HotelName OR HotelName LIKE '%' + @HotelName + '%' OR PageTitle LIKE '%' + @HotelName + '%' OR SupplierNames like '%' + @HotelName + '%' )
      )A
      ]]>
    </select>
    
        <select id="MemberRetailCouponActivityListCount">
      <![CDATA[
      SELECT RetailSKUState=rp.State,ISNULL(tor.TagID,0) torTagID,sa.*,rp.Name,rp.No,rp.ID RetailProductID,rp.RANK RetailProductRank,
                               NoExchangeCount = (
      SELECT COUNT(1)
                                   FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                                   WHERE  ec.ActivityID = sa.ID
                                          AND ec.State = 2
                               ),
                               h.HotelName,
                               SPUID = ISNULL((select top 1 SPUID  from CouponActivitySKURel Rel 
                                                inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID
                                                where sa.ID=Rel.CouponActivityID),0),
                               SKUPrices=isnull((select cast(k.VIPPrice as nvarchar(50))+',' from CouponActivitySKURel Rel 
                                                 inner join ProductDB.dbo.SKU k 
                                                         on rel.SKUID=k.ID 
                                                 where sa.ID=Rel.CouponActivityID for xml path('')),''),
                               SKUCommissions=( select cast((case when tor.TagID = 1 then 50 
                                                                  when k.ManualCommission <0 then k.AutoCommission
                                                                  else k.ManualCommission end )  as nvarchar(500))+','  
                                                 from CouponActivitySKURel Rel 
											                           inner JOIN ProductDB.dbo.SKU k 
                                                        ON rel.SKUID=k.ID 
											                           LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
												                                ON tor.ObjID=k.ID AND TagID = 1
											                          where sa.ID=Rel.CouponActivityID  for xml path('')),
                               SKUNames=isnull((select k.Name+',' from CouponActivitySKURel Rel 
                                                inner join ProductDB.dbo.SKU k 
                                                        on rel.SKUID=k.ID 
                                                where sa.ID=Rel.CouponActivityID for xml path('')),''),
                               SupplierNames=isnull((select s.Name from CouponActivitySKURel Rel inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID inner join ProductDB.dbo.SPU p on k.SPUID=p.ID
												                        inner join HotelDB.dbo.Supplier s 
                                                        on p.SupplierID=s.ID
												                        where sa.ID=Rel.CouponActivityID
												                        group by s.Name
												                        ),'')
                                into #Temp
      FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
             INNER JOIN CouponDB..RetailProduct rp(NOLOCK)
                     ON rp.RelBizID = sa.ID
                               LEFT JOIN coupondb..CouponActivitySKURel skurel(nolock) 
                                       ON skurel.CouponActivityID = sa.ID
                               LEFT JOIN productdb..TagObjRel tor (NOLOCK)
                                       ON tor.ObjID= skurel.SKUID
                               --INNER JOIN fn_split(@stateItems, ',') fs
                               --     ON  fs.Item = rp.State
             LEFT JOIN HotelDB..Package p(NOLOCK)
                  ON  p.ID = sa.SourceID
             LEFT JOIN HotelDB..hotel h(NOLOCK)
                  ON  p.HotelID = h.HotelId
      WHERE  sa.UpdateTime >= @lastEditTime
        
         SELECT COUNT(1) FROM
             (
		         SELECT RetailSPUState=ISNULL((            
								       select TOP 1 RetailSKUState   from #Temp D 
								       where D.RetailSKUState =1 and A.SPUID =D.SPUID),0),* 
		         from #Temp A 
		         where A.SupplierNames like '%' + @Search + '%' OR A.SKUNames like '%' + @Search + '%' OR A.PageTitle like '%' + @Search + '%' 
             ) T
             INNER JOIN fn_split(@stateItems, ',') fs
                     ON  fs.Item = T.RetailSPUState 
        WHERE  T.torTagID<>2                       

      drop table #Temp
                  --           SELECT COUNT(1) FROM (  SELECT sa.*,rp.Name,rp.No,rp.ID RetailProductID,rp.RANK RetailProductRank,
                  --             NoExchangeCount = (
                  --                 SELECT COUNT(1)
                  --                 FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                  --                 WHERE  ec.ActivityID = sa.ID
                  --                        AND ec.State = 2
                  --             ),
                  --             h.HotelName,
                  --             SPUID = ISNULL((select top 1 SPUID  from CouponActivitySKURel Rel 
                  --                              inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID
                  --                              where sa.ID=Rel.CouponActivityID),0),
                  --             SKUPrices=isnull((select cast(k.VIPPrice as nvarchar(50))+',' from CouponActivitySKURel Rel 
                  --                               inner join ProductDB.dbo.SKU k 
                  --                                       on rel.SKUID=k.ID 
                  --                               where sa.ID=Rel.CouponActivityID for xml path('')),''),
                  --             SKUCommissions=( select cast((case when tor.TagID = 1 then 50 
                  --                                                when k.ManualCommission <0 then k.AutoCommission
                  --                                                else k.ManualCommission end )  as nvarchar(500))+','  
                  --                               from CouponActivitySKURel Rel 
									--		                           inner JOIN ProductDB.dbo.SKU k 
                  --                                      ON rel.SKUID=k.ID 
									--		                           LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
									--			                                ON tor.ObjID=k.ID AND TagID = 1
									--		                          where sa.ID=Rel.CouponActivityID  for xml path('')),
                  --             SKUNames=isnull((select k.Name+',' from CouponActivitySKURel Rel 
                  --                              inner join ProductDB.dbo.SKU k 
                  --                                      on rel.SKUID=k.ID 
                  --                              where sa.ID=Rel.CouponActivityID for xml path('')),''),
                  --             SupplierNames=isnull((select s.Name from CouponActivitySKURel Rel inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID inner join ProductDB.dbo.SPU p on k.SPUID=p.ID
									--			                        inner join HotelDB.dbo.Supplier s 
                  --                                      on p.SupplierID=s.ID
									--			                        where sa.ID=Rel.CouponActivityID
									--			                        group by s.Name
									--			                        ),''),
                  --             ROW_NUMBER() OVER(ORDER BY rp.rank ASC,sa.CreateTime desc) rowNo
                  --      FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
                  --             INNER JOIN CouponDB..RetailProduct rp(NOLOCK)
                  --                     ON rp.RelBizID = sa.ID
                  --             INNER JOIN fn_split(@stateItems, ',') fs
                  --                  ON  fs.Item = rp.State
                  --             LEFT JOIN HotelDB..Package p(NOLOCK)
                  --                  ON  p.ID = sa.SourceID
                  --             LEFT JOIN HotelDB..hotel h(NOLOCK)
                  --                  ON  p.HotelID = h.HotelId
                  --      --WHERE  sa.UpdateTime >= @lastEditTime
                  --  )temp where  temp.SupplierNames like '%' + @Search + '%' OR temp.SKUNames like '%' + @Search + '%' OR temp.PageTitle like '%' + @Search + '%'
      ]]>
    </select>
      
    <select id="MemberRetailCouponActivityList">
      <![CDATA[     
      
      SELECT RetailSKUState=rp.State,ISNULL(tor.TagID,0) torTagID,sa.*,rp.Name,rp.No,rp.ID RetailProductID,rp.RANK RetailProductRank,
                               NoExchangeCount = (
                                   SELECT COUNT(1)
                                   FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
                                   WHERE  ec.ActivityID = sa.ID
                                          AND ec.State = 2
                               ),
                               h.HotelName,
                               SPUID = ISNULL((select top 1 SPUID  from CouponActivitySKURel Rel 
                                                inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID
                                                where sa.ID=Rel.CouponActivityID),0),
                               SKUPrices=isnull((select cast(k.VIPPrice as nvarchar(50))+',' from CouponActivitySKURel Rel 
                                                 inner join ProductDB.dbo.SKU k 
                                                         on rel.SKUID=k.ID 
                                                 where sa.ID=Rel.CouponActivityID for xml path('')),''),
                               SKUCommissions=( select cast((case when tor.TagID = 1 then 50 
                                                                  when k.ManualCommission <0 then k.AutoCommission
                                                                  else k.ManualCommission end )  as nvarchar(500))+','  
                                                 from CouponActivitySKURel Rel 
											                           inner JOIN ProductDB.dbo.SKU k 
                                                        ON rel.SKUID=k.ID 
											                           LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
												                                ON tor.ObjID=k.ID AND TagID = 1
											                          where sa.ID=Rel.CouponActivityID  for xml path('')),
                               SKUNames=isnull((select k.Name+',' from CouponActivitySKURel Rel 
                                                inner join ProductDB.dbo.SKU k 
                                                        on rel.SKUID=k.ID 
                                                where sa.ID=Rel.CouponActivityID for xml path('')),''),
                               SupplierNames=isnull((select s.Name from CouponActivitySKURel Rel inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID inner join ProductDB.dbo.SPU p on k.SPUID=p.ID
												                        inner join HotelDB.dbo.Supplier s 
                                                        on p.SupplierID=s.ID
												                        where sa.ID=Rel.CouponActivityID
												                        group by s.Name
												                        ),'')
                                into #Temp
                        FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
                               INNER JOIN CouponDB..RetailProduct rp(NOLOCK)
                                       ON rp.RelBizID = sa.ID
                               LEFT JOIN coupondb..CouponActivitySKURel skurel(nolock) 
                                       ON skurel.CouponActivityID = sa.ID
                               LEFT JOIN productdb..TagObjRel tor (NOLOCK)
                                       ON tor.ObjID= skurel.SKUID
                               --INNER JOIN fn_split(@stateItems, ',') fs
                               --     ON  fs.Item = rp.State
                               LEFT JOIN HotelDB..Package p(NOLOCK)
                                    ON  p.ID = sa.SourceID
                               LEFT JOIN HotelDB..hotel h(NOLOCK)
                                    ON  p.HotelID = h.HotelId
                        WHERE  sa.UpdateTime >= @lastEditTime
        
       SELECT TOP(@count) * FROM(
         SELECT *,  ROW_NUMBER() OVER(ORDER BY  CreateTime desc) rowNo FROM
             (
		         SELECT RetailSPUState=ISNULL((            
								       select TOP 1 RetailSKUState   from #Temp D 
								       where D.RetailSKUState =1 and A.SPUID =D.SPUID),0),* 
		         from #Temp A 
		         where A.SupplierNames like '%' + @Search + '%' OR A.SKUNames like '%' + @Search + '%' OR A.PageTitle like '%' + @Search + '%' 
             ) T
             INNER JOIN fn_split(@stateItems, ',') fs
                     ON  fs.Item = T.RetailSPUState 
         ) B
        WHERE   B.rowNo > @start   and B.torTagID<>2                       

      drop table #Temp
      
      --SELECT TOP(@count) *
      --       FROM   (
      --                 SELECT * FROM (  SELECT sa.*,rp.Name,rp.No,rp.ID RetailProductID,rp.RANK RetailProductRank,
      --                         NoExchangeCount = (
      --                             SELECT COUNT(1)
      --                             FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
      --                             WHERE  ec.ActivityID = sa.ID
      --                                    AND ec.State = 2
      --                         ),
      --                         h.HotelName,
      --                         SPUID = ISNULL((select top 1 SPUID  from CouponActivitySKURel Rel 
      --                                          inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID
      --                                          where sa.ID=Rel.CouponActivityID),0),
      --                         SKUPrices=isnull((select cast(k.VIPPrice as nvarchar(50))+',' from CouponActivitySKURel Rel 
      --                                           inner join ProductDB.dbo.SKU k 
      --                                                   on rel.SKUID=k.ID 
      --                                           where sa.ID=Rel.CouponActivityID for xml path('')),''),
      --                         SKUCommissions=( select cast((case when tor.TagID = 1 then 50 
      --                                                            when k.ManualCommission <0 then k.AutoCommission
      --                                                            else k.ManualCommission end )  as nvarchar(500))+','  
      --                                           from CouponActivitySKURel Rel 
			--								                           inner JOIN ProductDB.dbo.SKU k 
      --                                                  ON rel.SKUID=k.ID 
			--								                           LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
			--									                                ON tor.ObjID=k.ID AND TagID = 1
			--								                          where sa.ID=Rel.CouponActivityID  for xml path('')),
      --                         SKUNames=isnull((select k.Name+',' from CouponActivitySKURel Rel 
      --                                          inner join ProductDB.dbo.SKU k 
      --                                                  on rel.SKUID=k.ID 
      --                                          where sa.ID=Rel.CouponActivityID for xml path('')),''),
      --                         SupplierNames=isnull((select s.Name from CouponActivitySKURel Rel inner join ProductDB.dbo.SKU k on rel.SKUID=k.ID inner join ProductDB.dbo.SPU p on k.SPUID=p.ID
			--									                        inner join HotelDB.dbo.Supplier s 
      --                                                  on p.SupplierID=s.ID
			--									                        where sa.ID=Rel.CouponActivityID
			--									                        group by s.Name
			--									                        ),''),
      --                         ROW_NUMBER() OVER(ORDER BY rp.rank ASC,sa.CreateTime desc) rowNo
      --                  FROM   [CouponDB]..[CouponActivity] sa WITH(NOLOCK)
      --                         INNER JOIN CouponDB..RetailProduct rp(NOLOCK)
      --                                 ON rp.RelBizID = sa.ID
      --                         INNER JOIN fn_split(@stateItems, ',') fs
      --                              ON  fs.Item = rp.State
      --                         LEFT JOIN HotelDB..Package p(NOLOCK)
      --                              ON  p.ID = sa.SourceID
      --                         LEFT JOIN HotelDB..hotel h(NOLOCK)
      --                              ON  p.HotelID = h.HotelId
      --                  WHERE  sa.UpdateTime >= @lastEditTime
      --              )temp where temp.SupplierNames like '%' + @Search + '%' OR temp.SKUNames like '%' + @Search + '%' OR temp.PageTitle like '%' + @Search + '%'
      --              )A
      --       WHERE  A.rowNo > @start
     
      ]]>
    </select>
    
    <select id="GetCouponActivityCount">
      <![CDATA[
      SELECT Count(1) FROM 
        [CouponDB]..[CouponActivity] sa with(nolock)
        inner join fn_split(@stateItems,',') fs on fs.Item = sa.State
        inner join fn_split(@activityTypeItems,',') fs2 on fs2.Item = sa.Type
      where sa.UpdateTime >= @lastEditTime AND (sa.MerchantCode = @merchantCode OR @merchantCode = 'all')
        AND (sa.GroupNo = @GroupNo OR 0 = @GroupNo)
      ]]>
    </select>
    <select id="GetInspectorRewardByUserId">
      <![CDATA[
      SELECT ir.*,od.Amount as Amount,od.State as OrderState,od.SubmitDate as SubmitDate,ht.HotelName as HotelName 
      FROM InspectorReward ir
      inner join HotelDB..Orders od on od.OrderID = ir.OrderId
      inner join HotelDB..Hotel ht on ht.HotelId = od.HotelID
      WHERE ir.Inspector = @userid ORDER BY od.ID desc
       ]]>
    </select>
    <select id="GetUnexpiredCouponList">
      <![CDATA[
      SELECT * FROM AcquiredCoupon
      WHERE userId = @userId AND (cast(nullif(expiredTime,'1900-01-01 00:00:00.000') as datetime) is NULL OR expiredTime > GETDATE()) 
      ORDER BY ID asc
      ]]>
    </select>
    <select id="GetExpiredCouponList">
      <![CDATA[
      SELECT * FROM AcquiredCoupon
      WHERE  userId = @userId AND (cast(nullif(expiredTime,'1900-01-01 00:00:00.000') as datetime) is NULL OR GETDATE() >= expiredTime)  
      ORDER BY ID asc
      ]]>
    </select>
    <select id="GetUserCouponList">
      <![CDATA[
      SELECT * FROM AcquiredCoupon
      WHERE  userId = @userId ORDER BY ID asc
      ]]>
    </select>
    <select id="GetUserCouponSum">
      <![CDATA[
      SELECT SUM(restMoney) AS count 
      FROM AcquiredCoupon ac with(nolock)
        inner join OriginCoupon oc with(nolock) on ac.originId = oc.ID
      WHERE ac.userId = @userId AND (cast(nullif(ac.expiredTime,'1900-01-01 00:00:00.000') as datetime) is NULL OR ac.expiredTime > GETDATE())
      ]]>
    </select>
    <select id="GetOriginIdByGUID">
      <![CDATA[
      SELECT ID FROM OriginCoupon (nolock)
      WHERE GUID = @guid
      ]]>
    </select>
    <select id="GetOrderRecord">
      <![CDATA[
      SELECT discountMoney FROM UseCouponRecord (nolock)
      WHERE orderId = @orderId
      ]]>
    </select>
    <select id="GetAcquiredCouponList">
      <![CDATA[
      SELECT * FROM AcquiredCoupon  (nolock)
      WHERE originId = @originId
      ]]>
    </select>
    <select id="GetOriginCouponList">
      <![CDATA[
      SELECT * FROM OriginCoupon (nolock)
      WHERE userId = @userId And state != 2 ORDER BY id desc
      ]]>
    </select>
    <select id="GetOriginGUIDByOrderAndTypeId">
      <![CDATA[
      SELECT GUID FROM OriginCoupon (nolock)
      WHERE sourceId = @sourceId And typeId = @typeId
       ]]>
    </select>
    <select id="GetOriginCoupon">
      SELECT * FROM OriginCoupon (nolock)
      WHERE sourceId = @sourceId And typeId = @typeId
    </select>
    <select id="GetAcquiredCouponByPhone">
      SELECT count(ac.ID) FROM AcquiredCoupon ac (nolock)
      inner join OriginCoupon oc on oc.ID = ac.originId
      WHERE ac.phoneNo = @phoneNo And oc.GUID = @guid
    </select>
    <select id="GetAcquiredCouponById">
      SELECT * FROM AcquiredCoupon  (nolock)
      WHERE ID = @id
    </select>
    <select id="GetCashCoupon">
      SELECT * FROM OriginCoupon  (nolock)
      WHERE ID = @id OR GUID = @guid
    </select>
    <select id="GetCouponTypeDefine">
      SELECT * FROM CouponTypeDefine  (nolock)
    </select>
    <select id="GetCouponTypeDefineById">
      SELECT * FROM CouponTypeDefine (nolock)
      WHERE ID = @id
    </select>
    <select id="GetCouponTypeDefineByType">
      SELECT * FROM CouponTypeDefine  (nolock)
      WHERE Type = @Type
    </select>
    <select id="GetCouponTypeDefineByCode">
      SELECT * FROM CouponTypeDefine (nolock)
      WHERE Code = @Code
    </select>
    <select id="GetUserOrgCouponInfoByType">
      SELECT *
      FROM   dbo.OriginCoupon (nolock)
      WHERE  typeId = @TypeID
      AND userId = @UserID
    </select>
    <select id="GetUseCouponRecordByUserID">
      <![CDATA[
        SELECT ucr.*,o.Amount,o.HotelID,h.HotelName as ObjectName
        FROM HotelDB..Orders o (nolock)
        inner join HotelDB..Hotel h  (nolock)on h.HotelId = o.HotelId
        inner join UseCouponRecord ucr  (nolock) on o.OrderID = ucr.orderId
        WHERE o.UserID = @userid AND o.State >= 10 AND ucr.discountMoney > 0
       ]]>
    </select>
    <select id="GetAcquireCouponRecordByUserID">
      <![CDATA[
        SELECT ac.*,ctd.Code as TypeCode,
        oc.sourceId as SourceID,ctd.Title as TypeName
        FROM AcquiredCoupon ac with(nolock)
        inner join OriginCoupon oc with(nolock) on ac.originId = oc.ID
        left join CouponTypeDefine ctd with(nolock) on ctd.Type = oc.typeId
        WHERE ac.userId = @userid AND oc.typeId != 0
       ]]>
    </select>
    <select id="IsVipNoPayReserveUser">
      select
      ec.PhoneNum into #payphones
      from coupondb.dbo.ExchangeCoupon ec with(nolock)
      inner join hoteldb.dbo.OrderPayment op with(nolock) on ec.PayID = op.OrderID
      where ec.ActivityType = 400

      select Count(distinct al.name)
      from commdb.dbo.Actvie_LuckyDraw al  (nolock)
      left join #payphones pp on pp.PhoneNum = al.phone
      --left join AccountDB.dbo.Inspector ip on ip.UserID = CONVERT(bigint, al.Name) and (ip.State = 2 or ip.State = 6)
      --left join hoteldb.dbo.Orders o on o.UserID = CONVERT(bigint, al.Name) and o.State = 12
      where
      al.ActiveCode = 83 and pp.PhoneNum is null --and (ip.State = 2 or ip.State = 6 or o.ID is not null)
      and al.name = @UserId

      --drop table #payphones

    </select>
    
    <select id="GetOriginCouponByUserIdForT8">
      <![CDATA[
        select top 1 * from coupondb.dbo.OriginCoupon oc   (nolock)
        where oc.typeId = 8 and oc.sourceId > 0 and oc.sourceId <> oc.userId and oc.userId = @UserId
       ]]>
    </select>

    <select id="GetVoucherDefineList">
      <![CDATA[
        select * from VoucherDefine vd(nolock) 
        where (IDX = @IDX or 0 = @IDX)
              and (@Name is null or vd.Name like '%' + @Name + '%' )
       ]]>
    </select>

    <select id="GetVoucherChanneList">
      <![CDATA[
        select * from [CouponDB].[dbo].[VoucherChannel] vc(nolock) 
        where (IDX = @IDX or 0 = @IDX)
              and (@Name is null or vc.Name like '%' + @Name + '%' )
              and (DefineID = @DefineID or 0 = @DefineID )
       ]]>
    </select>
    <select id="GetVoucherChanneByCode">
      <![CDATA[
        select * from [CouponDB].[dbo].[VoucherChannel] vc(nolock) 
        where Code = @Code
       ]]>
    </select>


    <select id="GetVoucherItemByVoucherChannelid">
      <![CDATA[
        SELECT v.*,vc.Name,vc.Code FROM VoucherItems v(nolock)
        inner join [VoucherChannel] vc(nolock)
        on v.VoucherChannelID=vc.IDX 
        where vc.IDX = @IDX
       ]]>
    </select>

    <select id="GetUsedCouponProductBySupplierId">
      <![CDATA[
          SELECT TOP (@Count) * FROM 
          (
              SELECT uc.*,sku.Name SkuName,sku.Price,ec.SettlePrice,
              ROW_NUMBER() OVER(ORDER BY uc.CreateTime DESC) rn  FROM CouponDB.dbo.ExchangeCoupon ec(nolock)
          INNER JOIN CouponDB.dbo.UsedConsumerCouponInfo uc(nolock)
                  on ec.ExchangeNo=uc.ExchangeNo
          INNER JOIN ProductDB.dbo.SKU sku (nolock) 
                  on sku.ID=ec.SKUID
          INNER JOIN ProductDB.dbo.SPU spu (nolock) 
                  on sku.SPUID=spu.ID
          WHERE uc.SupplierId = @SupplierId
                AND uc.CreateTime >= @StartTime AND uc.CreateTime <= @EndTime 
           )
          A  WHERE A.rn > @Start     
       ]]>
    </select>

    <select id="GetBookNoUsedExchangeCouponBySupplierId">
      <![CDATA[
          SELECT bud.*,sku.Name SkuName,sku.Price,ec.SettlePrice,ISNULL(bd.NumPlayName,'') NumPlayName FROM CouponDB.dbo.ExchangeCoupon ec(nolock)
          INNER JOIN ProductDB..BookUserDateInfo bud(nolock)
                  on ec.ID=bud.ExchangCouponId
          INNER JOIN ProductDB.dbo.SKU sku (nolock) 
                  on sku.ID=ec.SKUID
          INNER JOIN ProductDB.dbo.SPU spu (nolock) 
                  on sku.SPUID=spu.ID
          LEFT JOIN ProductDB..BookDetail bd(nolock)
                  on bd.ID = bud.BookDetailId
          LEFT JOIN ProductDB..BookDate bdate(nolock)
                  on bdate.ID = bud.BookDateId
          WHERE spu.SupplierId = @SupplierId
                AND bdate.BookDate >= @StartTime AND bdate.BookDate <= @EndTime 
                AND ec.State = @State
                AND bud.State = 0
       ]]>
    </select>
    
    <select id="GetUsedCouponProductByExchangeNo">
      <![CDATA[
          SELECT uc.*  FROM CouponDB..UsedConsumerCouponInfo uc(nolock)
          WHERE uc.ExchangeNo = @ExchangeNo
       ]]>
    </select>

    <select id="GetSKUCouponActivityListBySKUIds">
      <![CDATA[       
select ckr.SKUID,ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,Type,Price,MarketPrice,PicPath,State,EffectiveTime,CreateTime,ExpireTime,SaleEndDate,Rank,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,GroupNo,ExchangeMethod,IsVipExclusive,MoreDetailUrl  
from coupondb..CouponActivitySKURel ckr 
inner join fn_split(@SKUIds,',') fs on fs.Item = ckr.SKUID
left join coupondb..CouponActivity ca on ca.ID = ckr.CouponActivityID
where ca.State = 1
      ]]>
    </select>
    
        <select id="GetCouponActivityListBySKUIds">
      <![CDATA[       
select ckr.SKUID, ca.*
from fn_split(@SKUIds,',') fs 
inner join coupondb..CouponActivitySKURel ckr (nolock) on fs.Item = ckr.SKUID
inner join coupondb..CouponActivity ca  (nolock) on ca.ID = ckr.CouponActivityID 
      ]]>
    </select>

    <select id="GetSKUCouponActivityListByAlbumIdCount">
      <![CDATA[       
          SELECT count(1)
          FROM ProductDB..ProductAlbumSKU pas(nolock)
          INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
                  ON casr.SKUID=pas.SKUID
          INNER JOIN  ProductDB..ProductAlbums pa(nolock)
                  ON pas.ProductAlbumId = pa.id and pa.IsValid = 1
          INNER JOIN CouponDB..CouponActivity ca(nolock) 
                  ON ca.ID=casr.couponActivityID  AND ca.State=1
          INNER JOIN ProductDB..SKU (nolock)
                  ON SKU.ID = pas.SKUID
          INNER JOIN ProductDB..SPU (nolock)
                  ON SPU.ID = SKU.SPUID
          INNER JOIN ProductDB..ProcudtCategory pc(nolock)
                  ON pc.ID = SPU.ProductCategoryID
          LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                 ON tor.ObjID=pas.SKUID and tor.ObjType=1 and tor.TagID=2
          WHERE pas.ProductAlbumId = @AlbumId  and pas.state=1 and Isnull(tor.TagID,0)!=2
           AND ca.SaleEndDate > @SaleEndDate
          AND (SPU.DistrictID = @DistrictID OR @DistrictID = 0) 
          
      ]]>
    </select>
    
    <select id="GetSKUCouponActivityListByAlbumId">
      <![CDATA[       
          SELECT TOP(@count) * FROM  (
                 SELECT pas.SKUID,SKU.Points,SKU.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
                        ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
                        ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,
                        ExchangeMethod,IsVipExclusive,MoreDetailUrl,
                        ROW_NUMBER()over(order by pas.rank,SKU.Points,ca.PageTitle  asc ) rn
                 FROM ProductDB..ProductAlbumSKU pas(nolock)
                 INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
                         ON casr.SKUID=pas.SKUID
                 INNER JOIN  ProductDB..ProductAlbums pa(nolock)
                         ON pas.ProductAlbumId = pa.id and pa.IsValid = 1
                 INNER JOIN CouponDB..CouponActivity ca(nolock) 
                         ON ca.ID=casr.couponActivityID  AND ca.State=1
                 INNER JOIN ProductDB..SKU (nolock)
                         ON SKU.ID = pas.SKUID
                 INNER JOIN ProductDB..SPU (nolock)
                         ON SPU.ID = SKU.SPUID
                 INNER JOIN ProductDB..ProcudtCategory pc(nolock)
                         ON pc.ID = SPU.ProductCategoryID
                 LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                         ON tor.ObjID=pas.SKUID and tor.ObjType=1 and tor.TagID=2
                 WHERE pas.ProductAlbumId = @AlbumId and pas.state=1 and Isnull(tor.TagID,0)!=2
                 and ca.SaleEndDate > @SaleEndDate 
                 AND (SPU.DistrictID = @DistrictID OR @DistrictID = 0) 
          ) A WHERE A.rn > @start
      ]]>
    </select>
    <select id="GetSKUAlbumEntityListByAlbumId">
      <![CDATA[
     
	      select 
			      k.SPUID,
			      k.ID SKUID,
			      k.Name SKUName,
			      k.Price SKUPrice,
			      k.VIPPrice SKUVipPrice,A.*
	      from productdb..sku k(nolock)
	      inner join 
	      (
		      select Top (@count) * from (
			      select *,
			             ROW_NUMBER()over(order by rank asc) rn1 from (
					      select *,ROW_NUMBER() over(partition by spuid order by Rank asc ) rn 
					      from (
							       select pa.ProductAlbumId,isnull( toj.TagID ,0) tagid,SPUID,pa.Rank,ca.CreateTime,
							              ca.PageTitle,
									      ca.Tags,
									      ca.Type,
									      ca.GroupCount,
									      ca.GroupDay GroupTime,
									      ca.PicPath,
									      ca.ExpireTime
							       from productdb..SKU k(nolock)
							       inner join productdb..SPU p(nolock)
						 	 		       on p.ID = k.SPUID
							       inner join productdb..ProcudtCategory pc(nolock)
									       on pc.ID = p.ProductCategoryID
							       inner join productdb..ProductAlbumSKU pa(nolock)
									       on pa.SKUID = k.ID and pa.ProductAlbumId = @AlbumId
							       inner join coupondb..CouponActivitySKURel rel(nolock)
									       on rel.SKUID = k.ID
							       inner join coupondb..CouponActivity ca(nolock)
									       on ca.ID = rel.CouponActivityID
							       left join productdb..TagObjRel toj(nolock)
									       on toj.ObjID = k.ID and toj.TagID = 2
							       where (pc.SPUTempType = 17 or pc.SPUTempType=18) and pa.State = 1
								         and ca.IsValid=1 and ca.State = 1 and ca.SaleEndDate>GETDATE() and ca.EffectiveTime<GETDATE()
						      )D
			        ) B where B.rn = 1 and tagid !=2
		      ) T
		      where T.rn1 > @start
	      )A
			  on k.SPUID = A.SPUID order by A.Rank asc
      ]]>
    </select>

    <select id="GetSKUAlbumEntityListByAlbumIdCount">
      <![CDATA[
      select Count(1) from (
			  select SPUID,tagid,RANK,ROW_NUMBER()over(order by rank asc) rn1 from (
					  select SPUID,Rank,tagid,ROW_NUMBER() over(partition by spuid order by tagid,Rank asc ) rn 
					  from (
							   select isnull( toj.TagID ,0) tagid,SPUID,pa.Rank,ca.CreateTime
							   from productdb..SKU k(nolock)
							   inner join productdb..SPU p(nolock)
						 	 		   on p.ID = k.SPUID
							   inner join productdb..ProcudtCategory pc(nolock)
									   on pc.ID = p.ProductCategoryID
							   inner join productdb..ProductAlbumSKU pa(nolock)
									   on pa.SKUID = k.ID and pa.ProductAlbumId = @AlbumId
							   inner join coupondb..CouponActivitySKURel rel(nolock)
									   on rel.SKUID = k.ID
							   inner join coupondb..CouponActivity ca(nolock)
									   on ca.ID = rel.CouponActivityID
							   left join productdb..TagObjRel toj(nolock)
									   on toj.ObjID = k.ID and toj.TagID = 2
							   where (pc.SPUTempType = 17 or pc.SPUTempType=18) and pa.State = 1
								     and ca.IsValid=1 and ca.State = 1 and ca.SaleEndDate>GETDATE() and ca.EffectiveTime<GETDATE()
						  )D
			   ) B where B.rn = 1 and tagid !=2
		  ) T  
    ]]>
    </select>
      
    <select id="GetProductAlbumSKUBySKUIDAndAlbumId">
      <![CDATA[       
          SELECT COUNT(1) FROM ProductDB..ProductAlbumSKU WHERE SKUID = @SKUID AND ProductAlbumId = @AlbumID
      ]]>
    </select>

    <select id="GetProductAlbumSum">
      <![CDATA[       
            SELECT    convert(decimal(18,2),SUM(SKU.Price)) SUMPrice,
						          convert(decimal(18,2),SUM(SKU.MarketPrice)) SUMMarketPrice,
						          convert(decimal(18,2),SUM(SKU.Points)) SUMPoints,
						          convert(decimal(18,2),SUM(SKU.VIPPrice)) SUMVIPPrice,
						          SUM(1) SUMCount
                 FROM ProductDB..ProductAlbumSKU pas(nolock)
                 INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
                         ON casr.SKUID=pas.SKUID
                 INNER JOIN  ProductDB..ProductAlbums pa(nolock)
                         ON pas.ProductAlbumId = pa.id and pa.IsValid = 1
                 INNER JOIN CouponDB..CouponActivity ca(nolock) 
                         ON ca.ID=casr.couponActivityID  AND ca.State=1
                 INNER JOIN ProductDB..SKU (nolock)
                         ON SKU.ID = pas.SKUID
                 INNER JOIN ProductDB..SPU (nolock)
                         ON SPU.ID = SKU.SPUID
                 INNER JOIN ProductDB..ProcudtCategory pc(nolock)
                         ON pc.ID = SPU.ProductCategoryID
                 LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                         ON tor.ObjID=pas.SKUID and tor.ObjType=1 and tor.TagID=2
                 WHERE pas.ProductAlbumId = @AlbumId and pas.state=1 and Isnull(tor.TagID,0)!=2 and ca.SaleEndDate > GETDATE() 
      ]]>
    </select>


    <select id="GetUserCouponByCategoryParentId">
      <![CDATA[       
       SELECT COUNT(1) FROM coupondb..ExchangeCoupon ex(NOLOCK)
       INNER JOIN productdb..SKU K(NOLOCK)
               ON K.ID = ex.SKUID
       INNER JOIN productdb..SPU P(nolock)
               ON P.ID = K.SPUID
       INNER JOIN productdb..ProcudtCategory PC(NOLOCK)
               ON PC.ID = P.ProductCategoryID
       WHERE ex.UserID = @UserID AND PC.ParentID = @ParentID AND (ex.State = 1 OR ex.State = 2) 
      ]]>
    </select>

    <select id="GetOldVIPSKUCouponActivityListByAlbumId">
      <![CDATA[       
        ;
        with
         novipbuysku as
        (
	        select SKU.*, SPU.ProductCategoryID,pc.PayType,
	                case when pas.SKUID IS NULL then 100    
	                     when pas.SKUID > 0 then 0 end  isalbumsku ,A.rank,tor.* from productdb..SKU
	        inner join 
	              (
			              select SPUID,min(pas.RANK) rank from ProductDB..ProductAlbumSKU pas(nolock)
			              inner join productdb..SKU 
					              on pas.SKUID=SKU.ID
			              INNER JOIN  ProductDB..ProductAlbums pa(nolock)
			                      ON pas.ProductAlbumId = pa.id and pa.IsValid = 1
                    INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
							              ON casr.SKUID=pas.SKUID
			              where  pas.ProductAlbumId = @AlbumId and pas.State=1
			              group by SPUID
	              )A
	               on SKU.SPUID=A.SPUID
          inner join ProductDB..SPU 
	               on SPU.ID = A.SPUID
	        inner join ProductDB..ProcudtCategory pc(nolock)
	               on pc.ID = SPU.ProductCategoryID
          LEFT JOIN  ProductDB..ProductAlbumSKU pas(nolock) 
	               on pas.SKUID = SKU.ID
                 and ProductAlbumId = @AlbumId
	        LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
	        ON tor.ObjID=SKU.ID and tor.ObjType=1 
	        where  ISNULL(tor.TagID,0) <>1 and ISNULL(tor.TagID,0)<>2
          AND (SPU.DistrictID = @DistrictID OR @DistrictID = 0) 
        )
        select *  into #t from
        (
	        select * from ( 
		        select *, 
		        row_number() over(partition by spuid order by isalbumsku,Price ASC) rn 
		        from novipbuysku 
	        ) A where A.rn = 1 
        )B

          SELECT TOP(@count) * FROM  (
                         SELECT pas.ID SKUID,pas.points,pas.MarketPrice SKUMarketPrice,pas.PayType,ca.ID CouponActivityID,ca.PageTitle,ca.Tags,ca.TotalNum,ca.SellNum,ca.SingleBuyNum,
                                ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),ca.PicPath,ca.State,ca.EffectiveTime,ca.CreateTime,ca.ExpireTime,ca.SaleEndDate,
                                ca.Rank,ca.IsShowCountDown,ca.ReturnPolicy,ca.ManuSellNum,ca.NightRoomCount,ca.MinBuyNum,ca.IsFestivalCanUse,ca.GroupNo,
                                ca.ExchangeMethod,ca.IsVipExclusive,ca.MoreDetailUrl,
                                ROW_NUMBER()over(order by pas.rank ,pas.points,ca.PageTitle asc ) rn
                         FROM #t  pas
                         INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
                         on pas.ID=casr.SKUID
                         INNER JOIN CouponDB..CouponActivity ca(nolock) 
                                 ON ca.ID=casr.couponActivityID  AND ca.State=1
                         WHERE  ca.SaleEndDate > @SaleEndDate 
          ) A WHERE A.rn > @start
        drop table #t

      ]]>
    </select>

    <select id="SKUCouponActivityByCategory">
      <![CDATA[      
      DECLARE @lg geography = geography::Point(@locLat, @locLng, 4326)
      DECLARE @g geography = geography::Point(@lat, @lng, 4326)
      IF @lat > 0 AND @lng > 0 AND @geoScopeType = 3
      	BEGIN
      	    IF  @Sort = 1 OR @Sort = 3 OR @Sort = 5
      			  BEGIN
              SELECT TOP (@Count) * FROM
              (
                 SELECT *,
      						     ROW_NUMBER()over(order by  case
                                    --when @Sort = 0 then SKUID
      													    when @Sort = 1 then SellNum 
      													    when @Sort = 3 then SKUVIPPrice
      													    when @Sort = 5 then @lg.STDistance(geo) end  desc ) rn1
                 FROM
      				  (
      					  SELECT k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						     ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						     ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,
      						     ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,di.Name DistrictName,
      						     ROW_NUMBER()over(partition by k.SPUID order by  case
                                    --when @Sort = 0 then k.ID
      													    when @Sort = 1 then ca.SellNum 
      													    when @Sort = 3 then k.VIPPrice
      													    when @Sort = 5 then @lg.STDistance(p.geo) end  desc ) rn
      					  FROM ProductDB..SPU p(NOLOCK)
      					  INNER JOIN ProductDB..SKU k(NOLOCK)
      							  ON p.ID = k.SPUID
      					  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							  ON casr.SKUID=k.ID
      					  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							  ON ca.ID = casr.couponActivityID  AND ca.State=1
      					  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							  ON pc.ID = p.ProductCategoryID
      				    INNER JOIN destdb..DistrictInfo di(nolock) 
      				            ON di.DistrictID = p.DistrictID
      					  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						     ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					  WHERE @g.STDistance(p.geo) <= 300000 
                        AND pc.ParentID = @CategoryParentId 
                        AND Isnull(tor.TagID,0)!=2 
                        AND ca.SaleEndDate > GETDATE() 
                        AND pc.PayType = @PayType
                        AND ca.IsValid= 1
                        AND ca.MerchantCode='zmjd'
      				  ) tab
      				  WHERE tab.rn = 1
              )tab1 
               WHERE tab1.rn1 > @Start
      			  END
      	    ELSE
      			  BEGIN
              SELECT TOP (@Count) * FROM
              (
      				  SELECT *,
      						     ROW_NUMBER()over(order by  case
      													                  when @Sort = 0 then AlbumRank
      							 				                      when @Sort = 2 then SKUVIPPrice
      							 				                      when @Sort = 4 then @lg.STDistance(geo) end  asc ) rn1
                FROM
      				  (
      					  SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						     ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						     ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						     ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,ISNULL(pak.Rank,10000) AlbumRank,
      						     ROW_NUMBER()over(partition by k.SPUID order by  case
      							 				                      when @Sort = 0 then ISNULL(pak.Rank,10000)
      							 				                      when @Sort = 2 then k.VIPPrice
      							 				                      when @Sort = 4 then @lg.STDistance(p.geo) end  asc ) rn
      					  FROM ProductDB..SPU p(NOLOCK)
      					  INNER JOIN ProductDB..SKU k(NOLOCK)
      							  ON p.ID = k.SPUID
      					  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							  ON casr.SKUID=k.ID
      					  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							  ON ca.ID = casr.couponActivityID  AND ca.State=1
      					  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							  ON pc.ID = p.ProductCategoryID
      				    INNER JOIN destdb..DistrictInfo di(nolock) 
      				            ON di.DistrictID = p.DistrictID
                  LEFT JOIN productdb..ProductAlbumSKU pak(nolock)
      				            ON pak.SKUID = k.ID
      					  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						     ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					  WHERE @g.STDistance(p.geo) <= 300000 
                        AND pc.ParentID = @CategoryParentId 
                        AND Isnull(tor.TagID,0)!=2 
                        AND ca.SaleEndDate > GETDATE()
                        AND pc.PayType = @PayType
                        AND ca.IsValid= 1
                        AND ca.MerchantCode='zmjd'
      				  ) tab
      				  WHERE tab.rn = 1
              ) tab1 WHERE tab1.rn1 > @Start
      			  END
      	END       
      ELSE
      	BEGIN
      	    IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 
      			BEGIN
            SELECT TOP (@Count) * FROM
            (
      				SELECT *,
      						   ROW_NUMBER()over(order by  case
                                    --when @Sort = 0 then SKUID
      													    when @Sort = 1 then SellNum 
      													    when @Sort = 3 then SKUVIPPrice
      													    when @Sort = 5 then @lg.STDistance(geo) end  desc ) rn1
              FROM
      				(			
      					SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						   ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						   ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						   ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,
      						   ROW_NUMBER()over(partition by k.SPUID order by  case
                                    --when @Sort = 0 then k.ID
      													    when @Sort = 1 then ca.SellNum 
      													    when @Sort = 3 then k.VIPPrice
      													    when @Sort = 5 then @lg.STDistance(p.geo) end  desc ) rn
      					FROM ProductDB..SPU p(NOLOCK)
      					INNER JOIN ProductDB..SKU k(NOLOCK)
      							ON p.ID = k.SPUID
      					INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							ON casr.SKUID=k.ID
      					INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							ON ca.ID = casr.couponActivityID  AND ca.State=1
      					INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							ON pc.ID = p.ProductCategoryID
      				  INNER JOIN destdb..DistrictInfo di(nolock) 
      				          ON di.DistrictID = p.DistrictID
      					LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						   ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					WHERE (p.DistrictID = @DistrictID OR @DistrictID = 0) 
                      AND pc.ParentID = @CategoryParentId 
                      AND Isnull(tor.TagID,0)!=2 AND ca.SaleEndDate > GETDATE() 
                      AND pc.PayType = @PayType
                      AND ca.IsValid= 1
                      AND ca.MerchantCode='zmjd'
      				) tab
      				WHERE tab.rn = 1
            )tab1 WHERE tab1.rn1 > @Start
      			END
      	    ELSE
      			BEGIN
            SELECT TOP (@Count) * FROM
            (
      				SELECT *,
      						   ROW_NUMBER()over(order by  case
      													                when @Sort = 0 then AlbumRank
      													                when @Sort = 2 then SKUVIPPrice
      													                when @Sort = 4 then @lg.STDistance(geo) end  asc ) rn1
              FROM
      				(
      					SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						   ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						   ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						   ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,ISNULL(pak.Rank,10000) AlbumRank,
      						   ROW_NUMBER()over(partition by k.SPUID order by  case
      													                when @Sort = 0 then ISNULL(pak.Rank,10000)
      													                when @Sort = 2 then k.VIPPrice
      													                when @Sort = 4 then @lg.STDistance(p.geo) end  asc ) rn
      					FROM ProductDB..SPU p(NOLOCK)
      					INNER JOIN ProductDB..SKU k(NOLOCK)
      							ON p.ID = k.SPUID
      					INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							ON casr.SKUID=k.ID
      					INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							ON ca.ID = casr.couponActivityID  AND ca.State=1
      					INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							ON pc.ID = p.ProductCategoryID
      				  INNER JOIN destdb..DistrictInfo di(nolock) 
      				          ON di.DistrictID = p.DistrictID
                LEFT JOIN productdb..ProductAlbumSKU pak(nolock)
      				         ON pak.SKUID = k.ID
      					LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						   ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					WHERE (p.DistrictID = @DistrictID OR @DistrictID = 0) 
                      AND pc.ParentID = @CategoryParentId 
                      AND Isnull(tor.TagID,0)!=2 
                      AND ca.SaleEndDate > GETDATE() 
                      AND pc.PayType = @PayType
                      AND ca.IsValid= 1
                      AND ca.MerchantCode='zmjd'
      				) tab
      				WHERE tab.rn = 1
            ) tab1 WHERE tab1.rn1 > @Start
      			END			
      	END
      ]]>
    </select>


    <select id="SKUCouponActivityByCategoryCount">
      <![CDATA[      
      DECLARE @g geography = geography::Point(@lat, @lng, 4326)
      IF @lat > 0 AND @lng > 0 AND @geoScopeType = 3
      	BEGIN
            SELECT COUNT(1) FROM
      	    (
      	      SELECT k.SPUID
      			  FROM ProductDB..SPU p(NOLOCK)
      			  INNER JOIN ProductDB..SKU k(NOLOCK)
      				    ON p.ID = k.SPUID
      			  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      				    ON casr.SKUID=k.ID
      			  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      				    ON ca.ID = casr.couponActivityID  AND ca.State=1
      			  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      				    ON pc.ID = p.ProductCategoryID
      			  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      			       ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      			  WHERE @g.STDistance(p.geo) <= 300000 AND pc.ParentID = @CategoryParentId AND Isnull(tor.TagID,0)!=2 AND ca.SaleEndDate > GETDATE() 
                    AND pc.PayType = @PayType
                    AND ca.IsValid= 1
                    AND ca.MerchantCode='zmjd'
              GROUP BY k.SPUID
              ) tab
      	END       
      ELSE
      	BEGIN
            SELECT COUNT(1) FROM
      	    (
      	      SELECT k.SPUID
      			  FROM ProductDB..SPU p(NOLOCK)
      			  INNER JOIN ProductDB..SKU k(NOLOCK)
      					  ON p.ID = k.SPUID
      			  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      					  ON casr.SKUID=k.ID
      			  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      					  ON ca.ID = casr.couponActivityID  AND ca.State=1
      			  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      					  ON pc.ID = p.ProductCategoryID
      			  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      				     ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      			  WHERE  (p.DistrictID = @DistrictID OR @DistrictID = 0) AND pc.ParentID = @CategoryParentId AND Isnull(tor.TagID,0)!=2 AND ca.SaleEndDate > GETDATE() 
                    AND pc.PayType = @PayType
                    AND ca.IsValid= 1
                    AND ca.MerchantCode='zmjd'
              GROUP BY k.SPUID
            )tab
      	END
      ]]>
    </select>

    <select id="GetExchangeListByNO">
      <![CDATA[       
         select * from ExchangeCoupon A inner join fn_Split(@codes,',') B
					on a.ExchangeNo=b.Item 
      ]]>
    </select>
      <select id="GetExchangeListByNOHadSettle">
      <![CDATA[       
         select * from ExchangeCoupon A inner join fn_Split(@codes,',') B
					on a.ExchangeNo=b.Item where [state]=3 and HasSettle=1
      ]]>
    </select>
      <select id="GetExchangeListByNONotReady">
      <![CDATA[       
         select * from ExchangeCoupon A inner join fn_Split(@codes,',') B
					on a.ExchangeNo=b.Item where [state]=3
      ]]>
    </select>
    <select id="GetExchangeCheckByNO">
      <![CDATA[       
         select p.Name as SPUName,k.Name as SKUName,p.ID as SPUID,s.Name as SupplierName,COUNT(e.ID) as CouponCount,sum(k.PayForSupplier) as SupplierAmount from Coupondb.dbo.ExchangeCoupon E
   inner join ProductDB.dbo.SKU K
   on e.SKUID=K.ID
   inner join ProductDB.DBO.SPU p
   ON K.SPUID=P.ID
   inner join HotelDB.dbo.Supplier S
   on p.SupplierID=s.ID
   inner join fn_Split(@codes,',') B
   on b.Item=e.ExchangeNo
   where e.State=3
   group by p.Name,k.Name,p.id,s.Name
  
      ]]>
    </select>
    <select id="GetExchangeCouponSettleListCount">
      <![CDATA[       
           select count(1)from
  (select A.*
  from ExchangeCoupon A
   inner join CouponActivity ca
  on a.ActivityID=ca.ID
   inner join UsedConsumerCouponInfo uc
   on a.ExchangeNo=uc.ExchangeNo
    inner join HotelDB..[OrderPayment] op with(nolock)
   on op.PayOrderID = A.PayID
   left join HotelBizDB.dbo.BusinessOperator hb
   on uc.OperatorId=hb.ID
         where ActivityType=600
          and ((ca.ID=@aid) or (@aid=0))
         and ((HasSettle=@state) or (@state=2))
         and uc.CreateTime between @startdate and @enddate
        )B
      ]]>
    </select>
    <select id="GetExchangeCouponSettleList">
      <![CDATA[       
            select * from(
     select ROW_NUMBER() OVER(ORDER BY a.HasSettle asc,a.createtime desc) as row,A.*
    ,isnull(op.PayType,0) as PayType
  ,isnull(op.PayAccount,'') as PayAccount
  ,uc.CreateTime as ExchangeUseTime 
  ,isnull(hb.OperatorName,'')  as OperatorName
  from ExchangeCoupon A
  inner join CouponActivity ca
  on a.ActivityID=ca.ID
   inner join UsedConsumerCouponInfo uc
   on a.ExchangeNo=uc.ExchangeNo
    inner join HotelDB..[OrderPayment] op with(nolock)
   on op.PayOrderID = A.PayID
   left join HotelBizDB.dbo.BusinessOperator hb
   on uc.OperatorId=hb.ID
         where ActivityType=600
         and ((ca.ID=@aid) or (@aid=0))
         and ((HasSettle=@state) or (@state=2))
         and uc.CreateTime between @startdate and @enddate
         ) A where row between @pageSize*(@pageIndex-1)+1 and @pageIndex*@pageSize
        -- order by HasSettle asc
      ]]>
    </select>


    <select id="GetRedShareListCount">
      <![CDATA[  
       SELECT COUNT(1) FROM CouponDB..RedShare
      ]]>
    </select>
    
    <select id="GetRedShareList">
      <![CDATA[   
     SELECT *,
     GrabCount = (SELECT COUNT(1) from AcquiredCoupon ac(nolock)
                 inner join OriginCoupon oc (nolock)
                         on oc.ID=ac.originId
                 where GUID=A.GUID and phoneNo is not null ) 
     FROM (SELECT * ,ROW_NUMBER() OVER(ORDER BY id DESC) rn 
           FROM CouponDB..RedShare) A
     WHERE A.rn > (@pageIndex - 1) * @pageSize and A.rn < @pageIndex * @pageSize
      ]]>
    </select>

    <select id="GetRedShareEntityByGUID">
      <![CDATA[   
       SELECT * FROM CouponDB..RedShare where GUID = @GUID
      ]]>
    </select>

    <select id="GetRetailProductById">
      <![CDATA[   
      SELECT ID,No,RelBizID,Name,BuyLimit,RelBizType,RANK,State,Creator,ShareDesc,
		        	SKUCommissions= ISNULL((select cast((case when tor.TagID = 1 then 50 
                                                        when k.ManualCommission <0 then k.AutoCommission
                                                        else k.ManualCommission end )  as nvarchar(500))+',' 
                                      from  CouponActivitySKURel Rel 
							                        inner join ProductDB.dbo.SKU k 
								                            on rel.SKUID=k.ID 
							                        LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
									                       ON tor.ObjID=k.ID AND TagID = 1
							                        where  rp.RelBizID = Rel.CouponActivityID for xml path('')),''),
             SKUPrices=ISNULL((select cast(k.VIPPrice as nvarchar(50))+',' 
                                      from  CouponActivitySKURel Rel 
							                        inner join ProductDB.dbo.SKU k 
								                            on rel.SKUID=k.ID 
							                        where  rp.RelBizID = Rel.CouponActivityID for xml path('')),'')
       FROM CouponDB..RetailProduct rp(NOLOCK)
       WHERE rp.ID = @ID 
      ]]>
    </select>
    
    <select id="GetRetailProductList">
      <![CDATA[   
       SELECT TOP (@Count) * FROM
        (
              SELECT  rp.ID, rp.Name,rp.Commission,ca.TotalNum,ca.ManuSellNum,
                     ca.ID CouponActivityID,ca.PicPath, 
                     ROW_NUMBER() OVER(Order by rp.Rank asc) rn
              FROM CouponDB..RetailProduct rp(NOLOCK)
              INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
                      ON rp.RelBizId=ca.ID
              WHERE (rp.ID = @ID OR @ID = 0) 
                    AND (rp.RelBizId = @RelBizId OR @RelBizId = 0) 
                    AND rp.state = @state
         )A
         WHERE A.rn > @Start
      ]]>
    </select>

    <select id="GetRetailProductListCount">
      <![CDATA[   
       SELECT COUNT(1) 
       FROM CouponDB..RetailProduct rp(NOLOCK)
       INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
               ON rp.RelBizId=ca.ID
       WHERE (rp.ID = @ID OR @ID = 0) 
             AND (rp.RelBizId = @RelBizId OR @RelBizId = 0) 
             AND rp.state = @state
      ]]>
    </select>

    
    <select id="GetSKURetailProductList">
      <![CDATA[   
       SELECT TOP (@Count) * FROM
        (
              SELECT k.ID ,ca.PageTitle Name,ca.TotalNum,ca.ManuSellNum,
                     ca.ID CouponActivityID,ca.PicPath, 
                     ROW_NUMBER() OVER(Order by ca.createTime desc) rn
              FROM productdb..SKU k(nolock)
              INNER JOIN coupondb..CouponActivitySKURel ckrel(nolock)
                      ON k.ID = ckrel.SKUID
              INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
                      ON ckrel.CouponActivityID=ca.ID
                      where k.IsDistributable = 1
         )A
         WHERE A.rn > @Start
      ]]>
    </select>

    <select id="GetSKURetailProductListCount">
      <![CDATA[   
       SELECT COUNT(1) 
       FROM productdb..SKU k(nolock)
              INNER JOIN coupondb..CouponActivitySKURel ckrel(nolock)
                      ON k.ID = ckrel.SKUID
              INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
                      ON ckrel.CouponActivityID=ca.ID
                      where k.IsDistributable = 1
      ]]>
    </select>

    <select id="GetSKUListByActivityId">
      <![CDATA[
      SELECT * FROM (
          SELECT distinct  SKU.Price SKUPrice,SKU.VIPPrice SKUVipPrice,SKU.ID SKUID, CouponActivityID, SKUName = SKU.Name, 
                 SKUSortNo = sku.SortNo,SKU.PayForSupplier,--ISNULL(TagID,0) SKUTagId,
              case when TagID = 1 then 50 
                 when SKU.ManualCommission <0 then SKU.AutoCommission
                 else SKU.ManualCommission end SKUCommissions
          FROM   
                (SELECT SKU.SPUID,CouponActivityID FROM dbo.CouponActivitySKURel r(NOLOCK)
      INNER JOIN ProductDB..SKU (NOLOCK)
              ON SKU.ID=r.SKUID
      WHERE CouponActivityID = @CouponActivityID
                 )A
          INNER JOIN ProductDB..SKU 
                  ON SKU.SPUID = A.SPUID AND SKU.IsDistributable = 1
          --INNER JOIN coupondb..RetailProduct rp
          --        On rp.RelBizID = A.CouponActivityID AND rp.State = 1
          LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
                 ON tor.ObjID=SKU.ID --AND TagID = 1
      )B
      WHERE SKUID not in(select objid from ProductDB..TagObjRel where TagID=2)  --SKUTagId <>2
       
       
    --  SELECT  SKU.Price SKUPrice,SKU.VIPPrice SKUVipPrice,SKU.ID SKUID, CouponActivityID, SKUName = SKU.Name, 
    --          SKUSortNo = sku.SortNo,SKU.PayForSupplier,ISNULL(tor.TagID,0) SKUTagId,
    --          case when TagID = 1 then 50 
    --               when SKU.ManualCommission <0 then SKU.AutoCommission
    --               else SKU.ManualCommission end SKUCommissions
    --  FROM   dbo.CouponActivitySKURel r(NOLOCK)
    --  INNER JOIN ProductDB..SKU (NOLOCK)
    --          ON SKU.ID=r.SKUID
    --  LEFT JOIN ProductDB..TagObjRel tor(NOLOCK)
     --        ON tor.ObjID=SKU.ID AND TagID = 1
     -- WHERE CouponActivityID = @CouponActivityID
      ]]>
    </select> 
    <select id="GetRetailProductInfoByIDAndCID">
      <![CDATA[
  
      --SELECT  ISNULL(p.HotelID,0) HotelID,
      --       ctripHotelID = ISNULL(ho.HotelOriID,0),
      --       rp.ID,
      --       rp.Name,
      --       rp.Commission,
      --       rp.ShareDesc,
      --       ca.TotalNum,
      --       (ca.ManuSellNum + ca.SellNum ) ManuSellNum,
      --       CouponActivityID = ca.ID,
      --       ca.PicPath,
      --       ca.MoreDetailUrl,
      --       ca.Tags,
      --       IsGroupProduct = convert(bit, case when  ca.GroupCount > 0 then 1 else 0 end ),
      --       rp.No,
      --       rp.BuyLimit,
      --       ResourceURL = ISNULL([ResourceURL], ''),
      --       ShortResourceURL = ISNULL([ShortResourceURL], ''),
      --       ProductUrl = ISNULL([ProductUrl], ''),
      --       ShortProductUrl = ISNULL([ShortProductUrl], ''),
      --       ROW_NUMBER() OVER(ORDER BY rp.id DESC) rn
      --FROM   CouponDB..RetailProduct rp(NOLOCK)
      --       INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
      --            ON  rp.RelBizId = ca.ID
      --       LEFT JOIN CouponDB.dbo.RetailURL URL(NOLOCK)
      --            ON  URL.[RetailID] = rp.ID
      --            AND URL.CID = @CID
      --       LEFT JOIN hoteldb.dbo.Package p(NOLOCK)
      --            ON  p.ID = ca.SourceID
      --       LEFT JOIN hoteldb.dbo.HotelOTA ho(NOLOCK)
      --            ON  ho.HotelId = p.HotelID
      --            AND ho.ChannelID = 2
      --            AND ho.IsValid = 1
      --WHERE  rp.ID = @ID 

SELECT  ISNULL(p.HotelID,0) HotelID,
       ctripHotelID = ISNULL(ho.HotelOriID,0),
       k.ID,
       ca.PageTitle Name,
       ca.TotalNum,
       (ca.ManuSellNum + ca.SellNum ) ManuSellNum,
       CouponActivityID = ca.ID,
       ca.PicPath,
       ca.MoreDetailUrl,
       ca.Tags,
       IsGroupProduct = convert(bit, case when  ca.GroupCount > 0 then 1 else 0 end ),
       ResourceURL = ISNULL([ResourceURL], ''),
       ShortResourceURL = ISNULL([ShortResourceURL], ''),
       ProductUrl = ISNULL([ProductUrl], ''),
       ShortProductUrl = ISNULL([ShortProductUrl], ''),
       ROW_NUMBER() OVER(ORDER BY k.id DESC) rn
FROM   productdb..SKU k(nolock)
       INNER JOIN coupondb..CouponActivitySKURel ckrel(nolock)
              ON k.ID=ckrel.SKUID
       INNER JOIN CouponDB..CouponActivity ca(NOLOCK)
            ON  ckrel.CouponActivityID = ca.ID
       LEFT JOIN CouponDB.dbo.RetailURL URL(NOLOCK)
            ON  URL.[SKUID] = k.ID
            AND URL.CID = @CID
       LEFT JOIN hoteldb.dbo.Package p(NOLOCK)
            ON  p.ID = ca.SourceID
       LEFT JOIN hoteldb.dbo.HotelOTA ho(NOLOCK)
            ON  ho.HotelId = p.HotelID
            AND ho.ChannelID = 2
            AND ho.IsValid = 1
WHERE  k.ID = @ID 
      ]]>
    </select>
    <select id="GetTopCountSupplierCouponBySupplierID">
      <![CDATA[
      select TOP (@Count) * from CouponDB..SupplierCoupon where SupplierId = @SupplierId and State = @State
      ]]>
    </select>
    <select id="GetSupplierCouponInfo">
      <![CDATA[
      select sc.*,s.Name SupplierName from SupplierCoupon sc(nolock)
      inner join HotelDB..Supplier s(nolock)
      on s.ID=sc.SupplierId 
      where SupplierId = @SupplierId 
      ]]>

    </select>
      <select id="GetSearchProductList">
      <![CDATA[
    --  select SKU.SPUID,rp.RelBizID 
    --  into #carel
    --  from CouponDB..RetailProduct rp
		--	       inner join CouponDB..CouponActivity ca
		--			       on ca.ID = rp.RelBizID
		--	       inner join CouponDB..CouponActivitySKURel caskurel
		--			       on rp.RelBizID=caskurel.CouponActivityID
		--	       inner join ProductDB..SKU 
		--			       on SKU.ID=caskurel.SKUID
    --          where  rp.state = 1
		--	       group by SKU.SPUID,rp.RelBizID
    --
    -- ;with skuinfo as
    -- (
		--     select SKU.* from ProductDB..SKU
		--     inner join #carel A
		--             on A.SPUID=SKU.SPUID
		--     inner join CouponDB..CouponActivitySKURel caskurel (nolock)
		--             on caskurel.SKUID = SKU.ID
    -- )
    -- select    * into #Sku  from skuinfo s
    --            where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by VIPPrice asc)
    --
    -- IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 OR @Sort = 0
    -- BEGIN
    -- select top (@Count) * from 
	  --   (
	  --   select *,ROW_NUMBER () over(order by case  when @Sort = 0 then caCreateTime
    --                                             when @Sort = 1 then ManuSellNum 
    --                                             when @Sort = 3 then SKUPrice
    --                                             when @Sort = 5 then Commission end desc) rn
		--	       from (
		--	          select rp.ID,rp.No,rp.Name,rp.BuyLimit,RelBizType,rp.RelBizID,rp.Rank,rp.State,rp.Creator,rp.CreateTime,ca.CreateTime caCreateTime,
		--	                  rp.UpdateTime,ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
		--					          when ManualCommission<>-1 then ManualCommission end  Commission
		--			             from CouponDB..RetailProduct rp
		--			             inner join  CouponDB..CouponActivity ca
		--					             on ca.ID = rp.RelBizID
		--			             inner join  dbo.fn_split(@Screen,',') sp 
		--					             on sp.item=ca.Type		 
		--			             inner join #carel carel
		--					             on carel.RelBizID= rp.RelBizID
		--			             inner join #Sku SKU
		--					             on SKU.SPUID=carel.SPUID
		--	          where rp.Name like '%'+ @SearchWord +'%' or rp.No like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
    --
	  --   ) productInfo
	  --   )A
    -- where A.rn > @Start
    -- END
    -- ELSE
    -- BEGIN
    --        select top (@Count) * from 
	  --   (
	  --   select *,ROW_NUMBER () over(order by case 
    --                                             when @Sort = 2 then SKUPrice
    --                                             when @Sort = 4 then Commission end asc) rn
		--	       from (
		--	          select rp.ID,rp.No,rp.Name,rp.BuyLimit,RelBizType,rp.RelBizID,rp.Rank,rp.State,rp.Creator,rp.CreateTime,
		--	                  rp.UpdateTime,ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
		--					          when ManualCommission<>-1 then ManualCommission end  Commission
		--			             from CouponDB..RetailProduct rp
		--			             inner join  CouponDB..CouponActivity ca
		--					             on ca.ID = rp.RelBizID
		--			             inner join  dbo.fn_split(@Screen,',') sp 
		--					             on sp.item=ca.Type		 
		--			             inner join #carel carel
		--					             on carel.RelBizID= rp.RelBizID
		--			             inner join #Sku SKU
		--					             on SKU.SPUID=carel.SPUID 
		--	          where rp.Name like '%'+ @SearchWord +'%' or rp.No like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
    --
	  --   ) productInfo
	  --   )A
    -- where A.rn > @Start
    -- END
    -- 
    -- drop table #Sku
    -- drop table #carel
    
    select k.SPUID --,ca.ID
       into #carel
       from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID
				       inner join ProductDB..SKU k(nolock)
						       on k.ID=caskurel.SKUID
               where  k.IsDistributable = 1 AND ca.state=1	
				       group by k.SPUID --,ca.ID

      ;with skuinfo as
      (
		      select SKU.* from ProductDB..SKU(nolock)
		      inner join #carel A
		      on A.SPUID=SKU.SPUID
		      inner join CouponDB..CouponActivitySKURel caskurel (nolock)
		              on caskurel.SKUID = SKU.ID
      )
      select    * into #Sku  from skuinfo s
                 where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by VIPPrice asc)

      IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 OR @Sort = 0
      BEGIN
      select top (@Count) * from 
	      (
	      select *,ROW_NUMBER () over(order by case  when @Sort = 0 then caCreateTime
                                                  when @Sort = 1 then ManuSellNum 
                                                  when @Sort = 3 then SKUPrice
                                                  when @Sort = 5 then Commission end desc) rn
				       from (
				          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
				                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
								          when ManualCommission<>-1 then ManualCommission end  Commission
						             from CouponDB..CouponActivity ca
						             inner join  dbo.fn_split(@Screen,',') sp 
								             on sp.item=ca.Type		 
						             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
								             on ckrel.CouponActivityID =ca.ID
						             inner join #Sku SKU
								             on SKU.ID=ckrel.SKUID
						             inner join #carel carel
								             on carel.SPUID = SKU.SPUID
				          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''

	      ) productInfo
	      )A
      where A.rn > @Start
      END
      ELSE
      BEGIN
             select top (@Count) * from 
	      (
	      select *,ROW_NUMBER () over(order by case 
                                                  when @Sort = 2 then SKUPrice
                                                  when @Sort = 4 then Commission end asc) rn
				       from (
				          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
				                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
								          when ManualCommission<>-1 then ManualCommission end  Commission
						             from CouponDB..CouponActivity ca
						             inner join  dbo.fn_split(@Screen,',') sp 
								             on sp.item=ca.Type		 
						             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
								             on ckrel.CouponActivityID =ca.ID
						             inner join #Sku SKU
								             on SKU.ID=ckrel.SKUID
						             inner join #carel carel
								             on carel.SPUID = SKU.SPUID
				          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''

	      ) productInfo
	      )A
      where A.rn > @Start
      END
      
      drop table #Sku
      drop table #carel

      ]]>

    </select>
    
      <select id="GetSearchProductListCount">
      <![CDATA[
     -- select SKU.SPUID,rp.RelBizID 
     --  into #carel
     --  from CouponDB..RetailProduct rp
			--	       inner join CouponDB..CouponActivity ca
			--			       on ca.ID = rp.RelBizID
			--	       inner join CouponDB..CouponActivitySKURel caskurel
			--			       on rp.RelBizID=caskurel.CouponActivityID
			--	       inner join ProductDB..SKU 
			--			       on SKU.ID=caskurel.SKUID
     --          where  rp.state = 1
			--	       group by SKU.SPUID,rp.RelBizID
     --
     -- ;with skuinfo as
     -- (
		 --     select SKU.* from ProductDB..SKU
		 --     inner join #carel A
		 --     on A.SPUID=SKU.SPUID
     -- )
     -- select    * into #Sku  from skuinfo s
     --            where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by Price asc)
     --
     -- 
	   --   select count(1)
			--	       from (
			--	          select  rp.No,rp.Name,rp.BuyLimit,RelBizType,rp.RelBizID,rp.Rank,rp.State,rp.Creator,rp.CreateTime,
			--	                  rp.UpdateTime,ca.Tags,ca.SellNum,ca.TotalNum,ca.ManuSellNum,ca.PicPath, SKU.Price SKUPrice,   case when ManualCommission = -1 then AutoCommission
			--					          when ManualCommission<>-1 then ManualCommission end 
			--			             Commission
			--			             from CouponDB..RetailProduct rp
			--			             inner join  CouponDB..CouponActivity ca
			--					             on ca.ID = rp.RelBizID
			--			             inner join  dbo.fn_split(@Screen,',') sp 
			--					             on sp.item=ca.Type		 
			--			             inner join #carel carel
			--					             on carel.RelBizID= rp.RelBizID
			--			             inner join #Sku SKU
			--					             on SKU.SPUID=carel.SPUID
			--	          where rp.Name like '%'+ @SearchWord +'%' or rp.No like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord = '' or @SearchWord is null
     --
	   --   ) A
     -- 
     -- drop table #Sku
     -- drop table #carel
    
    select k.SPUID --,ca.ID
       into #carel
       from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID
				       inner join ProductDB..SKU k(nolock)
						       on k.ID=caskurel.SKUID
               where  k.IsDistributable = 1
				       group by k.SPUID --,ca.ID

      ;with skuinfo as
      (
		      select SKU.* from ProductDB..SKU (nolock)
		      inner join #carel A
		      on A.SPUID=SKU.SPUID
      )
      select    * into #Sku  from skuinfo s
                 where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by Price asc)

      
	      select count(1)
				       from (
				          select ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
				                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
								          when ManualCommission<>-1 then ManualCommission end  Commission
						             from CouponDB..CouponActivity ca(nolock)
						             inner join  dbo.fn_split(@Screen,',') sp 
								             on sp.item=ca.Type		 
						             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
								             on ckrel.CouponActivityID =ca.ID
						             inner join #Sku SKU
								             on SKU.ID=ckrel.SKUID
						             inner join #carel carel
								             on carel.SPUID = SKU.SPUID
				          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''

	      ) A
      
      drop table #Sku
      drop table #carel
      
      ]]>

    </select>

    <select id="GetSearchProductListByCategory">
      <![CDATA[
      select A.* --,ca.ID
       into #sku
       from (select k.*,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
				       inner join ProductDB..SKU k(nolock)
						         on k.ID=caskurel.SKUID
					     inner join ProductDB..SPU p(nolock)
					              on p.ID = k.SPUID
					     inner join ProductDB..ProcudtCategory pc(nolock)
					              on pc.ID = p.ProductCategoryID
					     inner join productdb..SKUPropertyOptionRel porel(nolock)
					              on porel.SKUID = k.ID
					     inner join productdb..ProductProperty pp(nolock)
						          on pp.SPUID = p.ID and pp.Type!=5
					     inner join fn_Split(@Screen,',') item
					              on item.Item =pc.ParentID
               LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                      ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
               where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
                      AND ca.IsValid = 1
               
               union all
               
               select k.*,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
				       inner join ProductDB..SKU k(nolock)
						         on k.ID=caskurel.SKUID
					     inner join ProductDB..SPU p(nolock)
					              on p.ID = k.SPUID
					     inner join ProductDB..ProcudtCategory pc(nolock)
					              on pc.ID = p.ProductCategoryID
					     inner join productdb..SKUPropertyOptionRel porel(nolock)
					              on porel.SKUID = k.ID
					     inner join productdb..ProductProperty pp(nolock)
						          on pp.SPUID = p.ID and pp.Type=5
					     inner join productdb..SKUPropertyOptionRel po(nolock)
					              on po.SKUID = k.ID
					     inner join productdb..ProductPropertyOption ppo(nolock)
					              on ppo.ID = po.PropertyOptionID and ppo.TargetID=2
					     inner join fn_Split(@Screen,',') item
					              on item.Item =pc.ParentID
               LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                       ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
               where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
                      AND ca.IsValid = 1
               ) A
                where  A.TagID<>2

      select    * into #SKUInfo  from #sku s
                 where ID in (select top 1 ID from #sku where s.SPUID = SPUID order by VIPPrice asc)

      IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 OR @Sort = 0
      BEGIN
      select top (@Count) * from 
	      (
	      select *,ROW_NUMBER () over(order by case  when @Sort = 0 then caCreateTime
                                                  when @Sort = 1 then ManuSellNum 
                                                  when @Sort = 3 then SKUPrice
                                                  when @Sort = 5 then Commission end desc) rn
				       from (
				          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
				                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
								          when ManualCommission<>-1 then ManualCommission end  Commission
						             from CouponDB..CouponActivity ca
						             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
								             on ckrel.CouponActivityID =ca.ID
						             inner join #SKUInfo SKU
								             on SKU.ID=ckrel.SKUID
				          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''

	      ) productInfo
	      )A
      where A.rn > @Start
      END
      ELSE
      BEGIN
             select top (@Count) * from 
	      (
	      select *,ROW_NUMBER () over(order by case 
                                                  when @Sort = 2 then SKUPrice
                                                  when @Sort = 4 then Commission end asc) rn
				       from (
				          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
				                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
								          when ManualCommission<>-1 then ManualCommission end  Commission
						             from CouponDB..CouponActivity ca
						             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
								             on ckrel.CouponActivityID =ca.ID
						             inner join #SKUInfo SKU
								             on SKU.ID=ckrel.SKUID
				          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''

	      ) productInfo
	      )A
      where A.rn > @Start
      END
      
      drop table #Sku
      drop table #SKUInfo
      
      
  --   select A.SPUID --,ca.ID
  --   into #carel
  --   from (select k.SPUID,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
	--		       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
	--				       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
	--		       inner join ProductDB..SKU k(nolock)
	--				         on k.ID=caskurel.SKUID
	--			     inner join ProductDB..SPU p(nolock)
	--			              on p.ID = k.SPUID
	--			     inner join ProductDB..ProcudtCategory pc(nolock)
	--			              on pc.ID = p.ProductCategoryID
	--			     inner join productdb..SKUPropertyOptionRel porel(nolock)
	--			              on porel.SKUID = k.ID
	--			     inner join productdb..ProductProperty pp(nolock)
	--				          on pp.SPUID = p.ID and pp.Type!=5
	--			     inner join fn_Split(@Screen,',') item
	--			              on item.Item =pc.ParentID
  --           LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
  --                  ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
  --           where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
  --           
  --           union all
  --           
  --           select k.SPUID,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
	--		       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
	--				       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
	--		       inner join ProductDB..SKU k(nolock)
	--				         on k.ID=caskurel.SKUID
	--			     inner join ProductDB..SPU p(nolock)
	--			              on p.ID = k.SPUID
	--			     inner join ProductDB..ProcudtCategory pc(nolock)
	--			              on pc.ID = p.ProductCategoryID
	--			     inner join productdb..SKUPropertyOptionRel porel(nolock)
	--			              on porel.SKUID = k.ID
	--			     inner join productdb..ProductProperty pp(nolock)
	--				          on pp.SPUID = p.ID and pp.Type=5
	--			     inner join productdb..SKUPropertyOptionRel po(nolock)
	--			              on po.SKUID = k.ID
	--			     inner join productdb..ProductPropertyOption ppo(nolock)
	--			              on ppo.ID = po.PropertyOptionID and ppo.TargetID=2
	--			     inner join fn_Split(@Screen,',') item
	--			              on item.Item =pc.ParentID
  --                     LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
  --                             ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
  --                      where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
  --           ) A
  --            where  A.TagID<>2
	--		       group by A.SPUID 
  --
  --  ;with skuinfo as
  --  (
	--      SELECT * FROM (
	--      select SKU.*,ISNULL(TagID,0) TagId from ProductDB..SKU(nolock)
	--      inner join #carel A
	--              on A.SPUID=SKU.SPUID and SKU.IsDistributable = 1
  --          LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
  --                     ON tor.ObjID= SKU.ID and tor.ObjType=1 and tor.TagID = 2 ) A
	--      inner join CouponDB..CouponActivitySKURel caskurel (nolock)
	--              on caskurel.SKUID = A.ID AND A.TagId <>2
  --  )
  --  select    * into #Sku  from skuinfo s
  --             where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by VIPPrice asc)
  --
  --  IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 OR @Sort = 0
  --  BEGIN
  --  select top (@Count) * from 
	--    (
	--    select *,ROW_NUMBER () over(order by case  when @Sort = 0 then caCreateTime
  --                                              when @Sort = 1 then ManuSellNum 
  --                                              when @Sort = 3 then SKUPrice
  --                                              when @Sort = 5 then Commission end desc) rn
	--		       from (
	--		          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
	--		                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
	--						          when ManualCommission<>-1 then ManualCommission end  Commission
	--				             from CouponDB..CouponActivity ca
	--				             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
	--						             on ckrel.CouponActivityID =ca.ID
	--				             inner join #Sku SKU
	--						             on SKU.ID=ckrel.SKUID
	--				             inner join #carel carel
	--						             on carel.SPUID = SKU.SPUID
	--		          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
  --
	--    ) productInfo
	--    )A
  --  where A.rn > @Start
  --  END
  --  ELSE
  --  BEGIN
  --         select top (@Count) * from 
	--    (
	--    select *,ROW_NUMBER () over(order by case 
  --                                              when @Sort = 2 then SKUPrice
  --                                              when @Sort = 4 then Commission end asc) rn
	--		       from (
	--		          select SKU.ID,ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
	--		                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
	--						          when ManualCommission<>-1 then ManualCommission end  Commission
	--				             from CouponDB..CouponActivity ca
	--				             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
	--						             on ckrel.CouponActivityID =ca.ID
	--				             inner join #Sku SKU
	--						             on SKU.ID=ckrel.SKUID
	--				             inner join #carel carel
	--						             on carel.SPUID = SKU.SPUID
	--		          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
  --
	--    ) productInfo
	--    )A
  --  where A.rn > @Start
  --  END
  --  
  --  drop table #Sku
  --  drop table #carel
    
      ]]>

    </select>

    <select id="GetSearchProductListByCategoryCount">
      <![CDATA[
      select A.* --,ca.ID
       into #sku
       from (select k.*,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
				       inner join ProductDB..SKU k(nolock)
						         on k.ID=caskurel.SKUID
					     inner join ProductDB..SPU p(nolock)
					              on p.ID = k.SPUID
					     inner join ProductDB..ProcudtCategory pc(nolock)
					              on pc.ID = p.ProductCategoryID
					     inner join productdb..SKUPropertyOptionRel porel(nolock)
					              on porel.SKUID = k.ID
					     inner join productdb..ProductProperty pp(nolock)
						          on pp.SPUID = p.ID and pp.Type!=5
					     inner join fn_Split(@Screen,',') item
					              on item.Item =pc.ParentID
               LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                      ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
               where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
                      AND ca.IsValid = 1
               
               union all
               
               select k.*,ISNULL(TagID,0)TagID from CouponDB..CouponActivity ca(nolock)
				       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
						       on ca.ID = caskurel.CouponActivityID and ca.TotalNum>ca.SellNum
				       inner join ProductDB..SKU k(nolock)
						         on k.ID=caskurel.SKUID
					     inner join ProductDB..SPU p(nolock)
					              on p.ID = k.SPUID
					     inner join ProductDB..ProcudtCategory pc(nolock)
					              on pc.ID = p.ProductCategoryID
					     inner join productdb..SKUPropertyOptionRel porel(nolock)
					              on porel.SKUID = k.ID
					     inner join productdb..ProductProperty pp(nolock)
						          on pp.SPUID = p.ID and pp.Type=5
					     inner join productdb..SKUPropertyOptionRel po(nolock)
					              on po.SKUID = k.ID
					     inner join productdb..ProductPropertyOption ppo(nolock)
					              on ppo.ID = po.PropertyOptionID and ppo.TargetID=2
					     inner join fn_Split(@Screen,',') item
					              on item.Item =pc.ParentID
               LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
                       ON tor.ObjID= k.ID and tor.ObjType=1 and tor.TagID = 2
               where  k.IsDistributable = 1 AND ca.state=1	AND ca.SaleEndDate>GETDATE()
                      AND ca.IsValid = 1
               ) A
                where  A.TagID<>2

      select    * into #SKUInfo  from #sku s
                 where ID in (select top 1 ID from #sku where s.SPUID = SPUID order by VIPPrice asc)

             select COUNT(1)
	           from CouponDB..CouponActivity ca
	           inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
	                   on ckrel.CouponActivityID =ca.ID
	           inner join #SKUInfo SKU
          	         on SKU.ID=ckrel.SKUID
         	   where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
      
      drop table #Sku
      drop table #SKUInfo
      
      
      
    
   --select k.SPUID --,ca.ID
   --   into #carel
   --   from CouponDB..CouponActivity ca(nolock)
		--		       inner join CouponDB..CouponActivitySKURel caskurel(nolock)
		--				       on ca.ID = caskurel.CouponActivityID
		--		       inner join ProductDB..SKU k(nolock)
		--				       on k.ID=caskurel.SKUID
		--			     inner join ProductDB..SPU p(nolock)
		--			              on p.ID = k.SPUID
		--			     inner join ProductDB..ProcudtCategory pc(nolock)
		--			              on pc.ID = p.ProductCategoryID
		--			     inner join fn_Split(@Screen,',') item
		--			              on item.Item =pc.ParentID
   --           where  k.IsDistributable = 1 AND ca.state=1 AND ca.SaleEndDate>GETDATE() and ca.ExpireTime>GETDATE()
		--		       group by k.SPUID --,ca.ID
   --
   --  ;with skuinfo as
   --  (
		--      SELECT * FROM (
		--      select SKU.*,ISNULL(TagID,0) TagId from ProductDB..SKU(nolock)
		--      inner join #carel A
		--              on A.SPUID=SKU.SPUID
   --          LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
   --                     ON tor.ObjID= SKU.ID and tor.ObjType=1 and tor.TagID = 2 ) A
		--      inner join CouponDB..CouponActivitySKURel caskurel (nolock)
		--              on caskurel.SKUID = A.ID AND A.TagId <>2
   --  )
   --  select    * into #Sku  from skuinfo s
   --             where ID in (select top 1 ID from skuinfo where s.SPUID = SPUID order by Price asc)
   --
   --  
	 --    select count(1)
		--		       from (
		--		          select ca.PageTitle Name,ca.Type,ca.CreateTime caCreateTime,
		--		                  ca.Tags,ca.SellNum,ca.TotalNum,(ca.ManuSellNum+ca.SellNum) ManuSellNum,ca.PicPath, SKU.VIPPrice SKUPrice ,ca.ID CouponActivityID ,   case when ManualCommission = -1 then AutoCommission
		--						          when ManualCommission<>-1 then ManualCommission end  Commission
		--				             from CouponDB..CouponActivity ca(nolock)
		--				             inner join coupondb..CouponActivitySKURel ckrel(nolock)	 
		--						             on ckrel.CouponActivityID =ca.ID
		--				             inner join #Sku SKU
		--						             on SKU.ID=ckrel.SKUID
		--				             inner join #carel carel
		--						             on carel.SPUID = SKU.SPUID
		--		          where ca.PageTitle like '%'+ @SearchWord +'%' or ca.Tags like '%'+ @SearchWord +'%' or  @SearchWord =''
   --
	 --    ) A
   --  
   --  drop table #Sku
   --  drop table #carel
      
      ]]>

    </select>
    

    <select id="GetWillCloseProductGroup">
      <![CDATA[
 
SELECT a.ActivityID,
       a.groupCount,
       a.GroupId,
       a.SKUID,
       a.CreatTime,
       a.EndTime,
       curMemberCount = COUNT(1)
FROM   (
           SELECT ec.ActivityID,
                  ca.GroupCount,
                  ec.GroupId,
                  ec.SKUID,
                  gp.CreatTime,
                  gp.EndTime
           FROM   CouponDB.dbo.ExchangeCoupon ec(NOLOCK)
                  INNER JOIN CouponDB.dbo.CouponActivity ca(NOLOCK)
                       ON  ca.ID = ec.ActivityID
                  INNER JOIN productdb.dbo.GroupPurchase gp(NOLOCK)
                       ON  ec.GroupId = gp.ID
                       AND ec.UserID = gp.UserId
           WHERE  ec.State = 2 -- 已支付
                  AND gp.State = 0 --组团中
                  AND (0 = @GroupCount OR ca.GroupCount = @GroupCount) --成团需要人数
                  AND (0 = @SKUID OR ec.SKUID = @SKUID)
                  AND DATEDIFF(hour, GETDATE(), gp.EndTime) < @Hour --到期时间
       ) a
       INNER JOIN ProductDB.dbo.GroupPurchaseDetail gpd(NOLOCK)
            ON  a.GroupId = gpd.GroupId
GROUP BY
       a.ActivityID,
       a.GroupCount,
       a.GroupId,
       a.SKUID,
       a.CreatTime,
       a.EndTime

      ]]>
    </select>
    <select id="GetUserCouponDefineListByType">
      <![CDATA[
      SELECT * FROM CouponDB..UserCouponDefine  where [Type] = @Type ORDER BY IDX DESC
      ]]>
    </select>
    <select id="GetUserCouponDefineByID">
      <![CDATA[
      SELECT * FROM CouponDB..UserCouponDefine  where [IDX] = @IDX
      ]]>
    </select>
    <select id="GetUserCouponDefineListByIds">
      <![CDATA[
      SELECT *, UsedCount = (select COUNT(1) from coupondb..UserCouponItem where CouponDefineID = ucd.IDX and UserID = @UserID)
      FROM CouponDB..UserCouponDefine  ucd(nolock)
      INNER JOIN fn_Split(@IDXs,',') fn
              ON fn.Item = ucd.IDX
      ]]>
    </select>

    <select id="GetUserCouponItemByUserId">
      <![CDATA[
      SELECT count(1) FROM CouponDB..UserCouponItem  where UserID = @UserID and CouponDefineID = @CouponDefineID
      ]]>
    </select>
    
    <select id="GetUserCouponInfoListByUserId">
      <![CDATA[  
      IF @State = 0
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State
                 AND uci.ExpiredDate > GETDATE()
                 AND (ucd.Type = 0 OR ucd.Type = 1)
          ORDER BY uci.CreateTime DESC
      ELSE IF @State = 2
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND  (uci.State = @State OR uci.ExpiredDate < GETDATE())
                 AND (ucd.Type = 0 OR ucd.Type = 1)
          ORDER BY uci.CreateTime DESC
       ELSE 
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State
                 AND (ucd.Type = 0 OR ucd.Type = 1)
          ORDER BY uci.CreateTime DESC
      ]]>
    </select>

    <select id="GetNewVIPGiftUserCouponInfoListByUserId">
      <![CDATA[  
           SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId 
                 and uci.Creator = -111 -- New VIP Gift 
      ]]>
    </select>

    <select id="GetUserCouponInfoListByUserIdAndType">
      <![CDATA[  
      IF @State = 0
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State
                 AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
          ORDER BY uci.CreateTime DESC
      ELSE IF @State = 2
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND (uci.State = @State OR uci.ExpiredDate < GETDATE())
                 --AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
          ORDER BY uci.CreateTime DESC
      ELSE
          SELECT ucd.Name,
                 Description = ucd.Description +' *不适用酒店前台现付及担保订单',
                 ucd.RequireAmount,
                 ucd.DiscountAmount,
                 ucd.Type UserCouponType,
                 uci.* 
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State 
                 --AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
          ORDER BY uci.CreateTime DESC
      ]]>
    </select>

    <select id="GetUserCouponUserCondationList">
      <![CDATA[      
      SELECT * FROM CouponDB..UserCouponUseCondation WHERE CouponDefineID = @CouponDefineID
      ]]>
    </select>
    
      <select id="GetUserCouponUserCondationListByUCDList">
      <![CDATA[      
     -- DECLARE @CouponDefineIDList VARCHAR(200) = '11,12'
	 
SELECT UCC.*
FROM   CouponDB..UserCouponUseCondation UCC(NOLOCK)
       INNER JOIN dbo.fn_Split(@CouponDefineIDList, ',') fs
            ON  fs.Item = ucc.CouponDefineID

      ]]>
    </select>
   <select id="GetUserCouponUserCondationListByTypeAndSourceID">
      <![CDATA[      
--DECLARE @condationType  INT = 1
--DECLARE @IntVal         INT = 470
	 
SELECT UCC.*
FROM   CouponDB..UserCouponUseCondation UCC(NOLOCK)
WHERE  condationType = @condationType
       AND IntVal = @IntVal
      ]]>
    </select>
    <select id="GetUserCouponInfoCountByUserIdAndType">
      <![CDATA[   
      IF @State = 0
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State
                 AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
      ELSE IF @State = 2
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND (uci.State = @State OR uci.ExpiredDate < GETDATE())
                 --AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
      ELSE
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State 
                 --AND uci.ExpiredDate > GETDATE()
                 AND ucd.Type = @Type
      ]]>
    </select>


    <select id="GetUserCouponInfoAllListByUserId">
      <![CDATA[      
      SELECT ucd.Name,
             Description = ucd.Description +' *不适用酒店前台现付及担保订单',
             ucd.RequireAmount,
             ucd.DiscountAmount,
             ucd.Type UserCouponType,
             uci.* 
      FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
      INNER JOIN UserCouponItem uci(NOLOCK)
              ON ucd.idx = uci.CouponDefineID
      WHERE UserId = @UserId
      ORDER BY uci.CreateTime DESC
      ]]>
    </select>

    <select id="GetUserCouponInfoCountByUserId">
      <![CDATA[  
      IF @State = 0
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State
                 AND uci.ExpiredDate > GETDATE()
                 AND (ucd.Type = 0 OR ucd.Type = 1)
      ELSE IF @State = 2
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND (uci.State = @State OR uci.ExpiredDate < GETDATE())
                 AND (ucd.Type = 0 OR ucd.Type = 1)
      ELSE
          SELECT COUNT(1)
          FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
          INNER JOIN UserCouponItem uci(NOLOCK)
                  ON ucd.idx = uci.CouponDefineID
          WHERE UserId = @UserId
                 AND uci.State = @State 
                 AND (ucd.Type = 0 OR ucd.Type = 1)
      ]]>
    </select>

    <select id="GetUserCouponItemInfoByID">
      <![CDATA[ 
      SELECT ucd.Name,
             Description = ucd.Description +' *不适用酒店前台现付及担保订单',
             ucd.RequireAmount,
             ucd.DiscountAmount,
             ucd.Type UserCouponType,
             uci.* 
      FROM CouponDB..UserCouponDefine  ucd(NOLOCK)
      INNER JOIN UserCouponItem uci(NOLOCK)
              ON ucd.idx = uci.CouponDefineID
      WHERE uci.IDX = @ID 
      ]]>
    </select>

    <select id="GetUserCouponItemByID">
      <![CDATA[ 
      SELECT 
             uci.* 
      FROM CouponDB..UserCouponItem uci(NOLOCK)
      WHERE uci.IDX = @ID
      ]]>
    </select>

    <select id="GetUserCouponLogByCouponItemID">
      <![CDATA[ 
      SELECT * 
      FROM CouponDB..UserCouponConsumeLog ucl(NOLOCK)
      WHERE ucl.UserCouponItemID = @IDX 
      ORDER BY CreateTime DESC
      ]]>
    </select>

    <select id="GetCouponCondationByCouponDefineId">
      <![CDATA[
   
--DECLARE @CouponDefineID INT = 21
  
SELECT ucc.*,
       BizName = s.Name + '.' + K.Name
FROM   CouponDB..UserCouponUseCondation ucc(NOLOCK)
       INNER JOIN ProductDB..SKU K(NOLOCK)
            ON  ucc.IntVal = K.ID
            AND ucc.CondationType = 1--券
                
       INNER JOIN productdb.dbo.spu s(NOLOCK)
            ON  s.id = k.spuid
WHERE  ucc.CouponDefineID = @CouponDefineID 

UNION ALL 	  
SELECT ucc.*,
       BizName = h.HotelName + '.' + p.Code
FROM   CouponDB..UserCouponUseCondation ucc(NOLOCK)
       INNER JOIN hoteldb.dbo.package p(NOLOCK)
            ON  ucc.IntVal = p.ID
            AND ucc.CondationType = 2--酒店套餐
                
       INNER JOIN hoteldb.dbo.hotel h(NOLOCK)
            ON  h.hotelid = p.hotelid
WHERE  ucc.CouponDefineID = @CouponDefineID   


      ]]>
    </select>
    <select id="GetCouponCondationByIntVal">
      <![CDATA[	  
      SELECT ucc.*
      FROM   CouponDB..UserCouponUseCondation ucc(NOLOCK)
      INNER JOIN coupondb..UserCouponDefine ucd(nolock)
              ON ucd.IDX = ucc.CouponDefineID
      WHERE ucc.IntVal = @IntVal 
            AND ucc.CondationType = @CondationType
            AND ucd.IsAccordingProduct = 1
      ]]>
    </select>
    <select id="GetCouponDefineByIntVals">
      <![CDATA[	
      SELECT * FROM
      (
      SELECT ucd.*,
             UsedCount = (select COUNT(1) from coupondb..UserCouponItem WHERE CouponDefineID = ucd.IDX and UserID = @UserId),
             ROW_NUMBER() OVER(partition by ucc.IntVal order by ucd.DiscountAmount asc) rn
      FROM   CouponDB..UserCouponUseCondation ucc(NOLOCK)
      INNER JOIN fn_split(@IntVals,',') fn
              ON fn.item = ucc.IntVal
      INNER JOIN  CouponDB..UserCouponDefine  ucd(nolock)
              ON ucd.IDX = ucc.CouponDefineID
      WHERE ucc.CondationType = @CondationType 
      ) A where A.rn=1
      ]]>
    </select>
    
    <select id="GetCouponDefineByIntval">
      <![CDATA[
        SELECT  
                --CONVERT(BIT,CASE WHEN ISNULL(uci.IDX,0) > 0 THEN 1
                --    ELSE 0  end ) UserBuyState  ,
                PromotionSKUID = ISNULL((SELECT top 1 rel.SKUID FROM ProductDB..PromotionRule pr
                                         INNER JOIN ProductDB..PromotionRuleSKURel rel on pr.ID=rel.PromotionRuleId WHERE pr.TargetID = ucd.IDX AND Type = 5),0),
                PromotionSKUName = ISNULL((SELECT top 1 K.Name FROM ProductDB..PromotionRule pr
                                         INNER JOIN ProductDB..PromotionRuleSKURel rel on pr.ID=rel.PromotionRuleId
                                         INNER JOIN ProductDB..SKU K on rel.SKUID=K.ID WHERE pr.TargetID = ucd.IDX AND Type = 5),''),
                    ucd.* FROM CouponDB..UserCouponDefine ucd
        INNER JOIN CouponDB..UserCouponUseCondation ucc(NOLOCK)
                ON ucd.IDX = ucc.CouponDefineID 
        -- LEFT JOIN CouponDB..UserCouponItem uci
        --       ON ucd.IDX=uci.CouponDefineID and uci.State=0 and uci.ExpiredDate<GETDATE()
        WHERE ucc.IntVal = @IntVal and ucc.CondationType = @CondationType    
      ]]>
    </select>

    <select id="GetUserCouponItemByUserIdAndCouponDefineId">
      <![CDATA[
        SELECT  COUNT(1) FROM CouponDB..UserCouponItem uci
        WHERE uci.UserId = @UserId and  uci.CouponDefineID = @CouponDefineId    
      ]]>
    </select>

    <select id="GetRedPoolListByType">
      <![CDATA[
      SELECT * FROM CouponDB..RedPool rp(NOLOCK) WHERE Type = @Type ORDER BY ID DESC
      ]]>
    </select>

    <select id="GetRedPoolByID">
      <![CDATA[
      SELECT * FROM CouponDB..RedPool rp(NOLOCK) WHERE ID = @ID
      ]]>
    </select>


    <select id="GetRedDetailByPoolId">
      <![CDATA[
      SELECT rpd.*,ISNULL(RequireAmount,0) RequireAmount,ISNULL(DiscountAmount,0) DiscountAmount
      FROM CouponDB..RedPoolDetail rpd(NOLOCK)
      INNER JOIN CouponDB..UserCouponDefine ucd(NOLOCK)
              ON rpd.BizID = ucd.IDX AND(rpd.BizType = 0 OR rpd.BizType = 1 OR rpd.BizType = 2)
      WHERE rpd.RedPoolId = @RedPoolId AND rpd.State=0
      ]]>
    </select>

    <select id="GetRedDetailBylId">
      <![CDATA[
      SELECT rpd.*
      FROM CouponDB..RedPoolDetail rpd(NOLOCK)
      WHERE rpd.ID = @ID
      ]]>
    </select>

    <select id="GetRedActivityListByType">
      <![CDATA[
      SELECT * FROM CouponDB..RedActivity ra(NOLOCK) WHERE (ra.BizType = @BizType OR @BizType = 0) ORDER BY ID DESC
      ]]>
    </select>

    <select id="GetRedActivityById">
      <![CDATA[
      SELECT * FROM CouponDB..RedActivity ra(NOLOCK) WHERE ra.ID = @ID
      ]]>
    </select>

    <select id="GetRedActivityByGUID">
      <![CDATA[
      SELECT * FROM CouponDB..RedActivity ra(NOLOCK)
      INNER JOIN CouponDB..RedPool rp(NOLOCK) 
              ON ra.RedPoolId = rp.ID
      WHERE ra.GUID = @GUID
      ]]>
    </select>

    <select id="GetRedRecordByRedActivityIdAndPhone">
      <![CDATA[
      SELECT rr.*,ISNULL(ucd.RequireAmount,0) RequireAmount ,ISNULL(DiscountAmount ,0) DiscountAmount,rpd.BizID CouponId
      FROM CouponDB..RedRecord rr(NOLOCK) 
      LEFT JOIN CouponDB..RedPoolDetail rpd(NOLOCK)
             ON rpd.ID = rr.RedPoolDetailID
      LEFT JOIN CouponDB..UserCouponDefine ucd (NOLOCK)
             ON ucd.IDX = rpd.BizId and( rr.BizType = 1 OR rr.BizType = 2 OR rr.BizType = 0 )
      WHERE (rr.RedActivityID = @RedActivityID OR @RedActivityID = 0) AND (PhoneNum = @PhoneNum OR @PhoneNum = '')
      ]]>
    </select>

    <select id="GetRedRecordByActivityId">
      <![CDATA[
      SELECT TOP (@Count) * FROM(
            SELECT  rr.*,
              ra.IsShowResult,
              ra.GUID, 
              ISNULL(ucd.RequireAmount,0) RequireAmount ,
              ISNULL(DiscountAmount ,0) DiscountAmount,
              rpd.BizID CouponId,
              wx.Headimgurl AvatarUrl,
                    wx.NickName,
                    ROW_NUMBER() OVER(ORDER BY rr.ID ASC) rn
            FROM CouponDB..RedRecord rr(NOLOCK)
            INNER JOIN CouponDB..RedActivity ra(NOLOCK)
                   ON ra.ID = rr.RedActivityID
            LEFT JOIN CouponDB..RedPoolDetail rpd(NOLOCK)
                   ON rpd.ID = rr.RedPoolDetailID
            LEFT JOIN CouponDB..UserCouponDefine ucd (NOLOCK)
                   ON ucd.IDX = rpd.BizId and( rr.BizType = 1 OR rr.BizType = 2 OR rr.BizType = 0 )
            LEFT JOIN [commdb].[dbo].[WeixinUser] wx(nolock)
                   ON rr.OpenId=wx.Openid and wx.OpenId IS NOT NULL and wx.OpenId!=''
            WHERE rr.RedActivityID = @RedActivityID
      ) t
      WHERE t.rn > @Start
      ]]>
    </select>

    <select id="GetRedRecordByActivityIdCount">
      <![CDATA[
       SELECT  COUNT(1)
      FROM CouponDB..RedRecord rr(NOLOCK)
      INNER JOIN CouponDB..RedActivity ra(NOLOCK)
             ON ra.ID = rr.RedActivityID
      LEFT JOIN CouponDB..RedPoolDetail rpd(NOLOCK)
             ON rpd.ID = rr.RedPoolDetailID
      LEFT JOIN CouponDB..UserCouponDefine ucd (NOLOCK)
             ON ucd.IDX = rpd.BizId and( rr.BizType = 1 OR rr.BizType = 2 OR rr.BizType = 0 )
      LEFT JOIN [commdb].[dbo].[WeixinUser] wx(nolock)
             ON rr.OpenId=wx.Openid and wx.OpenId IS NOT NULL and wx.OpenId!=''
      WHERE rr.RedActivityID = @RedActivityID
      ]]>
    </select>

    <select id="GetRedRecordById">
      <![CDATA[
      SELECT  rr.*,
              ra.GUID, 
              ISNULL(ucd.RequireAmount,0) RequireAmount ,
              ISNULL(DiscountAmount ,0) DiscountAmount,
              rpd.BizID CouponId
      FROM CouponDB..RedRecord rr(NOLOCK)
      INNER JOIN CouponDB..RedActivity ra(NOLOCK)
             ON ra.ID = rr.RedActivityID
      LEFT JOIN CouponDB..RedPoolDetail rpd(NOLOCK)
             ON rpd.ID = rr.RedPoolDetailID
      LEFT JOIN CouponDB..UserCouponDefine ucd (NOLOCK)
             ON ucd.IDX = rpd.BizId and( rr.BizType = 1 OR rr.BizType = 2 OR rr.BizType = 0 )
      WHERE rr.ID = @ID
      ]]>
    </select>


    <select id="GetRedPoolByOrderPrice">
      <![CDATA[
      SELECT * FROM CouponDB..RedPool rp(NOLOCK) WHERE rp.MinOrderPrice <= @OrderPrice AND @OrderPrice < rp.MaxOrderPrice AND Type = 1
      ]]>
    </select>
    <select id="GetRedActivityByBizIDAndBizType">
      <![CDATA[
      SELECT * FROM CouponDB..RedActivity ra(NOLOCK) WHERE ra.BizType = @BizType AND ra.BizId = @BizId
      ]]>
    </select>
    <select id="GetThirdCouponOrderID">
      <![CDATA[
      SELECT ThirdOrderID FROM CouponDB..ThirdPartyOrderRel
      where BizID=@Bizid and ThirdType=@Type
      ]]>
    </select>

    <select id="GetCouponActivityPicBySPUID">
      <![CDATA[
      SELECT TOP 1 ca.PicPath
      FROM [CouponDB].[dbo].[CouponActivityBizRel] rel
      inner join coupondb..CouponActivity ca
      on rel.CouponActivityId=ca.ID
      where rel.BizID=@SPUID and BizType=1
      ]]>
    </select>
  
<select id="GetExchangeOrderListBySupplierID">
      <![CDATA[
      SELECT ec.ID,
             TraveIDs,
             ec.PhoneNum,
             SKU.Name AS SKUName,
             ISNULL(ca.PageTitle,'') AS PageTitle,
             ec.ExchangeNo,
             ec.[Type],
             ec.ActivityType,
             ec.ActivityID,
             ec.[State],
             ec.ExchangeTargetID,
             ec.PayID,
             ec.AddInfo,
             ec.CID,
             ec.SKUID,
             ec.PromotionID,
             ec.GroupId,
             ca.SourceID,
             ca.ExpireTime ExpireTime
      		    FROM   [CouponDB]..[ExchangeCoupon] ec WITH(NOLOCK)
      			INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
      				 ON  ca.ID = ec.ActivityID
      			INNER JOIN ProductDB..SKU (NOLOCK)
      				 ON  SKU.ID = ec.SKUID
      			LEFT JOIN productdb..SKU_Ex ke(NOLOCK)
      				 ON  ke.SKUID = SKU.ID
      		  INNER JOIN productdb..SPU p(NOLOCK)
      		       ON  p.ID = SKU.SPUID
      		  LEFT JOIN hoteldb..Supplier sp(NOLOCK)
      		       ON  p.SupplierID = sp.ID
      			LEFT JOIN CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
            LEFT JOIN CouponDB..ThirdPartyOrderRel rel(nolock) on ec.id=rel.bizid
            WHERE  ec.State = 2 AND ISNULL(rc.State, 0) = 0 AND sp.ID=@SupplierID
      ]]>
    </select>

    <select id="GetExchangCouponByCouponId">
      <![CDATA[
      SELECT  TOP 1 ec.ID ,
               ISNULL(gp.State,-1) GroupState,
               ec.Price,
               ec.CreateTime,
               ec.State,
			         StateName = CASE 
                                   WHEN ec.[State] = 1 THEN '已提交'
                                   WHEN ec.[State] = 2 THEN '已支付'                                   
                                   WHEN ec.[State] = 3 THEN '已消费'
                                   WHEN ec.[State] = 4 THEN '已取消'
                                   WHEN ec.[State] = 5 THEN '已退款'
                                   WHEN ec.[State] = 6 THEN '超时支付'
                                   WHEN ec.[State] = 8 THEN '已过期'
                                   ELSE '其它'
                              END,
               ec.ExchangeNo,
               ca.PageTitle,
               ca.ExpireTime,
               Tags=ISNULL(ca.Tags,''),
               ParentID=ISNULL(pc.ParentID,0),
               SKUName=k.Name
        FROM   [CouponDB]..[ExchangeCoupon] ec  (nolock)
               INNER JOIN [CouponDB]..[CouponActivity] ca WITH(NOLOCK)
                    ON  ca.ID = ec.ActivityID
               LEFT JOIN CouponDB..[RefundCoupons] rc WITH(NOLOCK)
                    ON  rc.CouponID = ec.ID and rc.refundType=0
               LEFT JOIN HotelDB..[OrderPayment] op WITH(NOLOCK)
                    ON  op.PayOrderID = ec.PayID
               left join productdb..GroupPurchase gp (nolock) on ec.GroupId= gp.ID
               LEFT JOIN productdb..SKU k(NOLOCK) on k.ID = ec.SKUID
               LEFT JOIN productdb..SPU spu(NOLOCK) ON spu.ID = k.SPUID
               LEFT JOIN productdb..ProcudtCategory pc(NOLOCK) ON pc.ID = spu.ProductCategoryID
        WHERE  ec.ID = @CouponId
               AND ec.SKUID >-1
               AND ec.State<>40 AND ec.State<>50
      ]]>
    </select>

    <select id="GetExchangCouponByCouponOrderID">
      <![CDATA[
      SELECT 
       ec.ID ,
	ec.UserID,
	ec.PhoneNum,
	ec.ExchangeNo,
	ec.[Type],
	ec.ActivityType,
	ec.ActivityID,
	ec.[State],
	ec.ExchangeTargetID,
	ec.CreateTime,
	ec.CancelTime,
	ec.ExchangeTime,
	ec.PayID,
	Price = Convert( decimal(18,2), ec.Price),
	ec.Updator,
	ec.UpdateTime,
	ec.AddInfo,
	ec.UpgradeCount,
	ec.hasSendOverTimeMsg,
	ec.hasSendRoomAlertMsg,
	ec.CID,
	ec.SKUID,
	ec.SettlePrice,
	ec.PromotionID,
	ec.HasSettle,
	ec.GroupId,
	ec.SettleTime,
	ec.IsVIPInvatation,
	ec.CustomerType,
	ec.InnerBuyGroup,
	ec.Points,
	ec.OriPrice,
	ec.CashCouponID,
	ec.CashCouponAmount,
	ec.OrderNotice,
	ec.UserUseHousingFundAmount,
	ec.VoucherIDs,
	ec.VoucherAmount, 
	ec.OperationState, 
  ec.PhotoUrl,
	ec.OperationRemark, 
  ec.supplierID,
  ec.CouponOrderId,
  
		  ca.SourceID, 
		  p.Code CouponName, 
		  h.HotelName ObjectName, 
		  ca.ExpireTime ExpireTime, 
		  ca.NightRoomCount, 
		  ca.IsAllowMultiRoom,
		  ca.ExchangeMethod,
		  ISNULL(rc.State,0) RefundState, 
		  ISNULL(op.PayType,0) PayType, 
		  op.PayAccount PayAccount,
      ca.RelPackageAlbumsID,
      --ISNULL(coo.OperationState,0) OperationState,
      --ISNULL(coo.Remark,'') OperationRemark,
      ca.RelProductID,
      ISNULL(SKU.Name,'') SKUName,
      ISNULL(ke.BookPosition,0) BookPosition,
      ThirdPartyType=isnull(sp.ThirdPartyType,0),
      IsPackage = ISNULL(SKU.IsPackage, 0)
    FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
	    inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
	    left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
	    left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
	    left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
	    left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID 
      --left join [CouponDB]..CouponOrderOperation coo(nolock) on coo.ExchangeID = ec.ID
      left join ProductDB..SKU (nolock) on SKU.ID= ec.SKUID
      left join productdb..SKU_Ex ke(nolock)on SKU.ID = ke.SKUID
      left join ProductDB..SKU_ThirdParty sp (nolock) on sp.SKUID= ec.SKUID
        WHERE  ec.CouponOrderID = @CouponOrderID
               AND ec.SKUID >-1
               AND ec.State<>40 AND ec.State<>50
      ]]>
    </select>

    <select id="GetExchangCouponCountByCouponOrderID">
      <![CDATA[
      SELECT count(1)
    FROM [CouponDB]..[ExchangeCoupon] ec  (nolock)
	    inner join [CouponDB]..[CouponActivity] ca with(nolock) on ca.ID = ec.ActivityID
	    left join HotelDB..Package p with(nolock) on p.ID = ca.SourceID 
	    left join HotelDB..Hotel h with(nolock) on h.HotelId = p.HotelID
	    left join CouponDB..[RefundCoupons] rc with(nolock) on rc.CouponID = ec.ID and rc.refundType=0
	    left join HotelDB..[OrderPayment] op with(nolock) on op.PayOrderID = ec.PayID 
      --left join [CouponDB]..CouponOrderOperation coo(nolock) on coo.ExchangeID = ec.ID
      left join ProductDB..SKU (nolock) on SKU.ID= ec.SKUID
      left join productdb..SKU_Ex ke(nolock)on SKU.ID = ke.SKUID
      left join ProductDB..SKU_ThirdParty sp (nolock) on sp.SKUID= ec.SKUID
        WHERE  ec.CouponOrderID = @CouponOrderID
               AND ec.SKUID >-1
               AND ec.State = @State
      ]]>
    </select>
    
   <select id="GetExpiredNotRefundExchangeCouponList">
      <![CDATA[
      SELECT 
          ec.ID ,
	        ec.UserID,
	        ec.PhoneNum,
	        ec.ExchangeNo,
	        ec.[Type],
	        ec.ActivityType,
	        ec.ActivityID,
	        ec.[State],
	        ec.ExchangeTargetID,
	        ec.CreateTime,
	        ec.CancelTime,
	        ec.ExchangeTime,
	        ec.PayID,
	        Price = Convert( decimal(18,2), ec.Price),
	        ec.Updator,
	        ec.UpdateTime,
	        ec.AddInfo,
	        ec.UpgradeCount,
	        ec.hasSendOverTimeMsg,
	        ec.hasSendRoomAlertMsg,
	        ec.CID,
	        ec.SKUID,
	        ec.SettlePrice,
	        ec.PromotionID,
	        ec.HasSettle,
	        ec.GroupId,
	        ec.SettleTime,
	        ec.IsVIPInvatation,
	        ec.CustomerType,
	        ec.InnerBuyGroup,
	        ec.Points,
	        ec.OriPrice,
	        ec.CashCouponID,
	        ec.CashCouponAmount,
	        ec.OrderNotice,
	        ec.UserUseHousingFundAmount,
	        ec.VoucherIDs,
	        ec.VoucherAmount
      FROM COUPONDB.dbo.CouponActivity ca (NOLOCK) 
      INNER JOIN ExchangeCoupon ec (NOLOCK) ON ec.ActivityID = ca.ID  
      WHERE ec.State = 2 
      AND ca.ReturnPolicy = 3 
      AND ExpireTime < dateadd(day,-1,getdate()) 
      ]]>
    </select>

    <select id="SKUCouponActivityByID">
      <![CDATA[      
      DECLARE @lg geography = geography::Point(@locLat, @locLng, 4326)
      DECLARE @g geography = geography::Point(@lat, @lng, 4326)
      IF @lat > 0 AND @lng > 0 AND @geoScopeType = 3
      	BEGIN
      	    IF  @Sort = 1 OR @Sort = 3 OR @Sort = 5
      			  BEGIN
              SELECT TOP (@Count) * FROM
              (
                 SELECT *,
      						     ROW_NUMBER()over(order by  case
                                    --when @Sort = 0 then SKUID
      													    when @Sort = 1 then SellNum 
      													    when @Sort = 3 then SKUVIPPrice
      													    when @Sort = 5 then @lg.STDistance(geo) end  desc ) rn1
                 FROM
      				  (
      					  SELECT k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						     ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						     ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,
      						     ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,di.Name DistrictName,
      						     ROW_NUMBER()over(partition by k.SPUID order by  case
                                    --when @Sort = 0 then k.ID
      													    when @Sort = 1 then ca.SellNum 
      													    when @Sort = 3 then k.VIPPrice
      													    when @Sort = 5 then @lg.STDistance(p.geo) end  desc ) rn
      					  FROM ProductDB..SPU p(NOLOCK)
      					  INNER JOIN ProductDB..SKU k(NOLOCK)
      							  ON p.ID = k.SPUID
      					  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							  ON casr.SKUID=k.ID
      					  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							  ON ca.ID = casr.couponActivityID  AND ca.State=1
      					  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							  ON pc.ID = p.ProductCategoryID
      				    INNER JOIN destdb..DistrictInfo di(nolock) 
      				            ON di.DistrictID = p.DistrictID
      					  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						     ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					  WHERE @g.STDistance(p.geo) <= 300000 
                        AND p.ProductTagID = @ID 
                        AND Isnull(tor.TagID,0)!=2 
                        AND ca.SaleEndDate > GETDATE() 
                        AND pc.PayType = @PayType
                        AND ca.IsValid= 1
                        AND ca.MerchantCode='zmjd'
      				  ) tab
      				  WHERE tab.rn = 1
              )tab1 
               WHERE tab1.rn1 > @Start
      			  END
      	    ELSE
      			  BEGIN
              SELECT TOP (@Count) * FROM
              (
      				  SELECT *,
      						     ROW_NUMBER()over(order by  case
      													                  when @Sort = 0 then AlbumRank
      							 				                      when @Sort = 2 then SKUVIPPrice
      							 				                      when @Sort = 4 then @lg.STDistance(geo) end  asc ) rn1
                FROM
      				  (
      					  SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						     ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						     ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						     ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,ISNULL(pak.Rank,10000) AlbumRank,
      						     ROW_NUMBER()over(partition by k.SPUID order by  case
      							 				                      when @Sort = 0 then ISNULL(pak.Rank,10000)
      							 				                      when @Sort = 2 then k.VIPPrice
      							 				                      when @Sort = 4 then @lg.STDistance(p.geo) end  asc ) rn
      					  FROM ProductDB..SPU p(NOLOCK)
      					  INNER JOIN ProductDB..SKU k(NOLOCK)
      							  ON p.ID = k.SPUID
      					  INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							  ON casr.SKUID=k.ID
      					  INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							  ON ca.ID = casr.couponActivityID  AND ca.State=1
      					  INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							  ON pc.ID = p.ProductCategoryID
      				    INNER JOIN destdb..DistrictInfo di(nolock) 
      				            ON di.DistrictID = p.DistrictID
                  LEFT JOIN productdb..ProductAlbumSKU pak(nolock)
      				            ON pak.SKUID = k.ID
      					  LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						     ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					  WHERE @g.STDistance(p.geo) <= 300000 
                        AND p.ProductTagID = @ID 
                        AND Isnull(tor.TagID,0)!=2 
                        AND ca.SaleEndDate > GETDATE()
                        AND pc.PayType = @PayType
                        AND ca.IsValid= 1
                        AND ca.MerchantCode='zmjd'
      				  ) tab
      				  WHERE tab.rn = 1
              ) tab1 WHERE tab1.rn1 > @Start
      			  END
      	END       
      ELSE
      	BEGIN
      	    IF @Sort = 1 OR @Sort = 3 OR @Sort = 5 
      			BEGIN
            SELECT TOP (@Count) * FROM
            (
      				SELECT *,
      						   ROW_NUMBER()over(order by  case
                                    --when @Sort = 0 then SKUID
      													    when @Sort = 1 then SellNum 
      													    when @Sort = 3 then SKUVIPPrice
      													    when @Sort = 5 then @lg.STDistance(geo) end  desc ) rn1
              FROM
      				(			
      					SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						   ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						   ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						   ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,
      						   ROW_NUMBER()over(partition by k.SPUID order by  case
                                    --when @Sort = 0 then k.ID
      													    when @Sort = 1 then ca.SellNum 
      													    when @Sort = 3 then k.VIPPrice
      													    when @Sort = 5 then @lg.STDistance(p.geo) end  desc ) rn
      					FROM ProductDB..SPU p(NOLOCK)
      					INNER JOIN ProductDB..SKU k(NOLOCK)
      							ON p.ID = k.SPUID
      					INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							ON casr.SKUID=k.ID
      					INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							ON ca.ID = casr.couponActivityID  AND ca.State=1
      					INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							ON pc.ID = p.ProductCategoryID
      				  INNER JOIN destdb..DistrictInfo di(nolock) 
      				          ON di.DistrictID = p.DistrictID
      					LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						   ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					WHERE (p.DistrictID = @DistrictID OR @DistrictID = 0) 
                      AND p.ProductTagID = @ID 
                      AND Isnull(tor.TagID,0)!=2 AND ca.SaleEndDate > GETDATE() 
                      AND pc.PayType = @PayType
                      AND ca.IsValid= 1
                      AND ca.MerchantCode='zmjd'
      				) tab
      				WHERE tab.rn = 1
            )tab1 WHERE tab1.rn1 > @Start
      			END
      	    ELSE
      			BEGIN
            SELECT TOP (@Count) * FROM
            (
      				SELECT *,
      						   ROW_NUMBER()over(order by  case
      													                when @Sort = 0 then AlbumRank
      													                when @Sort = 2 then SKUVIPPrice
      													                when @Sort = 4 then @lg.STDistance(geo) end  asc ) rn1
              FROM
      				(
      					SELECT  k.ID SKUID,k.VIPPrice SKUVIPPrice,k.Points,k.MarketPrice SKUMarketPrice,pc.PayType,ca.ID CouponActivityID,PageTitle,Tags,TotalNum,SellNum,SingleBuyNum,
      						   ca.Type,ca.Price,MarketPrice =Convert(Decimal(18,2),ca.MarketPrice),PicPath,ca.State,EffectiveTime,ca.CreateTime,ExpireTime,SaleEndDate,
      						   ca.Rank,ca.IsShowCountDown,ReturnPolicy,ManuSellNum,NightRoomCount,MinBuyNum,IsFestivalCanUse,ca.GroupNo,di.Name DistrictName,
      						   ExchangeMethod,IsVipExclusive,MoreDetailUrl,p.geo,CONVERT(decimal(18,1),ISNULL(@lg.STDistance(p.geo)/1000,0)) Distance,ISNULL(pak.Rank,10000) AlbumRank,
      						   ROW_NUMBER()over(partition by k.SPUID order by  case
      													                when @Sort = 0 then ISNULL(pak.Rank,10000)
      													                when @Sort = 2 then k.VIPPrice
      													                when @Sort = 4 then @lg.STDistance(p.geo) end  asc ) rn
      					FROM ProductDB..SPU p(NOLOCK)
      					INNER JOIN ProductDB..SKU k(NOLOCK)
      							ON p.ID = k.SPUID
      					INNER JOIN CouponDB..CouponActivitySKURel casr (nolock)
      							ON casr.SKUID=k.ID
      					INNER JOIN CouponDB..CouponActivity ca(nolock) 
      							ON ca.ID = casr.couponActivityID  AND ca.State=1
      					INNER JOIN ProductDB..ProcudtCategory pc(NOLOCK) 
      							ON pc.ID = p.ProductCategoryID
      				  INNER JOIN destdb..DistrictInfo di(nolock) 
      				          ON di.DistrictID = p.DistrictID
                LEFT JOIN productdb..ProductAlbumSKU pak(nolock)
      				         ON pak.SKUID = k.ID
      					LEFT JOIN [ProductDB].[dbo].[TagObjRel] tor 
      						   ON tor.ObjID = k.ID and tor.ObjType=1 and tor.TagID=2
      					WHERE (p.DistrictID = @DistrictID OR @DistrictID = 0) 
                      AND p.ProductTagID = @ID 
                      AND Isnull(tor.TagID,0)!=2 
                      AND ca.SaleEndDate > GETDATE() 
                      AND pc.PayType = @PayType
                      AND ca.IsValid= 1
                      AND ca.MerchantCode='zmjd'
      				) tab
      				WHERE tab.rn = 1
            ) tab1 WHERE tab1.rn1 > @Start
      			END			
      	END
      ]]>
    </select>

   <select id="GetUserCouponUseCondationEntity">
      <![CDATA[
      SELECT 
         *
      FROM UserCouponUseCondation (NOLOCK) 
      WHERE idx = @IDX
      ]]>
    </select>

    <select id="GetCouponCondationByMarketingType">
      <![CDATA[	  
       SELECT ucd.*
      FROM   CouponDB..UserCouponUseCondation ucc(NOLOCK)
      INNER JOIN coupondb..UserCouponDefine ucd(nolock)
              ON ucd.IDX = ucc.CouponDefineID
      WHERE ucc.IntVal = @IntVal 
            AND ucc.CondationType = @CondationType
            AND (ucd.MarketingType = @MarketingType OR @MarketingType=-1)
      ]]>
    </select>
  </statements>
</configuration>